"[{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\__mocks__\\\\fileMock.js\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\babel.config.js\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\debug-test.js\",\"messages\":[{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":4,\"column\":1,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":4,\"endColumn\":12,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[86,133],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":7,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":7,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[164,201],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":2,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Simple debug test to verify test execution\\nimport { test, expect } from \u0027vitest\u0027;\\n\\nconsole.log(\u0027Debug test file is being loaded\u0027);\\n\\ntest(\u0027debug test\u0027, () =\u003e {\\n  console.log(\u0027Debug test is running\u0027);\\n  expect(1 + 1).toBe(2);\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\eslint.config.cjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\eslint.config.mjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\jest.config.js\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\jest.setup.js\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\minimal-test.spec.cjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\minimal.test.cjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\new-test.js\",\"messages\":[{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":5,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":5,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[109,144],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Simple test to verify Vitest execution\\nimport { test, expect } from \u0027vitest\u0027;\\n\\ntest(\u0027new test\u0027, () =\u003e {\\n  console.log(\u0027New test is running\u0027);\\n  expect(1 + 1).toBe(2);\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\postcss.config.cjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\react.test.jsx\",\"messages\":[{\"ruleId\":null,\"fatal\":true,\"severity\":2,\"message\":\"Parsing error: ESLint was configured to run on `\u003ctsconfigRootDir\u003e/react.test.jsx` using `parserOptions.project`: \u003ctsconfigRootDir\u003e/tsconfig.app.json\\nHowever, that TSConfig does not include this file. Either:\\n- Change ESLint\u0027s list of included files to not include this file\\n- Change that TSConfig to include this file\\n- Create a new TSConfig that includes this file and include it in your parserOptions.project\\nSee the typescript-eslint docs for more info: https://typescript-eslint.io/troubleshooting/typed-linting#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file\",\"nodeType\":null}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":1,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Simple React component test\\nimport { render, screen } from \u0027@testing-library/react\u0027;\\nimport { test, expect } from \u0027vitest\u0027;\\nimport React from \u0027react\u0027;\\n\\nfunction Greeting({ name = \u0027World\u0027 }) {\\n  return \u003ch1\u003eHello, {name}!\u003c/h1\u003e;\\n}\\n\\ntest(\u0027renders greeting\u0027, () =\u003e {\\n  render(\u003cGreeting /\u003e);\\n  expect(screen.getByText(\u0027Hello, World!\u0027)).toBeInTheDocument();\\n});\\n\\ntest(\u0027renders with custom name\u0027, () =\u003e {\\n  render(\u003cGreeting name=\\\"Vitest\\\" /\u003e);\\n  expect(screen.getByText(\u0027Hello, Vitest!\u0027)).toBeInTheDocument();\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\scripts\\\\migrate-from-json.js\",\"messages\":[{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":11,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":11,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[283,344],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":23,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":23,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[593,628],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":25,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":25,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[653,709],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":32,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":32,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[779,826],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":40,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":40,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1060,1112],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":42,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":42,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1164,1222],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":99,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":99,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3145,3191],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":100,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":100,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3194,3222],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":101,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":101,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3225,3283],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":102,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":102,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3286,3347],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":103,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":103,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3350,3419],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":104,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":104,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3422,3483],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":106,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":106,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3489,3520],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":107,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":107,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3523,3587],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":108,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":108,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3590,3658],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":109,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":109,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[3661,3725],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":16,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Migration script using prompts.json as source\\nconst fs = require(\u0027fs\u0027);\\nconst path = require(\u0027path\u0027);\\n\\n// Helper functions\\nconst readJsonFile = (filePath) =\u003e {\\n  try {\\n    const content = fs.readFileSync(filePath, \u0027utf-8\u0027);\\n    return JSON.parse(content);\\n  } catch (error) {\\n    console.error(`Error reading JSON file ${filePath}:`, error);\\n    process.exit(1);\\n  }\\n};\\n\\nconst writeFile = (filePath, content) =\u003e {\\n  try {\\n    const dir = path.dirname(filePath);\\n    if (!fs.existsSync(dir)) {\\n      fs.mkdirSync(dir, { recursive: true });\\n    }\\n    fs.writeFileSync(filePath, content);\\n    console.log(`Γ£à Wrote ${filePath}`);\\n  } catch (error) {\\n    console.error(`Error writing file ${filePath}:`, error);\\n    process.exit(1);\\n  }\\n};\\n\\n// Main function\\nconst main = () =\u003e {\\n  console.log(\u0027Starting migration from JSON...\u0027);\\n  \\n  // Paths\\n  const rootDir = path.join(__dirname, \u0027..\u0027);\\n  const promptsFile = path.join(rootDir, \u0027src\u0027, \u0027data\u0027, \u0027prompts\u0027, \u0027prompts.json\u0027);\\n  const outputDir = path.join(rootDir, \u0027src\u0027, \u0027data\u0027, \u0027prompts\u0027);\\n  \\n  // Read prompts\\n  console.log(`Reading prompts from: ${promptsFile}`);\\n  const { prompts } = readJsonFile(promptsFile);\\n  console.log(`Found ${prompts.length} prompts to process`);\\n  \\n  // Categorize prompts\\n  const beginnerPrompts = [];\\n  const intermediatePrompts = [];\\n  const advancedPrompts = [];\\n  \\n  // Simple categorization logic (customize as needed)\\n  prompts.forEach((prompt, index) =\u003e {\\n    // Default to intermediate for now\\n    const basePrompt = {\\n      ...prompt,\\n      estimatedTime: \u002715-30 minutes\u0027,\\n      prerequisites: [\u0027Basic understanding of the topic\u0027]\\n    };\\n    \\n    // Simple round-robin distribution for testing\\n    if (index % 3 === 0) {\\n      beginnerPrompts.push({\\n        ...basePrompt,\\n        difficulty: \u0027Easy\u0027,\\n        estimatedTime: \u002715 minutes\u0027\\n      });\\n    } else if (index % 3 === 1) {\\n      intermediatePrompts.push({\\n        ...basePrompt,\\n        difficulty: \u0027Challenging\u0027,\\n        expectedOutcome: \u0027Practical application of the concept\u0027,\\n        followUpActions: [\u0027Review materials\u0027, \u0027Practice implementation\u0027]\\n      });\\n    } else {\\n      advancedPrompts.push({\\n        ...basePrompt,\\n        difficulty: \u0027Advanced\u0027,\\n        expectedOutcome: \u0027Comprehensive solution ready for implementation\u0027,\\n        followUpActions: [\u0027Review with team\u0027, \u0027Test in staging\u0027],\\n        complexityFactors: [\u0027Multiple components\u0027, \u0027Integration requirements\u0027],\\n        industryContext: \u0027Cross-industry application\u0027\\n      });\\n    }\\n  });\\n  \\n  // Write output files\\n  const writePromptsFile = (fileName, prompts, type) =\u003e {\\n    const filePath = path.join(outputDir, fileName);\\n    const content = `// Auto-generated by migrate-from-json.js\\nimport { ${type} } from \u0027./types\u0027;\\n\\nexport const ${type.toLowerCase()}Prompts: ${type}[] = ${JSON.stringify(prompts, null, 2)};`;\\n    writeFile(filePath, content);\\n  };\\n  \\n  writePromptsFile(\u0027beginner-prompts.ts\u0027, beginnerPrompts, \u0027BeginnerPrompt\u0027);\\n  writePromptsFile(\u0027intermediate-prompts.ts\u0027, intermediatePrompts, \u0027IntermediatePrompt\u0027);\\n  writePromptsFile(\u0027advanced-prompts.ts\u0027, advancedPrompts, \u0027AdvancedPrompt\u0027);\\n  \\n  // Print summary\\n  console.log(\u0027\\\\nMigration complete! Summary:\u0027);\\n  console.log(\u0027=\u0027.repeat(50));\\n  console.log(`Total prompts processed: ${prompts.length}`);\\n  console.log(`- Beginner prompts: ${beginnerPrompts.length}`);\\n  console.log(`- Intermediate prompts: ${intermediatePrompts.length}`);\\n  console.log(`- Advanced prompts: ${advancedPrompts.length}`);\\n  \\n  console.log(\u0027\\\\nOutput files:\u0027);\\n  console.log(`- ${path.join(outputDir, \u0027beginner-prompts.ts\u0027)}`);\\n  console.log(`- ${path.join(outputDir, \u0027intermediate-prompts.ts\u0027)}`);\\n  console.log(`- ${path.join(outputDir, \u0027advanced-prompts.ts\u0027)}`);\\n};\\n\\n// Run the script\\nmain();\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\scripts\\\\migrate-prompts-fixed.js\",\"messages\":[{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":8,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":8,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[196,248],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":17,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":17,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[585,664],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":18,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":18,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[669,696],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":30,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":30,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[945,980],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":33,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":33,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[1022,1088],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":40,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":40,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1155,1205],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":49,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":49,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[1480,1548],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":50,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":50,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1553,1610],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":51,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":51,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1615,1685],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":56,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":56,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1734,1789],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":63,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":63,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[2015,2076],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":65,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":65,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[2101,2162],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":70,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":70,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[2217,2261],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":126,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":126,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4189,4261],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":128,\"column\":7,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":128,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4308,4371],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":143,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":143,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4825,4874],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":144,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":144,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4877,4905],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":145,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":145,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4908,4978],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":146,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":146,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4981,5042],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":147,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":147,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5045,5114],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":148,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":148,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5117,5178],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":149,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":149,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5181,5209],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":150,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":150,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5212,5279],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":23,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Fixed migration script with better error handling and JSON parsing\\nconst fs = require(\u0027fs\u0027);\\nconst path = require(\u0027path\u0027);\\n\\n// Helper functions\\nconst readJsonFile = (filePath) =\u003e {\\n  try {\\n    console.log(`Attempting to read file: ${filePath}`);\\n    if (!fs.existsSync(filePath)) {\\n      throw new Error(`File not found: ${filePath}`);\\n    }\\n    const content = fs.readFileSync(filePath, \u0027utf-8\u0027);\\n    // Remove any comments from JSON\\n    const jsonContent = content.replace(/\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/|([^\\\\\\\\:]|^)\\\\/\\\\/.*$/gm, \u0027$1\u0027);\\n    return JSON.parse(jsonContent);\\n  } catch (error) {\\n    console.error(`Γ¥î Error reading/parsing JSON file ${filePath}:`, error.message);\\n    console.error(error.stack);\\n    process.exit(1);\\n  }\\n};\\n\\nconst writeFile = (filePath, content) =\u003e {\\n  try {\\n    const dir = path.dirname(filePath);\\n    if (!fs.existsSync(dir)) {\\n      fs.mkdirSync(dir, { recursive: true });\\n    }\\n    fs.writeFileSync(filePath, content);\\n    console.log(`Γ£à Wrote ${filePath}`);\\n    return true;\\n  } catch (error) {\\n    console.error(`Γ¥î Error writing file ${filePath}:`, error.message);\\n    return false;\\n  }\\n};\\n\\n// Main function\\nconst main = () =\u003e {\\n  console.log(\u0027≡ƒÜÇ Starting migration from JSON...\u0027);\\n  \\n  // Paths\\n  const rootDir = path.join(__dirname, \u0027..\u0027);\\n  const promptsFile = path.join(rootDir, \u0027src\u0027, \u0027data\u0027, \u0027prompts\u0027, \u0027prompts.json\u0027);\\n  const outputDir = path.join(rootDir, \u0027src\u0027, \u0027data\u0027, \u0027prompts\u0027);\\n  \\n  // Validate paths\\n  if (!fs.existsSync(promptsFile)) {\\n    console.error(`Γ¥î Error: Input file does not exist: ${promptsFile}`);\\n    console.log(\u0027Current working directory:\u0027, process.cwd());\\n    console.log(\u0027Resolved prompts file path:\u0027, path.resolve(promptsFile));\\n    process.exit(1);\\n  }\\n  \\n  // Read prompts\\n  console.log(`≡ƒôû Reading prompts from: ${promptsFile}`);\\n  let promptsData;\\n  try {\\n    promptsData = readJsonFile(promptsFile);\\n    if (!promptsData.prompts || !Array.isArray(promptsData.prompts)) {\\n      throw new Error(\u0027Invalid format: expected { \\\"prompts\\\": [...] }\u0027);\\n    }\\n    console.log(`Γ£à Found ${promptsData.prompts.length} prompts`);\\n  } catch (error) {\\n    console.error(\u0027Γ¥î Failed to process prompts:\u0027, error.message);\\n    process.exit(1);\\n  }\\n  \\n  // Categorize prompts\\n  console.log(\u0027\\\\n≡ƒôè Categorizing prompts...\u0027);\\n  const beginnerPrompts = [];\\n  const intermediatePrompts = [];\\n  const advancedPrompts = [];\\n  \\n  // Simple categorization logic (customize as needed)\\n  promptsData.prompts.forEach((prompt, index) =\u003e {\\n    const basePrompt = {\\n      ...prompt,\\n      estimatedTime: \u002715-30 minutes\u0027,\\n      prerequisites: [\u0027Basic understanding of the topic\u0027],\\n      createdAt: new Date().toISOString()\\n    };\\n    \\n    // Simple round-robin distribution for testing\\n    if (index % 3 === 0) {\\n      beginnerPrompts.push({\\n        ...basePrompt,\\n        difficulty: \u0027Beginner\u0027,\\n        estimatedTime: \u002715-20 minutes\u0027,\\n        expectedOutcome: \u0027Basic understanding of the concept\u0027,\\n        followUpActions: [\u0027Review notes\u0027, \u0027Try a simple example\u0027]\\n      });\\n    } else if (index % 3 === 1) {\\n      intermediatePrompts.push({\\n        ...basePrompt,\\n        difficulty: \u0027Intermediate\u0027,\\n        estimatedTime: \u002720-30 minutes\u0027,\\n        expectedOutcome: \u0027Practical application of the concept\u0027,\\n        followUpActions: [\u0027Review materials\u0027, \u0027Practice implementation\u0027],\\n        complexityFactors: [\u0027Basic integration\u0027]\\n      });\\n    } else {\\n      advancedPrompts.push({\\n        ...basePrompt,\\n        difficulty: \u0027Advanced\u0027,\\n        estimatedTime: \u002730-45 minutes\u0027,\\n        expectedOutcome: \u0027Comprehensive solution ready for implementation\u0027,\\n        followUpActions: [\u0027Review with team\u0027, \u0027Test in staging\u0027],\\n        complexityFactors: [\u0027Multiple components\u0027, \u0027Integration requirements\u0027],\\n        industryContext: \u0027Cross-industry application\u0027\\n      });\\n    }\\n  });\\n  \\n  // Write output files\\n  const writePromptsFile = (fileName, prompts, type) =\u003e {\\n    const filePath = path.join(outputDir, fileName);\\n    const content = `// Auto-generated by migrate-prompts-fixed.js\\n// Generated on: ${new Date().toISOString()}\\n\\nimport { ${type} } from \u0027./types\u0027;\\n\\nexport const ${type.toLowerCase()}Prompts: ${type}[] = ${JSON.stringify(prompts, null, 2)};\\n`;\\n    \\n    console.log(`\\\\n≡ƒô¥ Writing ${prompts.length} prompts to ${fileName}...`);\\n    if (writeFile(filePath, content)) {\\n      console.log(`Γ£à Successfully wrote ${path.basename(filePath)}`);\\n    }\\n  };\\n  \\n  // Create output directory if it doesn\u0027t exist\\n  if (!fs.existsSync(outputDir)) {\\n    fs.mkdirSync(outputDir, { recursive: true });\\n  }\\n  \\n  // Write the prompt files\\n  writePromptsFile(\u0027beginner-prompts.ts\u0027, beginnerPrompts, \u0027BeginnerPrompt\u0027);\\n  writePromptsFile(\u0027intermediate-prompts.ts\u0027, intermediatePrompts, \u0027IntermediatePrompt\u0027);\\n  writePromptsFile(\u0027advanced-prompts.ts\u0027, advancedPrompts, \u0027AdvancedPrompt\u0027);\\n  \\n  // Print summary\\n  console.log(\u0027\\\\n≡ƒÄë Migration complete! Summary:\u0027);\\n  console.log(\u0027=\u0027.repeat(50));\\n  console.log(`Total prompts processed: ${promptsData.prompts.length}`);\\n  console.log(`- Beginner prompts: ${beginnerPrompts.length}`);\\n  console.log(`- Intermediate prompts: ${intermediatePrompts.length}`);\\n  console.log(`- Advanced prompts: ${advancedPrompts.length}`);\\n  console.log(\u0027=\u0027.repeat(50));\\n  console.log(\u0027\\\\nΓ£à All done! Check the output files in:\u0027, outputDir);\\n};\\n\\n// Run the script\\nmain();\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\scripts\\\\migrate-prompts.cjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\scripts\\\\migrate-prompts.js\",\"messages\":[{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":32,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":32,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1087,1145],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":109,\"column\":7,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":109,\"endColumn\":20,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[3992,4054],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":150,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":150,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5165,5211],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":151,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":151,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5214,5242],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":152,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":152,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5245,5303],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":153,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":153,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5306,5433],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":154,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":154,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5436,5575],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":155,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":155,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[5578,5705],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":160,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":160,\"endColumn\":17,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"warn\"},\"fix\":{\"range\":[5902,5980],\"text\":\"\"},\"desc\":\"Remove the console.warn().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":164,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":164,\"endColumn\":14},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":170,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":170,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[6227,6302],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":174,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":174,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[6330,6378],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":12,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"const fs = require(\u0027fs\u0027);\\nconst path = require(\u0027path\u0027);\\n\\n// Helper function to parse JavaScript object without eval\\nfunction parsePromptsObject(content) {\\n  // Extract the array content\\n  const arrayStart = content.indexOf(\u0027[\u0027);\\n  const arrayEnd = content.lastIndexOf(\u0027]\u0027);\\n  if (arrayStart === -1 || arrayEnd === -1) {\\n    throw new Error(\u0027Could not find array in source file\u0027);\\n  }\\n\\n  const arrayContent = content.slice(arrayStart, arrayEnd + 1);\\n  \\n  // Transform to valid JSON\\n  const jsonContent = arrayContent\\n    .replace(/([\\\\w\\\\d_]+):/g, \u0027\\\"$1\\\":\u0027) // Add quotes around keys\\n    .replace(/\u0027/g, \u0027\\\"\u0027) // Replace single quotes with double quotes\\n    .replace(/,\\\\s*\\\\n\\\\s*\\\\}/g, \u0027 }\u0027) // Remove trailing commas in objects\\n    .replace(/,\\\\s*\\\\n\\\\s*\\\\]/g, \u0027 ]\u0027); // Remove trailing commas in arrays\\n\\n  return JSON.parse(jsonContent);\\n}\\n\\n// Read and parse the source file\\ntry {\\n  const sourcePath = path.join(__dirname, \u0027../src/data/prompts-data.ts\u0027);\\n  const sourceContent = fs.readFileSync(sourcePath, \u0027utf-8\u0027);\\n  \\n  // Parse the prompts\\n  const prompts = parsePromptsObject(sourceContent);\\n  console.log(`Found ${prompts.length} prompts to migrate`);\\n  \\n  // For testing with a subset\\n  // const prompts = parsePromptsObject(sourceContent).slice(0, 5);\\n\\n  // Categorize prompts by difficulty based on their content and structure\\n  const beginnerPrompts = [];\\n  const intermediatePrompts = [];\\n  const advancedPrompts = [];\\n\\n  // Helper function to estimate prompt complexity\\n  const estimateComplexity = (prompt) =\u003e {\\n    const text = `${prompt.title} ${prompt.description} ${prompt.prompt}`.toLowerCase();\\n    const wordCount = prompt.prompt.split(/\\\\s+/).length;\\n    \\n    // Check for advanced indicators\\n    const advancedIndicators = [\\n      \u0027complex\u0027, \u0027advanced\u0027, \u0027expert\u0027, \u0027master\u0027, \u0027comprehensive\u0027,\\n      \u0027multiple\u0027, \u0027strategic\u0027, \u0027analysis\u0027, \u0027evaluate\u0027, \u0027synthesize\u0027\\n    ];\\n    \\n    // Check for beginner indicators\\n    const beginnerIndicators = [\\n      \u0027basic\u0027, \u0027introduction\u0027, \u0027beginner\u0027, \u0027simple\u0027, \u0027overview\u0027,\\n      \u0027first\u0027, \u0027fundamental\u0027, \u0027getting started\u0027\\n    ];\\n    \\n    const hasAdvanced = advancedIndicators.some(term =\u003e text.includes(term));\\n    const hasBeginner = beginnerIndicators.some(term =\u003e text.includes(term));\\n    \\n    if (hasAdvanced) return \u0027advanced\u0027;\\n    if (hasBeginner) return \u0027beginner\u0027;\\n    \\n    // Default to intermediate if no clear indicators\\n    return wordCount \u003e 100 ? \u0027intermediate\u0027 : \u0027beginner\u0027;\\n  };\\n\\n  // Process each prompt\\n  prompts.forEach(prompt =\u003e {\\n    try {\\n      // Default values for required fields\\n      const basePrompt = {\\n        ...prompt,\\n        promptGroupId: prompt.promptGroupId || \u0027general\u0027,\\n        tags: prompt.tags || [],\\n        estimatedTime: \u002715-30 minutes\u0027,\\n        prerequisites: [\u0027Basic understanding of the topic\u0027],\\n      };\\n\\n      const complexity = estimateComplexity(prompt);\\n      \\n      // Categorize based on estimated complexity\\n      if (complexity === \u0027beginner\u0027) {\\n        beginnerPrompts.push({\\n          ...basePrompt,\\n          difficulty: [\u0027Very Easy\u0027, \u0027Easy\u0027, \u0027Moderate\u0027][Math.floor(Math.random() * 3)],\\n        });\\n      } \\n      else if (complexity === \u0027intermediate\u0027) {\\n        intermediatePrompts.push({\\n          ...basePrompt,\\n          difficulty: \u0027Challenging\u0027,\\n          expectedOutcome: \u0027Practical application and understanding of the concept\u0027,\\n          followUpActions: [\u0027Review materials\u0027, \u0027Practice implementation\u0027, \u0027Seek feedback\u0027]\\n        });\\n      } \\n      else { // advanced\\n        advancedPrompts.push({\\n          ...basePrompt,\\n          difficulty: [\u0027Advanced\u0027, \u0027Expert\u0027, \u0027Master\u0027][Math.floor(Math.random() * 3)],\\n          expectedOutcome: \u0027Comprehensive solution ready for implementation\u0027,\\n          followUpActions: [\u0027Review with team\u0027, \u0027Test in staging\u0027, \u0027Gather user feedback\u0027],\\n          complexityFactors: [\u0027Multiple components\u0027, \u0027Integration requirements\u0027, \u0027High stakes\u0027],\\n          industryContext: \u0027Cross-industry application\u0027\\n        });\\n      }\\n    } catch (error) {\\n      console.error(`Error processing prompt ${prompt.id}:`, error);\\n    }\\n  });\\n\\n  // Write to files\\n  const outputDir = path.join(__dirname, \u0027../src/data/prompts\u0027);\\n  \\n  // Ensure directory exists\\n  if (!fs.existsSync(outputDir)) {\\n    fs.mkdirSync(outputDir, { recursive: true });\\n  }\\n\\n  // Format a prompt array as TypeScript code\\n  const formatPrompts = (prompts, type) =\u003e {\\n    return `// Auto-generated by migrate-prompts.js\\n// Do not edit this file directly - update the source in prompts-data.ts and re-run the migration script\\n\\nimport { ${type} } from \u0027./types\u0027;\\n\\nexport const ${type.toLowerCase()}Prompts: ${type}[] = ${JSON.stringify(prompts, null, 2)};`;\\n  };\\n\\n  // Write beginner prompts\\n  fs.writeFileSync(\\n    path.join(outputDir, \u0027beginner-prompts.ts\u0027),\\n    formatPrompts(beginnerPrompts, \u0027BeginnerPrompt\u0027)\\n  );\\n\\n  // Write intermediate prompts\\n  fs.writeFileSync(\\n    path.join(outputDir, \u0027intermediate-prompts.ts\u0027),\\n    formatPrompts(intermediatePrompts, \u0027IntermediatePrompt\u0027)\\n  );\\n\\n  // Write advanced prompts\\n  fs.writeFileSync(\\n    path.join(outputDir, \u0027advanced-prompts.ts\u0027),\\n    formatPrompts(advancedPrompts, \u0027AdvancedPrompt\u0027)\\n  );\\n\\n  // Print summary\\n  console.log(\u0027\\\\nMigration complete! Summary:\u0027);\\n  console.log(\u0027=\u0027.repeat(50));\\n  console.log(`Total prompts processed: ${prompts.length}`);\\n  console.log(`- Beginner prompts: ${beginnerPrompts.length} (${Math.round((beginnerPrompts.length / prompts.length) * 100)}%)`);\\n  console.log(`- Intermediate prompts: ${intermediatePrompts.length} (${Math.round((intermediatePrompts.length / prompts.length) * 100)}%)`);\\n  console.log(`- Advanced prompts: ${advancedPrompts.length} (${Math.round((advancedPrompts.length / prompts.length) * 100)}%)`);\\n  \\n  // Check for any uncategorized prompts\\n  const uncategorized = prompts.length - (beginnerPrompts.length + intermediatePrompts.length + advancedPrompts.length);\\n  if (uncategorized \u003e 0) {\\n    console.warn(`\\\\nΓÜá∩╕Å  Warning: ${uncategorized} prompts were not categorized!`);\\n  }\\n  \\n  // Verify output files\\n  console.log(\u0027\\\\nOutput files:\u0027);\\n  [\\n    path.join(outputDir, \u0027beginner-prompts.ts\u0027),\\n    path.join(outputDir, \u0027intermediate-prompts.ts\u0027),\\n    path.join(outputDir, \u0027advanced-prompts.ts\u0027)\\n  ].forEach(file =\u003e {\\n    console.log(`- ${file} (${Math.round(fs.statSync(file).size / 1024)} KB)`);\\n  });\\n\\n} catch (error) {\\n  console.error(\u0027Error during migration:\u0027, error);\\n  process.exit(1);\\n}\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\scripts\\\\migrate-prompts.ts\",\"messages\":[{\"ruleId\":null,\"fatal\":true,\"severity\":2,\"message\":\"Parsing error: Unexpected token )\",\"line\":9,\"column\":21,\"nodeType\":null}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":1,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import { readFileSync, writeFileSync, existsSync, mkdirSync, readdirSync } from \u0027fs\u0027;\\nimport { join, dirname } from \u0027path\u0027;\\nimport { fileURLToPath } from \u0027url\u0027;\\n\\n// This will be included in the build but helps with type checking\\nimport \u0027./types\u0027;\\n\\n// Get current directory in a way that works with both ESM and CommonJS\\nconst getDirname = (): string =\u003e {\\n  try {\\n    // This works in CommonJS\\n    if (typeof __dirname !== \u0027undefined\u0027) {\\n      return __dirname;\\n    }\\n  } catch (e) {\\n    // __dirname not available, try ESM approach\\n  }\\n  \\n  try {\\n    // This works in ESM with import.meta\\n    // @ts-ignore - import.meta is valid in ESM\\n    if (typeof import.meta?.url === \u0027string\u0027) {\\n      // @ts-ignore - fileURLToPath is valid in Node.js\\n      return dirname(fileURLToPath(import.meta.url));\\n    }\\n  } catch (e) {\\n    // import.meta not available\\n  }\\n  \\n  // Fallback to process.cwd() if neither is available\\n  return process.cwd();\\n};\\n\\nconst __dirname = getDirname();\\n\\n// Define the prompt interface from the source file\\ninterface SourcePrompt {\\n  id: string;\\n  categoryId: string;\\n  subcategoryId: string;\\n  promptGroupId?: string;\\n  title: string;\\n  description: string;\\n  prompt: string;\\n  tags?: string[];\\n}\\n\\n// Define the target prompt interfaces\\ninterface BasePrompt {\\n  id: string;\\n  categoryId: string;\\n  subcategoryId: string;\\n  promptGroupId: string;\\n  title: string;\\n  description: string;\\n  prompt: string;\\n  tags: string[];\\n  estimatedTime: string;\\n  prerequisites: string[];\\n}\\n\\ninterface BeginnerPrompt extends BasePrompt {\\n  difficulty: \u0027Very Easy\u0027 | \u0027Easy\u0027 | \u0027Moderate\u0027;\\n}\\n\\ninterface IntermediatePrompt extends BasePrompt {\\n  difficulty: \u0027Moderate\u0027 | \u0027Challenging\u0027 | \u0027Advanced\u0027;\\n  expectedOutcome: string;\\n  followUpActions: string[];\\n}\\n\\ninterface AdvancedPrompt extends BasePrompt {\\n  difficulty: \u0027Advanced\u0027 | \u0027Expert\u0027 | \u0027Master\u0027;\\n  expectedOutcome: string;\\n  followUpActions: string[];\\n  complexityFactors: string[];\\n  industryContext: string;\\n}\\n\\n// Helper function to parse JavaScript object without eval\\nfunction parsePromptsObject(content: string): SourcePrompt[] {\\n  // Extract the array content\\n  const arrayStart = content.indexOf(\u0027[\u0027);\\n  const arrayEnd = content.lastIndexOf(\u0027]\u0027);\\n  if (arrayStart === -1 || arrayEnd === -1) {\\n    throw new Error(\u0027Could not find array in source file\u0027);\\n  }\\n\\n  const arrayContent = content.slice(arrayStart, arrayEnd + 1);\\n  \\n  // Transform to valid JSON\\n  const jsonContent = arrayContent\\n    .replace(/([\\\\w\\\\d_]+):/g, \u0027\\\"$1\\\":\u0027) // Add quotes around keys\\n    .replace(/\u0027/g, \u0027\\\"\u0027) // Replace single quotes with double quotes\\n    .replace(/,\\\\s*\\\\n\\\\s*\\\\}/g, \u0027 }\u0027) // Remove trailing commas in objects\\n    .replace(/,\\\\s*\\\\n\\\\s*\\\\]/g, \u0027 ]\u0027); // Remove trailing commas in arrays\\n\\n  return JSON.parse(jsonContent);\\n}\\n\\n// Read and parse the source file\\ntry {\\n  const sourcePath = join(__dirname, \u0027../src/data/prompts-data.ts\u0027);\\n  const sourceContent = readFileSync(sourcePath, \u0027utf-8\u0027);\\n  \\n  // Parse the prompts\\n  const prompts = parsePromptsObject(sourceContent);\\n  console.log(`Found ${prompts.length} prompts to migrate`);\\n  \\n  // For testing with a subset\\n  // const prompts = parsePromptsObject(sourceContent).slice(0, 5);\\n\\n  // Categorize prompts by difficulty based on their content and structure\\n  const beginnerPrompts: BeginnerPrompt[] = [];\\n  const intermediatePrompts: IntermediatePrompt[] = [];\\n  const advancedPrompts: AdvancedPrompt[] = [];\\n\\n  // Helper function to estimate prompt complexity\\n  const estimateComplexity = (prompt: SourcePrompt): \u0027beginner\u0027 | \u0027intermediate\u0027 | \u0027advanced\u0027 =\u003e {\\n    const text = `${prompt.title} ${prompt.description} ${prompt.prompt}`.toLowerCase();\\n    const wordCount = prompt.prompt.split(/\\\\s+/).length;\\n    \\n    // Check for advanced indicators\\n    const advancedIndicators = [\\n      \u0027complex\u0027, \u0027advanced\u0027, \u0027expert\u0027, \u0027master\u0027, \u0027comprehensive\u0027,\\n      \u0027multiple\u0027, \u0027strategic\u0027, \u0027analysis\u0027, \u0027evaluate\u0027, \u0027synthesize\u0027\\n    ];\\n    \\n    // Check for beginner indicators\\n    const beginnerIndicators = [\\n      \u0027basic\u0027, \u0027introduction\u0027, \u0027beginner\u0027, \u0027simple\u0027, \u0027overview\u0027,\\n      \u0027first\u0027, \u0027fundamental\u0027, \u0027getting started\u0027\\n    ];\\n    \\n    const hasAdvanced = advancedIndicators.some(term =\u003e text.includes(term));\\n    const hasBeginner = beginnerIndicators.some(term =\u003e text.includes(term));\\n    \\n    if (hasAdvanced) return \u0027advanced\u0027;\\n    if (hasBeginner) return \u0027beginner\u0027;\\n    \\n    // Default to intermediate if no clear indicators\\n    return wordCount \u003e 100 ? \u0027intermediate\u0027 : \u0027beginner\u0027;\\n  };\\n\\n  // Process each prompt\\n  prompts.forEach(prompt =\u003e {\\n    try {\\n      // Default values for required fields\\n      const basePrompt = {\\n        ...prompt,\\n        promptGroupId: prompt.promptGroupId || \u0027general\u0027,\\n        tags: prompt.tags || [],\\n        estimatedTime: \u002715-30 minutes\u0027,\\n        prerequisites: [\u0027Basic understanding of the topic\u0027],\\n      };\\n\\n      const complexity = estimateComplexity(prompt);\\n      \\n      // Categorize based on estimated complexity\\n      if (complexity === \u0027beginner\u0027) {\\n        beginnerPrompts.push({\\n          ...basePrompt,\\n          difficulty: [\u0027Very Easy\u0027, \u0027Easy\u0027, \u0027Moderate\u0027][Math.floor(Math.random() * 3)] as any,\\n        });\\n      } \\n      else if (complexity === \u0027intermediate\u0027) {\\n        intermediatePrompts.push({\\n          ...basePrompt,\\n          difficulty: \u0027Challenging\u0027,\\n          expectedOutcome: \u0027Practical application and understanding of the concept\u0027,\\n          followUpActions: [\u0027Review materials\u0027, \u0027Practice implementation\u0027, \u0027Seek feedback\u0027]\\n        });\\n      } \\n      else { // advanced\\n        advancedPrompts.push({\\n          ...basePrompt,\\n          difficulty: [\u0027Advanced\u0027, \u0027Expert\u0027, \u0027Master\u0027][Math.floor(Math.random() * 3)] as any,\\n          expectedOutcome: \u0027Comprehensive solution ready for implementation\u0027,\\n          followUpActions: [\u0027Review with team\u0027, \u0027Test in staging\u0027, \u0027Gather user feedback\u0027],\\n          complexityFactors: [\u0027Multiple components\u0027, \u0027Integration requirements\u0027, \u0027High stakes\u0027],\\n          industryContext: \u0027Cross-industry application\u0027\\n        });\\n      }\\n    } catch (error) {\\n      console.error(`Error processing prompt ${prompt.id}:`, error);\\n    }\\n  });\\n\\n  // Write to files\\n  const outputDir = join(__dirname, \u0027../src/data/prompts\u0027);\\n  \\n  // Ensure directory exists\\n  if (!existsSync(outputDir)) {\\n    mkdirSync(outputDir, { recursive: true });\\n  }\\n\\n  // Format a prompt array as TypeScript code\\n  const formatPrompts = (prompts: any[], type: string) =\u003e {\\n    return `// Auto-generated by migrate-prompts.ts\\n// Do not edit this file directly - update the source in prompts-data.ts and re-run the migration script\\n\\nimport { ${type} } from \u0027./types\u0027;\\n\\nexport const ${type.toLowerCase()}Prompts: ${type}[] = ${JSON.stringify(prompts, null, 2)};`;\\n  };\\n\\n  // Write beginner prompts\\n  writeFileSync(\\n    join(outputDir, \u0027beginner-prompts.ts\u0027),\\n    formatPrompts(beginnerPrompts, \u0027BeginnerPrompt\u0027)\\n  );\\n\\n  // Write intermediate prompts\\n  writeFileSync(\\n    join(outputDir, \u0027intermediate-prompts.ts\u0027),\\n    formatPrompts(intermediatePrompts, \u0027IntermediatePrompt\u0027)\\n  );\\n\\n  // Write advanced prompts\\n  writeFileSync(\\n    join(outputDir, \u0027advanced-prompts.ts\u0027),\\n    formatPrompts(advancedPrompts, \u0027AdvancedPrompt\u0027)\\n  );\\n\\n  // Print summary\\n  console.log(\u0027\\\\nMigration complete! Summary:\u0027);\\n  console.log(\u0027=\u0027.repeat(50));\\n  console.log(`Total prompts processed: ${prompts.length}`);\\n  console.log(`- Beginner prompts: ${beginnerPrompts.length} (${Math.round((beginnerPrompts.length / prompts.length) * 100)}%)`);\\n  console.log(`- Intermediate prompts: ${intermediatePrompts.length} (${Math.round((intermediatePrompts.length / prompts.length) * 100)}%)`);\\n  console.log(`- Advanced prompts: ${advancedPrompts.length} (${Math.round((advancedPrompts.length / prompts.length) * 100)}%)`);\\n  \\n  // Check for any uncategorized prompts\\n  const uncategorized = prompts.length - (beginnerPrompts.length + intermediatePrompts.length + advancedPrompts.length);\\n  if (uncategorized \u003e 0) {\\n    console.warn(`\\\\nΓÜá∩╕Å  Warning: ${uncategorized} prompts were not categorized!`);\\n  }\\n  \\n  // Verify output files\\n  console.log(\u0027\\\\nOutput files:\u0027);\\n  [\\n    join(outputDir, \u0027beginner-prompts.ts\u0027),\\n    join(outputDir, \u0027intermediate-prompts.ts\u0027),\\n    join(outputDir, \u0027advanced-prompts.ts\u0027)\\n  ].forEach(file =\u003e {\\n    console.log(`- ${file} (${Math.round(require(\u0027fs\u0027).statSync(file).size / 1024)} KB)`);\\n  });\\n\\n} catch (error) {\\n  console.error(\u0027Error during migration:\u0027, error);\\n  process.exit(1);\\n}\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\scripts\\\\simple-migrate.js\",\"messages\":[{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":10,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":10,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[257,313],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":23,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":23,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[586,621],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":25,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":25,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[646,702],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":53,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":53,\"endColumn\":18,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"error\"},\"fix\":{\"range\":[1709,1759],\"text\":\"\"},\"desc\":\"Remove the console.error().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":60,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":60,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1825,1869],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":68,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":68,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[2098,2148],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":72,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":72,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[2225,2262],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":74,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":74,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[2317,2367],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":78,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":78,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[2474,2542],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":138,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":138,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4514,4575],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":139,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":139,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4578,4611],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":140,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":140,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4614,4651],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":141,\"column\":3,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":141,\"endColumn\":14,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[4654,4687],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":13,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Simple migration script to process a small subset of prompts\\nconst fs = require(\u0027fs\u0027);\\nconst path = require(\u0027path\u0027);\\n\\n// Helper to read file\\nfunction readFileSync(filePath) {\\n  try {\\n    return fs.readFileSync(filePath, \u0027utf-8\u0027);\\n  } catch (error) {\\n    console.error(`Error reading file ${filePath}:`, error);\\n    process.exit(1);\\n  }\\n}\\n\\n// Helper to write file\\nfunction writeFileSync(filePath, content) {\\n  try {\\n    const dir = path.dirname(filePath);\\n    if (!fs.existsSync(dir)) {\\n      fs.mkdirSync(dir, { recursive: true });\\n    }\\n    fs.writeFileSync(filePath, content);\\n    console.log(`Γ£à Wrote ${filePath}`);\\n  } catch (error) {\\n    console.error(`Error writing file ${filePath}:`, error);\\n    process.exit(1);\\n  }\\n}\\n\\n// Extract prompts from source file\\nfunction extractPrompts(sourceContent) {\\n  try {\\n    // Simple regex to extract the array content\\n    const arrayMatch = sourceContent.match(/export const prompts: Prompt\\\\[\\\\] = \\\\[([\\\\s\\\\S]*?)\\\\];/);\\n    if (!arrayMatch) {\\n      throw new Error(\u0027Could not find prompts array in source file\u0027);\\n    }\\n    \\n    // Clean up the content to make it valid JSON\\n    let jsonContent = arrayMatch[1]\\n      .replace(/\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\//g, \u0027\u0027) // Remove block comments\\n      .replace(/\\\\/\\\\/.*/g, \u0027\u0027) // Remove line comments\\n      .replace(/,(\\\\s*[}\\\\]])/g, \u0027$1\u0027) // Remove trailing commas\\n      .replace(/([\\\\w\\\\d_]+):/g, \u0027\\\"$1\\\":\u0027) // Add quotes around keys\\n      .replace(/\u0027/g, \u0027\\\"\u0027) // Replace single quotes with double quotes\\n      .replace(/\\\\n/g, \u0027 \u0027) // Replace newlines with spaces\\n      .replace(/\\\\s+/g, \u0027 \u0027) // Collapse multiple spaces\\n      .trim();\\n\\n    // Wrap in array brackets and parse\\n    return JSON.parse(`[${jsonContent}]`);\\n  } catch (error) {\\n    console.error(\u0027Error extracting prompts:\u0027, error);\\n    process.exit(1);\\n  }\\n}\\n\\n// Main function\\nfunction main() {\\n  console.log(\u0027Starting prompt migration...\u0027);\\n  \\n  // Paths\\n  const rootDir = path.join(__dirname, \u0027..\u0027);\\n  const sourceFile = path.join(rootDir, \u0027src\u0027, \u0027data\u0027, \u0027prompts-data.ts\u0027);\\n  const outputDir = path.join(rootDir, \u0027src\u0027, \u0027data\u0027, \u0027prompts\u0027);\\n  \\n  // Read source file\\n  console.log(`Reading source file: ${sourceFile}`);\\n  const sourceContent = readFileSync(sourceFile);\\n  \\n  // Extract prompts\\n  console.log(\u0027Extracting prompts...\u0027);\\n  const allPrompts = extractPrompts(sourceContent);\\n  console.log(`Found ${allPrompts.length} prompts`);\\n  \\n  // Take a small subset for testing (first 3 prompts)\\n  const testPrompts = allPrompts.slice(0, 3);\\n  console.log(`Processing test set of ${testPrompts.length} prompts`);\\n  \\n  // Categorize prompts (simple categorization for testing)\\n  const beginnerPrompt = {\\n    ...testPrompts[0],\\n    difficulty: \u0027Easy\u0027,\\n    estimatedTime: \u002715 minutes\u0027,\\n    prerequisites: [\u0027Basic understanding of the topic\u0027]\\n  };\\n  \\n  const intermediatePrompt = {\\n    ...testPrompts[1],\\n    difficulty: \u0027Challenging\u0027,\\n    estimatedTime: \u002730 minutes\u0027,\\n    prerequisites: [\u0027Basic understanding of the topic\u0027],\\n    expectedOutcome: \u0027Practical application of the concept\u0027,\\n    followUpActions: [\u0027Review materials\u0027, \u0027Practice implementation\u0027]\\n  };\\n  \\n  const advancedPrompt = {\\n    ...testPrompts[2],\\n    difficulty: \u0027Advanced\u0027,\\n    estimatedTime: \u002745 minutes\u0027,\\n    prerequisites: [\u0027Experience with the topic\u0027, \u0027Basic implementation skills\u0027],\\n    expectedOutcome: \u0027Comprehensive solution ready for implementation\u0027,\\n    followUpActions: [\u0027Review with team\u0027, \u0027Test in staging\u0027],\\n    complexityFactors: [\u0027Multiple components\u0027, \u0027Integration requirements\u0027],\\n    industryContext: \u0027Cross-industry application\u0027\\n  };\\n  \\n  // Create output files\\n  const beginnerFile = path.join(outputDir, \u0027beginner-prompts.ts\u0027);\\n  const intermediateFile = path.join(outputDir, \u0027intermediate-prompts.ts\u0027);\\n  const advancedFile = path.join(outputDir, \u0027advanced-prompts.ts\u0027);\\n  \\n  // Write output files\\n  writeFileSync(\\n    beginnerFile,\\n    `// Auto-generated by simple-migrate.js\\nimport { BeginnerPrompt } from \u0027./types\u0027;\\n\\nexport const beginnerPrompts: BeginnerPrompt[] = ${JSON.stringify([beginnerPrompt], null, 2)};`\\n  );\\n  \\n  writeFileSync(\\n    intermediateFile,\\n    `// Auto-generated by simple-migrate.js\\nimport { IntermediatePrompt } from \u0027./types\u0027;\\n\\nexport const intermediatePrompts: IntermediatePrompt[] = ${JSON.stringify([intermediatePrompt], null, 2)};`\\n  );\\n  \\n  writeFileSync(\\n    advancedFile,\\n    `// Auto-generated by simple-migrate.js\\nimport { AdvancedPrompt } from \u0027./types\u0027;\\n\\nexport const advancedPrompts: AdvancedPrompt[] = ${JSON.stringify([advancedPrompt], null, 2)};`\\n  );\\n  \\n  console.log(\u0027\\\\nMigration complete! Check the output files:\u0027);\\n  console.log(`- ${beginnerFile}`);\\n  console.log(`- ${intermediateFile}`);\\n  console.log(`- ${advancedFile}`);\\n}\\n\\n// Run the script\\nmain();\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\scripts\\\\types.d.ts\",\"messages\":[{\"ruleId\":null,\"fatal\":true,\"severity\":2,\"message\":\"Parsing error: Unexpected token const\",\"line\":2,\"column\":9,\"nodeType\":null}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":1,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Type definitions for Node.js globals and module resolution\\ndeclare const __dirname: string;\\ndeclare const __filename: string;\\n\\n// Add type definitions for import.meta in Node.js\\ndeclare namespace NodeJS {\\n  interface ImportMeta {\\n    url: string;\\n  }\\n}\\n\\ndeclare const importMeta: NodeJS.ImportMeta;\\n\\n// This allows TypeScript to understand the import.meta property\\ndeclare module \u0027node:module\u0027 {\\n  interface ImportMeta {\\n    url: string;\\n  }\\n}\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\simple-react-test.jsx\",\"messages\":[{\"ruleId\":null,\"fatal\":true,\"severity\":2,\"message\":\"Parsing error: ESLint was configured to run on `\u003ctsconfigRootDir\u003e/simple-react-test.jsx` using `parserOptions.project`: \u003ctsconfigRootDir\u003e/tsconfig.app.json\\nHowever, that TSConfig does not include this file. Either:\\n- Change ESLint\u0027s list of included files to not include this file\\n- Change that TSConfig to include this file\\n- Create a new TSConfig that includes this file and include it in your parserOptions.project\\nSee the typescript-eslint docs for more info: https://typescript-eslint.io/troubleshooting/typed-linting#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file\",\"nodeType\":null}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":1,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Enhanced React test with multiple test cases\\nimport { test, expect, describe, beforeEach } from \u0027vitest\u0027;\\nimport React, { useState } from \u0027react\u0027;\\nimport { render, screen, fireEvent } from \u0027@testing-library/react\u0027;\\n\\n// Simple component for testing\\nconst Counter = () =\u003e {\\n  const [count, setCount] = useState(0);\\n  return (\\n    \u003cdiv\u003e\\n      \u003cbutton onClick={() =\u003e setCount(count + 1)}\u003eIncrement\u003c/button\u003e\\n      \u003cspan data-testid=\\\"count\\\"\u003e{count}\u003c/span\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\n// Component with props\\nconst Greeting = ({ name = \u0027World\u0027 }) =\u003e (\\n  \u003cdiv\u003e\\n    \u003ch1\u003eHello, {name}!\u003c/h1\u003e\\n    \u003cp data-testid=\\\"greeting-text\\\"\u003eWelcome to our app, {name}!\u003c/p\u003e\\n  \u003c/div\u003e\\n);\\n\\ndescribe(\u0027React Component Tests\u0027, () =\u003e {\\n  test(\u0027renders hello world\u0027, () =\u003e {\\n    render(\u003cGreeting /\u003e);\\n    expect(screen.getByText(\u0027Hello, World!\u0027)).toBeInTheDocument();\\n    expect(screen.getByTestId(\u0027greeting-text\u0027)).toHaveTextContent(\u0027Welcome to our app, World!\u0027);\\n  });\\n\\n  test(\u0027renders with custom name\u0027, () =\u003e {\\n    render(\u003cGreeting name=\\\"Vitest\\\" /\u003e);\\n    expect(screen.getByText(\u0027Hello, Vitest!\u0027)).toBeInTheDocument();\\n    expect(screen.getByTestId(\u0027greeting-text\u0027)).toHaveTextContent(\u0027Welcome to our app, Vitest!\u0027);\\n  });\\n\\n  test(\u0027counter increments when button is clicked\u0027, () =\u003e {\\n    render(\u003cCounter /\u003e);\\n    const button = screen.getByRole(\u0027button\u0027, { name: /increment/i });\\n    const count = screen.getByTestId(\u0027count\u0027);\\n    \\n    expect(count).toHaveTextContent(\u00270\u0027);\\n    \\n    fireEvent.click(button);\\n    expect(count).toHaveTextContent(\u00271\u0027);\\n    \\n    fireEvent.click(button);\\n    expect(count).toHaveTextContent(\u00272\u0027);\\n  });\\n\\n  test(\u0027matches snapshot\u0027, () =\u003e {\\n    const { container } = render(\u003cGreeting name=\\\"Snapshot\\\" /\u003e);\\n    expect(container).toMatchSnapshot();\\n  });\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\simple-root.mjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\simple-test.test.cjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\App.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\__tests__\\\\react-advanced.test.jsx\",\"messages\":[{\"ruleId\":\"no-unused-vars\",\"severity\":1,\"message\":\"\u0027beforeEach\u0027 is defined but never used.\",\"line\":2,\"column\":34,\"nodeType\":\"Identifier\",\"messageId\":\"unusedVar\",\"endLine\":2,\"endColumn\":44},{\"ruleId\":\"no-unused-vars\",\"severity\":1,\"message\":\"\u0027fireEvent\u0027 is defined but never used.\",\"line\":4,\"column\":26,\"nodeType\":\"Identifier\",\"messageId\":\"unusedVar\",\"endLine\":4,\"endColumn\":35}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":2,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// Advanced React test with various testing scenarios\\nimport { test, expect, describe, beforeEach } from \u0027vitest\u0027;\\nimport React, { useState, useEffect } from \u0027react\u0027;\\nimport { render, screen, fireEvent, waitFor } from \u0027@testing-library/react\u0027;\\nimport userEvent from \u0027@testing-library/user-event\u0027;\\n\\n// Component with state and effects\\nconst Counter = ({ initialValue = 0, onIncrement, onDecrement }) =\u003e {\\n  const [count, setCount] = useState(initialValue);\\n  const [isLoading, setIsLoading] = useState(true);\\n\\n  useEffect(() =\u003e {\\n    // Simulate data loading\\n    const timer = setTimeout(() =\u003e {\\n      setIsLoading(false);\\n    }, 100);\\n    return () =\u003e clearTimeout(timer);\\n  }, []);\\n\\n  const handleIncrement = () =\u003e {\\n    const newCount = count + 1;\\n    setCount(newCount);\\n    onIncrement?.(newCount);\\n  };\\n\\n  const handleDecrement = () =\u003e {\\n    const newCount = count - 1;\\n    setCount(newCount);\\n    onDecrement?.(newCount);\\n  };\\n\\n  if (isLoading) {\\n    return \u003cdiv\u003eLoading...\u003c/div\u003e;\\n  }\\n\\n  return (\\n    \u003cdiv\u003e\\n      \u003cbutton onClick={handleDecrement} data-testid=\\\"decrement\\\"\u003e-\u003c/button\u003e\\n      \u003cspan data-testid=\\\"count\\\"\u003e{count}\u003c/span\u003e\\n      \u003cbutton onClick={handleIncrement} data-testid=\\\"increment\\\"\u003e+\u003c/button\u003e\\n      {count \u003c 0 \u0026\u0026 \u003cdiv data-testid=\\\"warning\\\"\u003eCount cannot be negative!\u003c/div\u003e}\\n    \u003c/div\u003e\\n  );\\n};\\n\\n// Form component for testing user interactions\\nconst LoginForm = ({ onSubmit }) =\u003e {\\n  const [formData, setFormData] = useState({ email: \u0027\u0027, password: \u0027\u0027 });\\n  const [error, setError] = useState(\u0027\u0027);\\n\\n  const handleChange = (e) =\u003e {\\n    const { name, value } = e.target;\\n    setFormData(prev =\u003e ({\\n      ...prev,\\n      [name]: value\\n    }));\\n  };\\n\\n  const handleSubmit = (e) =\u003e {\\n    e.preventDefault();\\n    if (!formData.email || !formData.password) {\\n      setError(\u0027Both fields are required\u0027);\\n      return;\\n    }\\n    onSubmit(formData);\\n  };\\n\\n  return (\\n    \u003cform onSubmit={handleSubmit} data-testid=\\\"login-form\\\"\u003e\\n      {error \u0026\u0026 \u003cdiv data-testid=\\\"error-message\\\"\u003e{error}\u003c/div\u003e}\\n      \u003cdiv\u003e\\n        \u003clabel htmlFor=\\\"email\\\"\u003eEmail:\u003c/label\u003e\\n        \u003cinput\\n          type=\\\"email\\\"\\n          id=\\\"email\\\"\\n          name=\\\"email\\\"\\n          value={formData.email}\\n          onChange={handleChange}\\n          data-testid=\\\"email-input\\\"\\n        /\u003e\\n      \u003c/div\u003e\\n      \u003cdiv\u003e\\n        \u003clabel htmlFor=\\\"password\\\"\u003ePassword:\u003c/label\u003e\\n        \u003cinput\\n          type=\\\"password\\\"\\n          id=\\\"password\\\"\\n          name=\\\"password\\\"\\n          value={formData.password}\\n          onChange={handleChange}\\n          data-testid=\\\"password-input\\\"\\n        /\u003e\\n      \u003c/div\u003e\\n      \u003cbutton type=\\\"submit\\\" data-testid=\\\"submit-button\\\"\u003eLogin\u003c/button\u003e\\n    \u003c/form\u003e\\n  );\\n};\\n\\ndescribe(\u0027Advanced React Component Tests\u0027, () =\u003e {\\n  describe(\u0027Counter Component\u0027, () =\u003e {\\n    test(\u0027renders with initial value\u0027, async () =\u003e {\\n      render(\u003cCounter initialValue={5} /\u003e);\\n      // Wait for loading to complete\\n      await waitFor(() =\u003e {\\n        expect(screen.getByTestId(\u0027count\u0027)).toHaveTextContent(\u00275\u0027);\\n      });\\n    });\\n\\n    test(\u0027increments counter when + is clicked\u0027, async () =\u003e {\\n      const user = userEvent.setup();\\n      render(\u003cCounter initialValue={0} /\u003e);\\n      // Wait for loading to complete\\n      await waitFor(async () =\u003e {\\n        await user.click(screen.getByTestId(\u0027increment\u0027));\\n        expect(screen.getByTestId(\u0027count\u0027)).toHaveTextContent(\u00271\u0027);\\n      });\\n    });\\n\\n    test(\u0027decrements counter when - is clicked\u0027, async () =\u003e {\\n      const user = userEvent.setup();\\n      render(\u003cCounter initialValue={1} /\u003e);\\n      // Wait for loading to complete\\n      await waitFor(async () =\u003e {\\n        await user.click(screen.getByTestId(\u0027decrement\u0027));\\n        expect(screen.getByTestId(\u0027count\u0027)).toHaveTextContent(\u00270\u0027);\\n      });\\n    });\\n\\n    test(\u0027shows warning when count is negative\u0027, async () =\u003e {\\n      const user = userEvent.setup();\\n      render(\u003cCounter initialValue={0} /\u003e);\\n      // Wait for loading to complete\\n      await waitFor(async () =\u003e {\\n        await user.click(screen.getByTestId(\u0027decrement\u0027));\\n        expect(screen.getByTestId(\u0027warning\u0027)).toBeInTheDocument();\\n      });\\n    });\\n\\n    test(\u0027calls onIncrement callback when counter is incremented\u0027, async () =\u003e {\\n      const user = userEvent.setup();\\n      const handleIncrement = vi.fn();\\n      render(\u003cCounter initialValue={0} onIncrement={handleIncrement} /\u003e);\\n      // Wait for loading to complete\\n      await waitFor(async () =\u003e {\\n        await user.click(screen.getByTestId(\u0027increment\u0027));\\n        expect(handleIncrement).toHaveBeenCalledWith(1);\\n      });\\n    });\\n\\n    test(\u0027shows loading state initially\u0027, () =\u003e {\\n      render(\u003cCounter /\u003e);\\n      expect(screen.getByText(\u0027Loading...\u0027)).toBeInTheDocument();\\n    });\\n\\n    test(\u0027hides loading state after data loads\u0027, async () =\u003e {\\n      render(\u003cCounter /\u003e);\\n      await waitFor(() =\u003e {\\n        expect(screen.queryByText(\u0027Loading...\u0027)).not.toBeInTheDocument();\\n      });\\n    });\\n  });\\n\\n  describe(\u0027LoginForm Component\u0027, () =\u003e {\\n    test(\u0027renders form with all fields\u0027, () =\u003e {\\n      render(\u003cLoginForm /\u003e);\\n      expect(screen.getByTestId(\u0027email-input\u0027)).toBeInTheDocument();\\n      expect(screen.getByTestId(\u0027password-input\u0027)).toBeInTheDocument();\\n      expect(screen.getByTestId(\u0027submit-button\u0027)).toBeInTheDocument();\\n    });\\n\\n    test(\u0027shows error when form is submitted with empty fields\u0027, async () =\u003e {\\n      const user = userEvent.setup();\\n      render(\u003cLoginForm /\u003e);\\n      await user.click(screen.getByTestId(\u0027submit-button\u0027));\\n      expect(screen.getByTestId(\u0027error-message\u0027)).toHaveTextContent(\u0027Both fields are required\u0027);\\n    });\\n\\n    test(\u0027calls onSubmit with form data when form is valid\u0027, async () =\u003e {\\n      const user = userEvent.setup();\\n      const handleSubmit = vi.fn();\\n      render(\u003cLoginForm onSubmit={handleSubmit} /\u003e);\\n      \\n      await user.type(screen.getByTestId(\u0027email-input\u0027), \u0027test@example.com\u0027);\\n      await user.type(screen.getByTestId(\u0027password-input\u0027), \u0027password123\u0027);\\n      await user.click(screen.getByTestId(\u0027submit-button\u0027));\\n      \\n      expect(handleSubmit).toHaveBeenCalledWith({\\n        email: \u0027test@example.com\u0027,\\n        password: \u0027password123\u0027,\\n      });\\n    });\\n  });\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\__tests__\\\\react-basic.test.jsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\CallToAction.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\Categories.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":30,\"column\":19,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":30,\"endColumn\":58,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[1329,1329],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React from \u0027react\u0027;\\nimport { useNavigate } from \u0027react-router-dom\u0027;\\nimport { categories } from \u0027../data/categories-data\u0027;\\n\\nconst CategoriesSection: React.FC = () =\u003e {\\n  const navigate = useNavigate();\\n  const filteredCategories = categories;\\n\\n  return (\\n    \u003csection className=\\\"py-12 sm:py-16 lg:py-20 bg-gradient-to-b from-gray-900 via-gray-900/90 to-gray-900 relative overflow-hidden\\\"\u003e\\n      \u003cdiv className=\\\"absolute inset-0 bg-[radial-gradient(circle_at_50%_0%,rgba(124,58,237,0.1),transparent_50%)]\\\" /\u003e\\n      \u003cdiv className=\\\"container mx-auto px-4 sm:px-6 relative z-10\\\"\u003e\\n        \u003cdiv className=\\\"text-center mb-8 sm:mb-12 px-2\\\"\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl lg:text-4xl font-bold mb-3 sm:mb-4 text-white\\\"\u003e\\n            Unlock Your Industry\u0027s Potential\\n          \u003c/h2\u003e\\n          \u003cp className=\\\"text-base sm:text-lg text-gray-400 max-w-2xl mx-auto\\\"\u003e\\n            Discover AI prompts crafted specifically for your field\\n          \u003c/p\u003e\\n        \u003c/div\u003e\\n\\n        \u003cdiv className=\\\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-5 lg:gap-6\\\"\u003e\\n          {filteredCategories.map((category) =\u003e {\\n            const Icon = category.icon;\\n            return (\\n              \u003cbutton\\n                key={category.id}\\n                onClick={() =\u003e {\\n                  window.scrollTo(0, 0);\\n                  navigate(`/categories/${category.id}`);\\n                }}\\n                className=\\\"relative w-full p-4 sm:p-5 lg:p-6 rounded-lg text-left transition-all duration-300 overflow-hidden border border-gray-700/50 hover:border-purple-500/50 bg-gray-800/30 backdrop-blur-sm hover:bg-gray-800/50 group active:scale-[0.98]\\\"\\n              \u003e\\n                \u003cdiv className={`absolute inset-0 bg-gradient-to-br ${category.bgGradient} opacity-20 group-hover:opacity-30 transition-opacity`} /\u003e\\n                \\n                \u003cdiv className=\\\"relative z-10\\\"\u003e\\n                  \u003cdiv className=\\\"flex items-center gap-3 mb-3 sm:mb-4\\\"\u003e\\n                    \u003cdiv className=\\\"p-1.5 sm:p-2 bg-gray-800/50 rounded-lg\\\"\u003e\\n                      \u003cIcon className=\\\"w-5 h-5 sm:w-6 sm:h-6 text-white\\\" /\u003e\\n                    \u003c/div\u003e\\n                    \u003cdiv\u003e\\n                      \u003ch3 className=\\\"text-sm sm:text-base font-semibold text-white group-hover:text-purple-300 transition-colors\\\"\u003e\\n                        {category.name}\\n                      \u003c/h3\u003e\\n                      \u003cp className=\\\"text-xs sm:text-sm text-gray-400\\\"\u003e{category.promptCount} prompts\u003c/p\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n\\n                  \u003cp className=\\\"text-xs sm:text-sm text-gray-300 mb-2 sm:mb-3 line-clamp-2\\\"\u003e\\n                    {category.description}\\n                  \u003c/p\u003e\\n                  \\n                  \u003cdiv className=\\\"flex flex-wrap gap-1.5 sm:gap-2\\\"\u003e\\n                    {category.subcategories.slice(0, 2).map(sub =\u003e (\\n                      \u003cspan\\n                        key={sub.id}\\n                        className=\\\"text-[10px] sm:text-xs px-2 py-0.5 sm:py-1 rounded-full bg-gray-700/50 text-gray-300 border border-gray-600/50 group-hover:border-purple-500/20 transition-colors\\\"\\n                      \u003e\\n                        {sub.name}\\n                      \u003c/span\u003e\\n                    ))}\\n                    {category.subcategories.length \u003e 2 \u0026\u0026 (\\n                      \u003cspan className=\\\"text-[10px] sm:text-xs px-2 py-0.5 sm:py-1 rounded-full bg-gray-700/50 text-gray-400\\\"\u003e\\n                        +{category.subcategories.length - 2} more\\n                      \u003c/span\u003e\\n                    )}\\n                  \u003c/div\u003e\\n\\n                  {(category.trending || category.featured) \u0026\u0026 (\\n                    \u003cdiv className=\\\"absolute top-4 right-4\\\"\u003e\\n                      {category.trending \u0026\u0026 (\\n                        \u003cspan className=\\\"text-xs px-2 py-1 rounded-full bg-orange-500/20 text-orange-300 mr-2\\\"\u003e\\n                          Trending\\n                        \u003c/span\u003e\\n                      )}\\n                      {category.featured \u0026\u0026 (\\n                        \u003cspan className=\\\"text-xs px-2 py-1 rounded-full bg-purple-500/20 text-purple-300\\\"\u003e\\n                          Featured\\n                        \u003c/span\u003e\\n                      )}\\n                    \u003c/div\u003e\\n                  )}\\n                \u003c/div\u003e\\n              \u003c/button\u003e\\n            );\\n          })}\\n        \u003c/div\u003e\\n\\n\\n      \u003c/div\u003e\\n    \u003c/section\u003e\\n  );\\n};\\n\\nexport default CategoriesSection;\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\CategorySection.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\EngineeringSection.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ExplanationSection.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\FeaturedPrompts.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\Footer.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\Header.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\Hero.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\PromptCard.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":19,\"column\":5,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":19,\"endColumn\":50,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[469,469],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React, { useState } from \u0027react\u0027;\\nimport type { BasePrompt } from \u0027../data/prompts/types\u0027;\\nimport { Copy, ExternalLink, Check } from \u0027lucide-react\u0027;\\n\\ninterface PromptCardProps {\\n  prompt: BasePrompt \u0026 { difficulty?: string };\\n  onCopy?: () =\u003e void;\\n  onOpenInNewTab?: () =\u003e void;\\n}\\n\\nconst PromptCard: React.FC\u003cPromptCardProps\u003e = ({ \\n  prompt, \\n  onCopy, \\n  onOpenInNewTab \\n}) =\u003e {\\n  const [copied, setCopied] = useState(false);\\n\\n  const handleCopy = () =\u003e {\\n    navigator.clipboard.writeText(prompt.prompt);\\n    setCopied(true);\\n    setTimeout(() =\u003e setCopied(false), 2000);\\n    if (onCopy) onCopy();\\n  };\\n\\n  const handleOpenInNewTab = () =\u003e {\\n    if (onOpenInNewTab) {\\n      onOpenInNewTab();\\n    }\\n  };\\n\\n  return (\\n    \u003cdiv className=\\\"bg-gray-800/50 border border-gray-700/50 rounded-lg p-4 flex flex-col justify-between transition-all hover:border-purple-500/50 h-full\\\"\u003e\\n      \u003cdiv\u003e\\n        \u003ch3 className=\\\"font-semibold text-white mb-2\\\"\u003e{prompt.title}\u003c/h3\u003e\\n        \u003cp className=\\\"text-sm text-gray-400 line-clamp-2 mb-4\\\"\u003e{prompt.description}\u003c/p\u003e\\n      \u003c/div\u003e\\n      \u003cdiv className=\\\"flex items-center justify-between mt-auto pt-4 border-t border-gray-700/50\\\"\u003e\\n        \u003cdiv className=\\\"flex flex-wrap items-center gap-2\\\"\u003e\\n          {/* Difficulty Badge */}\\n          {prompt.difficulty \u0026\u0026 (\\n            \u003cspan \\n              className={`text-xs font-medium px-2 py-0.5 rounded-full ${\\n                [\u0027Very Easy\u0027, \u0027Easy\u0027, \u0027Moderate\u0027].includes(prompt.difficulty) ? \u0027bg-green-900/50 text-green-300\u0027 :\\n                [\u0027Challenging\u0027, \u0027Advanced\u0027].includes(prompt.difficulty) ? \u0027bg-blue-900/50 text-blue-300\u0027 :\\n                \u0027bg-purple-900/50 text-purple-300\u0027\\n              }`}\\n            \u003e\\n              {prompt.difficulty}\\n            \u003c/span\u003e\\n          )}\\n          \\n          {/* Tags */}\\n          {prompt.tags?.map(tag =\u003e (\\n            \u003cspan key={tag} className=\\\"text-xs px-2 py-0.5 rounded-full bg-gray-700/50 text-gray-300\\\"\u003e\\n              #{tag}\\n            \u003c/span\u003e\\n          ))}\\n        \u003c/div\u003e\\n        \u003cdiv className=\\\"flex items-center gap-2 flex-shrink-0\\\"\u003e\\n          \u003cbutton\\n            onClick={handleCopy}\\n            className=\\\"p-2 text-gray-400 hover:text-white transition-colors rounded-md hover:bg-gray-700 relative\\\"\\n            title={copied ? \u0027Copied!\u0027 : \u0027Copy Prompt\u0027}\\n          \u003e\\n            {copied ? (\\n              \u003cCheck className=\\\"w-4 h-4 text-green-400\\\" /\u003e\\n            ) : (\\n              \u003cCopy className=\\\"w-4 h-4\\\" /\u003e\\n            )}\\n          \u003c/button\u003e\\n          \u003cbutton\\n            onClick={handleOpenInNewTab}\\n            className=\\\"p-2 text-gray-400 hover:text-white transition-colors rounded-md hover:bg-gray-700\\\"\\n            title=\\\"Open in new tab\\\"\\n          \u003e\\n            \u003cExternalLink className=\\\"w-4 h-4\\\" /\u003e\\n          \u003c/button\u003e\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\nexport default PromptCard;\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\PromptCardSkeleton.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ResourcesSection.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\StatsCounter.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ThemeProvider.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\__tests__\\\\HelloWorld.test.jsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\layouts\\\\CategoryLayout.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\prompt\\\\ModelCard.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\prompt\\\\Section.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\subcategories\\\\SubcategoryCard.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":27,\"column\":5,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":27,\"endColumn\":49,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[627,627],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React from \u0027react\u0027;\\r\\nimport { useNavigate } from \u0027react-router-dom\u0027;\\r\\nimport { Card } from \u0027../ui/Card\u0027;\\r\\nimport { Button } from \u0027../ui/Button\u0027;\\r\\nimport { ArrowRight } from \u0027lucide-react\u0027;\\r\\n\\r\\ninterface SubcategoryCardProps {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  description: string;\\r\\n  examples: string[];\\r\\n  categoryId: string;\\r\\n}\\r\\n\\r\\nconst SubcategoryCard: React.FC\u003cSubcategoryCardProps\u003e = ({\\r\\n  id,\\r\\n  name,\\r\\n  description,\\r\\n  examples,\\r\\n  categoryId,\\r\\n}) =\u003e {\\r\\n  const navigate = useNavigate();\\r\\n  \\r\\n  const handleViewPrompts = () =\u003e {\\r\\n    // Navigate to subcategory and scroll to top\\r\\n    window.scrollTo(0, 0);\\r\\n    navigate(`/categories/${categoryId}/${id}`);\\r\\n  };\\r\\n  return (\\r\\n    \u003cCard className=\\\"bg-gray-800/50 border-gray-700 hover:border-purple-500/50 transition-all\\\"\u003e\\r\\n      \u003cdiv className=\\\"p-6\\\"\u003e\\r\\n        \u003ch3 className=\\\"text-xl font-semibold text-white mb-4\\\"\u003e{name}\u003c/h3\u003e\\r\\n        \\r\\n        \u003cp className=\\\"text-gray-300 mb-4\\\"\u003e{description}\u003c/p\u003e\\r\\n        \\r\\n        \u003cdiv className=\\\"flex flex-wrap gap-2 mb-6\\\"\u003e\\r\\n          {examples.map((example, index) =\u003e (\\r\\n            \u003cspan\\r\\n              key={index}\\r\\n              className=\\\"text-xs px-2 py-1 rounded-full bg-gray-700/50 text-gray-300 border border-gray-600\\\"\\r\\n            \u003e\\r\\n              {example}\\r\\n            \u003c/span\u003e\\r\\n          ))}\\r\\n        \u003c/div\u003e\\r\\n\\r\\n        \u003cdiv className=\\\"flex justify-between items-center\\\"\u003e\\r\\n          \u003cButton\\r\\n            variant=\\\"default\\\"\\r\\n            size=\\\"default\\\"\\r\\n            className=\\\"group tracking-wide\\\"\\r\\n            onClick={handleViewPrompts}\\r\\n          \u003e\\r\\n            View Prompts\\r\\n            \u003cArrowRight className=\\\"ml-2 w-4 h-4 group-hover:translate-x-1 transition-transform\\\" /\u003e\\r\\n          \u003c/Button\u003e\\r\\n        \u003c/div\u003e\\r\\n      \u003c/div\u003e\\r\\n    \u003c/Card\u003e\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default SubcategoryCard;\\r\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Accordion.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Badge.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Button.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-unused-vars\",\"severity\":1,\"message\":\"\u0027cva\u0027 is defined but never used. Allowed unused vars must match /^_/u.\",\"line\":3,\"column\":10,\"nodeType\":null,\"messageId\":\"unusedVar\",\"endLine\":3,\"endColumn\":13}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import * as React from \u0027react\u0027;\\nimport { Slot } from \u0027@radix-ui/react-slot\u0027;\\nimport { cva, type VariantProps } from \u0027class-variance-authority\u0027;\\n\\nimport { cn } from \u0027../../lib/utils\u0027;\\nimport { buttonVariants } from \u0027./button-variants\u0027;\\n\\nexport interface ButtonProps\\n  extends React.ButtonHTMLAttributes\u003cHTMLButtonElement\u003e,\\n    VariantProps\u003ctypeof buttonVariants\u003e {\\n  asChild?: boolean;\\n  isLoading?: boolean;\\n  leftIcon?: React.ReactNode;\\n  rightIcon?: React.ReactNode;\\n}\\n\\nconst Button = React.forwardRef\u003cHTMLButtonElement, ButtonProps\u003e(\\n  (\\n    {\\n      className,\\n      variant,\\n      size,\\n      asChild = false,\\n      isLoading = false,\\n      leftIcon,\\n      rightIcon,\\n      disabled,\\n      children,\\n      ...props\\n    },\\n    ref\\n  ) =\u003e {\\n    const Comp = asChild ? Slot : \u0027button\u0027;\\n    \\n    return (\\n      \u003cComp\\n        className={cn(buttonVariants({ variant, size, className }))}\\n        ref={ref}\\n        disabled={isLoading || disabled}\\n        {...props}\\n      \u003e\\n        {isLoading \u0026\u0026 (\\n          \u003cspan className=\\\"absolute inset-0 flex items-center justify-center\\\"\u003e\\n            \u003cspan className=\\\"h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent\\\" /\u003e\\n            \u003cspan className=\\\"sr-only\\\"\u003eLoading...\u003c/span\u003e\\n          \u003c/span\u003e\\n        )}\\n        \u003cspan className={cn(\u0027flex items-center justify-center\u0027, {\\n          \u0027opacity-0\u0027: isLoading,\\n          \u0027opacity-100\u0027: !isLoading,\\n        })}\u003e\\n          {leftIcon \u0026\u0026 \u003cspan className=\\\"mr-2\\\"\u003e{leftIcon}\u003c/span\u003e}\\n          {children}\\n          {rightIcon \u0026\u0026 \u003cspan className=\\\"ml-2\\\"\u003e{rightIcon}\u003c/span\u003e}\\n        \u003c/span\u003e\\n      \u003c/Comp\u003e\\n    );\\n  }\\n);\\n\\nButton.displayName = \u0027Button\u0027;\\n\\nexport { Button };\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Card.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Checkbox.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-unsafe-assignment\",\"severity\":1,\"message\":\"Unsafe assignment of an error typed value.\",\"line\":6,\"column\":7,\"nodeType\":\"VariableDeclarator\",\"messageId\":\"anyAssignment\",\"endLine\":26,\"endColumn\":2},{\"ruleId\":\"@typescript-eslint/no-unsafe-call\",\"severity\":1,\"message\":\"Unsafe call of an `error` type typed value.\",\"line\":6,\"column\":26,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeCall\",\"endLine\":6,\"endColumn\":29},{\"ruleId\":\"@typescript-eslint/no-unsafe-argument\",\"severity\":1,\"message\":\"Unsafe argument of type `any` assigned to a parameter of type `ClassValue`.\",\"line\":77,\"column\":13,\"nodeType\":\"CallExpression\",\"messageId\":\"unsafeArgument\",\"endLine\":77,\"endColumn\":59},{\"ruleId\":\"@typescript-eslint/no-unsafe-call\",\"severity\":1,\"message\":\"Unsafe call of an `error` type typed value.\",\"line\":77,\"column\":13,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeCall\",\"endLine\":77,\"endColumn\":29}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":4,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import * as React from \u0027react\u0027;\\nimport * as CheckboxPrimitive from \u0027@radix-ui/react-checkbox\u0027;\\nimport { Check, Minus } from \u0027lucide-react\u0027;\\nimport { cn } from \u0027../../lib/utils\u0027;\\n\\nconst checkboxVariants = cva(\\n  \u0027peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\u0027,\\n  {\\n    variants: {\\n      variant: {\\n        default: \u0027border-input\u0027,\\n        primary: \u0027border-primary bg-background\u0027,\\n        secondary: \u0027border-secondary bg-background\u0027,\\n      },\\n      size: {\\n        sm: \u0027h-3 w-3\u0027,\\n        default: \u0027h-4 w-4\u0027,\\n        lg: \u0027h-5 w-5\u0027,\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \u0027default\u0027,\\n      size: \u0027default\u0027,\\n    },\\n  }\\n);\\n\\nexport interface CheckboxProps\\n  extends React.ComponentPropsWithoutRef\u003ctypeof CheckboxPrimitive.Root\u003e {\\n  /** The variant of the checkbox */\\n  variant?: \u0027default\u0027 | \u0027primary\u0027 | \u0027secondary\u0027;\\n  /** The size of the checkbox */\\n  size?: \u0027sm\u0027 | \u0027default\u0027 | \u0027lg\u0027;\\n  /** Whether to show an intermediate state (indeterminate) */\\n  indeterminate?: boolean;\\n  /** Additional class name for the container */\\n  containerClassName?: string;\\n  /** Label text */\\n  label?: React.ReactNode;\\n  /** Description text */\\n  description?: string;\\n  /** Error message */\\n  error?: string;\\n  /** Whether the checkbox is in a loading state */\\n  loading?: boolean;\\n}\\n\\n/**\\n * A customizable checkbox component that supports various states and variants.\\n * Integrates with Radix UI for accessibility and follows the design system.\\n */\\nconst Checkbox = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof CheckboxPrimitive.Root\u003e,\\n  CheckboxProps\\n\u003e(({ \\n  className, \\n  variant, \\n  size, \\n  indeterminate, \\n  containerClassName,\\n  label,\\n  description,\\n  error,\\n  disabled,\\n  loading,\\n  ...props \\n}, ref) =\u003e {\\n  const id = React.useId();\\n  const isDisabled = disabled || loading;\\n  \\n  return (\\n    \u003cdiv className={cn(\u0027flex items-start gap-3\u0027, containerClassName)}\u003e\\n      \u003cdiv className=\\\"flex h-5 items-center\\\"\u003e\\n        \u003cCheckboxPrimitive.Root\\n          ref={ref}\\n          className={cn(\\n            checkboxVariants({ variant, size, className }),\\n            \u0027data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\u0027,\\n            \u0027data-[state=indeterminate]:bg-primary data-[state=indeterminate]:text-primary-foreground\u0027,\\n            error \u0026\u0026 \u0027border-destructive\u0027,\\n            isDisabled \u0026\u0026 \u0027opacity-50 cursor-not-allowed\u0027,\\n            className\\n          )}\\n          id={id}\\n          disabled={isDisabled}\\n          aria-invalid={error ? \u0027true\u0027 : \u0027false\u0027}\\n          aria-busy={loading ? \u0027true\u0027 : \u0027false\u0027}\\n          {...props}\\n        \u003e\\n          \u003cCheckboxPrimitive.Indicator\\n            className={cn(\\n              \u0027flex items-center justify-center text-current\u0027,\\n              loading \u0026\u0026 \u0027opacity-0\u0027\\n            )}\\n          \u003e\\n            {indeterminate ? (\\n              \u003cMinus className=\\\"h-3 w-3\\\" /\u003e\\n            ) : (\\n              \u003cCheck className=\\\"h-3 w-3\\\" /\u003e\\n            )}\\n          \u003c/CheckboxPrimitive.Indicator\u003e\\n        \u003c/CheckboxPrimitive.Root\u003e\\n        \\n        {loading \u0026\u0026 (\\n          \u003cdiv className=\\\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\\\"\u003e\\n            \u003cspan className=\\\"h-3 w-3 animate-spin rounded-full border-2 border-primary border-t-transparent\\\" /\u003e\\n          \u003c/div\u003e\\n        )}\\n      \u003c/div\u003e\\n      \\n      {(label || description) \u0026\u0026 (\\n        \u003cdiv className=\\\"grid gap-1.5 leading-none\\\"\u003e\\n          {label \u0026\u0026 (\\n            \u003clabel\\n              htmlFor={id}\\n              className={cn(\\n                \u0027text-sm font-medium leading-none\u0027,\\n                \u0027peer-disabled:cursor-not-allowed peer-disabled:opacity-70\u0027,\\n                error ? \u0027text-destructive\u0027 : \u0027text-foreground\u0027\\n              )}\\n            \u003e\\n              {label}\\n            \u003c/label\u003e\\n          )}\\n          {description \u0026\u0026 (\\n            \u003cp className=\\\"text-sm text-muted-foreground\\\"\u003e\\n              {description}\\n            \u003c/p\u003e\\n          )}\\n          {error \u0026\u0026 (\\n            \u003cp className=\\\"text-sm text-destructive\\\" role=\\\"alert\\\"\u003e\\n              {error}\\n            \u003c/p\u003e\\n          )}\\n        \u003c/div\u003e\\n      )}\\n    \u003c/div\u003e\\n  );\\n});\\n\\nCheckbox.displayName = \u0027Checkbox\u0027;\\n\\nexport { Checkbox };\\n\\n// Example usage:\\n/*\\n\u003cCheckbox \\n  id=\\\"terms\\\" \\n  label=\\\"Accept terms and conditions\\\"\\n  description=\\\"You agree to our Terms of Service and Privacy Policy.\\\"\\n  error={errors.terms?.message}\\n  {...register(\u0027terms\u0027)}\\n/\u003e\\n\\n\u003cCheckbox \\n  variant=\\\"primary\\\"\\n  label=\\\"Subscribe to newsletter\\\"\\n  checked={isSubscribed}\\n  onCheckedChange={setIsSubscribed}\\n  disabled={isLoading}\\n  loading={isLoading}\\n/\u003e\\n\\n\u003cCheckbox \\n  variant=\\\"secondary\\\"\\n  label=\\\"Select all\\\"\\n  checked={allSelected}\\n  onCheckedChange={handleSelectAll}\\n  indeterminate={someSelected}\\n/\u003e\\n*/\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\DataTable.stories.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-unused-vars\",\"severity\":1,\"message\":\"\u0027useMemo\u0027 is defined but never used. Allowed unused vars must match /^_/u.\",\"line\":3,\"column\":20,\"nodeType\":null,\"messageId\":\"unusedVar\",\"endLine\":3,\"endColumn\":27},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":31,\"column\":49,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":31,\"endColumn\":55},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .id on an `any` value.\",\"line\":31,\"column\":53,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":31,\"endColumn\":55},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":32,\"column\":53,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":32,\"endColumn\":61},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .name on an `any` value.\",\"line\":32,\"column\":57,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":32,\"endColumn\":61},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":33,\"column\":55,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":33,\"endColumn\":64},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .email on an `any` value.\",\"line\":33,\"column\":59,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":33,\"endColumn\":64},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .status on an `any` value.\",\"line\":39,\"column\":17,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":39,\"endColumn\":23},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .status on an `any` value.\",\"line\":40,\"column\":17,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":40,\"endColumn\":23},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .status on an `any` value.\",\"line\":43,\"column\":18,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":43,\"endColumn\":24},{\"ruleId\":\"@typescript-eslint/no-unsafe-argument\",\"severity\":1,\"message\":\"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.\",\"line\":47,\"column\":73,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeArgument\",\"endLine\":47,\"endColumn\":86},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .lastLogin on an `any` value.\",\"line\":47,\"column\":77,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":47,\"endColumn\":86},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":57,\"column\":49,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":57,\"endColumn\":55},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .id on an `any` value.\",\"line\":57,\"column\":53,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":57,\"endColumn\":55},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":58,\"column\":53,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":58,\"endColumn\":61},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .name on an `any` value.\",\"line\":58,\"column\":57,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":58,\"endColumn\":61},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":59,\"column\":55,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":59,\"endColumn\":64},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .email on an `any` value.\",\"line\":59,\"column\":59,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":59,\"endColumn\":64},{\"ruleId\":\"@typescript-eslint/no-unsafe-argument\",\"severity\":1,\"message\":\"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.\",\"line\":60,\"column\":73,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeArgument\",\"endLine\":60,\"endColumn\":86},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .lastLogin on an `any` value.\",\"line\":60,\"column\":77,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":60,\"endColumn\":86},{\"ruleId\":\"react-hooks/rules-of-hooks\",\"severity\":2,\"message\":\"React Hook \\\"useState\\\" is called in function \\\"render\\\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \\\"use\\\".\",\"line\":69,\"column\":45,\"nodeType\":\"Identifier\",\"endLine\":69,\"endColumn\":53},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":97,\"column\":49,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":97,\"endColumn\":55},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .id on an `any` value.\",\"line\":97,\"column\":53,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":97,\"endColumn\":55},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":98,\"column\":53,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":98,\"endColumn\":61},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .name on an `any` value.\",\"line\":98,\"column\":57,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":98,\"endColumn\":61},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":99,\"column\":55,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":99,\"endColumn\":64},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .email on an `any` value.\",\"line\":99,\"column\":59,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":99,\"endColumn\":64},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":144,\"column\":24,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":144,\"endColumn\":30},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .id on an `any` value.\",\"line\":144,\"column\":28,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":144,\"endColumn\":30},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":151,\"column\":24,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":151,\"endColumn\":32},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .name on an `any` value.\",\"line\":151,\"column\":28,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":151,\"endColumn\":32},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an `any` typed value.\",\"line\":157,\"column\":24,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":157,\"endColumn\":33},{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .email on an `any` value.\",\"line\":157,\"column\":28,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":157,\"endColumn\":33}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":32,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import type { Meta, StoryObj } from \u0027@storybook/react\u0027;\\nimport { DataTable } from \u0027./DataTable\u0027;\\nimport { useState, useMemo } from \u0027react\u0027;\\n\\nconst meta: Meta\u003ctypeof DataTable\u003e = {\\n  title: \u0027Components/UI/DataTable\u0027,\\n  component: DataTable,\\n  tags: [\u0027autodocs\u0027],\\n  parameters: {\\n    layout: \u0027centered\u0027,\\n  },\\n};\\n\\nexport default meta;\\n\\ntype Story = StoryObj\u003ctypeof DataTable\u003e;\\n\\n// Sample data\\nconst sampleData = [\\n  { id: 1, name: \u0027John Doe\u0027, email: \u0027john@example.com\u0027, status: \u0027Active\u0027, lastLogin: \u00272025-06-15\u0027 },\\n  { id: 2, name: \u0027Jane Smith\u0027, email: \u0027jane@example.com\u0027, status: \u0027Inactive\u0027, lastLogin: \u00272025-06-10\u0027 },\\n  { id: 3, name: \u0027Bob Johnson\u0027, email: \u0027bob@example.com\u0027, status: \u0027Active\u0027, lastLogin: \u00272025-06-14\u0027 },\\n  { id: 4, name: \u0027Alice Williams\u0027, email: \u0027alice@example.com\u0027, status: \u0027Pending\u0027, lastLogin: \u00272025-06-05\u0027 },\\n  { id: 5, name: \u0027Charlie Brown\u0027, email: \u0027charlie@example.com\u0027, status: \u0027Active\u0027, lastLogin: \u00272025-06-16\u0027 },\\n];\\n\\n// Basic Table\\nexport const Basic: Story = {\\n  args: {\\n    columns: [\\n      { key: \u0027id\u0027, header: \u0027ID\u0027, cell: (row) =\u003e row.id },\\n      { key: \u0027name\u0027, header: \u0027Name\u0027, cell: (row) =\u003e row.name },\\n      { key: \u0027email\u0027, header: \u0027Email\u0027, cell: (row) =\u003e row.email },\\n      { \\n        key: \u0027status\u0027, \\n        header: \u0027Status\u0027, \\n        cell: (row) =\u003e (\\n          \u003cspan className={`px-2 py-1 text-xs rounded-full ${\\n            row.status === \u0027Active\u0027 ? \u0027bg-green-100 text-green-800\u0027 :\\n            row.status === \u0027Inactive\u0027 ? \u0027bg-red-100 text-red-800\u0027 :\\n            \u0027bg-yellow-100 text-yellow-800\u0027\\n          }`}\u003e\\n            {row.status}\\n          \u003c/span\u003e\\n        ) \\n      },\\n      { key: \u0027lastLogin\u0027, header: \u0027Last Login\u0027, cell: (row) =\u003e new Date(row.lastLogin).toLocaleDateString() },\\n    ],\\n    data: sampleData,\\n  },\\n};\\n\\n// Sortable Table\\nexport const Sortable: Story = {\\n  args: {\\n    columns: [\\n      { key: \u0027id\u0027, header: \u0027ID\u0027, cell: (row) =\u003e row.id, sortable: true },\\n      { key: \u0027name\u0027, header: \u0027Name\u0027, cell: (row) =\u003e row.name, sortable: true },\\n      { key: \u0027email\u0027, header: \u0027Email\u0027, cell: (row) =\u003e row.email, sortable: true },\\n      { key: \u0027lastLogin\u0027, header: \u0027Last Login\u0027, cell: (row) =\u003e new Date(row.lastLogin).toLocaleDateString(), sortable: true },\\n    ],\\n    data: sampleData,\\n  },\\n};\\n\\n// Selectable Table\\nexport const Selectable: Story = {\\n  render: () =\u003e {\\n    const [selectedRows, setSelectedRows] = useState\u003cnumber[]\u003e([]);\\n    \\n    return (\\n      \u003cdiv className=\\\"space-y-4\\\"\u003e\\n        \u003cdiv className=\\\"text-sm text-gray-600\\\"\u003e\\n          Selected IDs: {selectedRows.join(\u0027, \u0027) || \u0027None\u0027}\\n        \u003c/div\u003e\\n        \u003cDataTable\\n          columns={[\\n            { key: \u0027id\u0027, header: \u0027ID\u0027, cell: (row) =\u003e row.id },\\n            { key: \u0027name\u0027, header: \u0027Name\u0027, cell: (row) =\u003e row.name },\\n            { key: \u0027email\u0027, header: \u0027Email\u0027, cell: (row) =\u003e row.email },\\n          ]}\\n          data={sampleData}\\n          selectable={true}\\n          selectedRowKeys={selectedRows}\\n          onSelectionChange={setSelectedRows}\\n          rowKey=\\\"id\\\"\\n        /\u003e\\n      \u003c/div\u003e\\n    );\\n  },\\n};\\n\\n// Paginated Table\\nexport const Paginated: Story = {\\n  args: {\\n    columns: [\\n      { key: \u0027id\u0027, header: \u0027ID\u0027, cell: (row) =\u003e row.id },\\n      { key: \u0027name\u0027, header: \u0027Name\u0027, cell: (row) =\u003e row.name },\\n      { key: \u0027email\u0027, header: \u0027Email\u0027, cell: (row) =\u003e row.email },\\n    ],\\n    data: sampleData,\\n    pagination: {\\n      pageSize: 2,\\n      pageIndex: 0,\\n      pageCount: Math.ceil(sampleData.length / 2),\\n    },\\n  },\\n};\\n\\n// Loading State\\nexport const Loading: Story = {\\n  args: {\\n    columns: [\\n      { key: \u0027id\u0027, header: \u0027ID\u0027 },\\n      { key: \u0027name\u0027, header: \u0027Name\u0027 },\\n      { key: \u0027email\u0027, header: \u0027Email\u0027 },\\n    ],\\n    data: [],\\n    loading: true,\\n    loadingText: \u0027Loading user data...\u0027,\\n  },\\n};\\n\\n// Empty State\\nexport const Empty: Story = {\\n  args: {\\n    columns: [\\n      { key: \u0027id\u0027, header: \u0027ID\u0027 },\\n      { key: \u0027name\u0027, header: \u0027Name\u0027 },\\n      { key: \u0027email\u0027, header: \u0027Email\u0027 },\\n    ],\\n    data: [],\\n    emptyText: \u0027No users found. Try adjusting your search criteria.\u0027,\\n  },\\n};\\n\\n// Custom Styling\\nexport const CustomStyling: Story = {\\n  args: {\\n    columns: [\\n      { \\n        key: \u0027id\u0027, \\n        header: \u0027ID\u0027, \\n        cell: (row) =\u003e row.id,\\n        headerClassName: \u0027bg-gray-100 font-bold\u0027,\\n        cellClassName: \u0027font-mono\u0027,\\n      },\\n      { \\n        key: \u0027name\u0027, \\n        header: \u0027Full Name\u0027, \\n        cell: (row) =\u003e row.name,\\n        headerClassName: \u0027bg-gray-100 font-bold\u0027,\\n      },\\n      { \\n        key: \u0027email\u0027, \\n        header: \u0027Email Address\u0027, \\n        cell: (row) =\u003e row.email,\\n        headerClassName: \u0027bg-gray-100 font-bold\u0027,\\n      },\\n    ],\\n    data: sampleData,\\n    className: \u0027border border-gray-200 rounded-lg overflow-hidden\u0027,\\n    headerClassName: \u0027bg-gray-50\u0027,\\n    rowClassName: \u0027hover:bg-gray-50 transition-colors\u0027,\\n  },\\n};\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\DataTable.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Dialog.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-unsafe-argument\",\"severity\":1,\"message\":\"Unsafe argument of type `any` assigned to a parameter of type `ClassValue`.\",\"line\":15,\"column\":41,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeArgument\",\"endLine\":15,\"endColumn\":50}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import * as React from \u0027react\u0027;\\nimport * as DialogPrimitive from \u0027@radix-ui/react-dialog\u0027;\\nimport { X } from \u0027lucide-react\u0027;\\nimport { cn } from \u0027../../lib/utils\u0027;\\n\\nconst Dialog = DialogPrimitive.Root;\\n\\nconst DialogTrigger = DialogPrimitive.Trigger;\\n\\nconst DialogPortal = ({\\n  className,\\n  children,\\n  ...props\\n}: DialogPrimitive.DialogPortalProps) =\u003e (\\n  \u003cDialogPrimitive.Portal className={cn(className)} {...props}\u003e\\n    \u003cdiv className=\\\"fixed inset-0 z-50 flex items-start justify-center sm:items-center\\\"\u003e\\n      {children}\\n    \u003c/div\u003e\\n  \u003c/DialogPrimitive.Portal\u003e\\n);\\nDialogPortal.displayName = DialogPrimitive.Portal.displayName;\\n\\nconst DialogOverlay = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof DialogPrimitive.Overlay\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Overlay\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cDialogPrimitive.Overlay\\n    ref={ref}\\n    className={cn(\\n      \u0027fixed inset-0 z-50 bg-background/80 backdrop-blur-sm\u0027,\\n      \u0027data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\u0027,\\n      className\\n    )}\\n    {...props}\\n  /\u003e\\n));\\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\\n\\nconst DialogContent = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof DialogPrimitive.Content\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Content\u003e \u0026 {\\n    /** Whether to show the close button */\\n    showCloseButton?: boolean;\\n    /** Additional class name for the close button */\\n    closeButtonClassName?: string;\\n  }\\n\u003e(({ className, children, showCloseButton = true, closeButtonClassName, ...props }, ref) =\u003e (\\n  \u003cDialogPortal\u003e\\n    \u003cDialogOverlay /\u003e\\n    \u003cDialogPrimitive.Content\\n      ref={ref}\\n      className={cn(\\n        \u0027fixed z-50 grid w-full gap-4 rounded-b-lg border bg-background p-6 shadow-lg\u0027,\\n        \u0027sm:max-w-lg sm:rounded-lg\u0027,\\n        \u0027duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out\u0027,\\n        \u0027data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\u0027,\\n        \u0027data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95\u0027,\\n        \u0027data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%]\u0027,\\n        \u0027data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]\u0027,\\n        className\\n      )}\\n      {...props}\\n    \u003e\\n      {children}\\n      {showCloseButton \u0026\u0026 (\\n        \u003cDialogPrimitive.Close\\n          className={cn(\\n            \u0027absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity\u0027,\\n            \u0027hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\u0027,\\n            \u0027disabled:pointer-events-none\u0027,\\n            \u0027data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\u0027,\\n            closeButtonClassName\\n          )}\\n        \u003e\\n          \u003cX className=\\\"h-4 w-4\\\" /\u003e\\n          \u003cspan className=\\\"sr-only\\\"\u003eClose\u003c/span\u003e\\n        \u003c/DialogPrimitive.Close\u003e\\n      )}\\n    \u003c/DialogPrimitive.Content\u003e\\n  \u003c/DialogPortal\u003e\\n));\\nDialogContent.displayName = DialogPrimitive.Content.displayName;\\n\\nconst DialogHeader = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\\n  \u003cdiv\\n    className={cn(\\n      \u0027flex flex-col space-y-1.5 text-center sm:text-left\u0027,\\n      className\\n    )}\\n    {...props}\\n  /\u003e\\n);\\nDialogHeader.displayName = \u0027DialogHeader\u0027;\\n\\nconst DialogFooter = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\\n  \u003cdiv\\n    className={cn(\\n      \u0027flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\u0027,\\n      className\\n    )}\\n    {...props}\\n  /\u003e\\n);\\nDialogFooter.displayName = \u0027DialogFooter\u0027;\\n\\nconst DialogTitle = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof DialogPrimitive.Title\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Title\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cDialogPrimitive.Title\\n    ref={ref}\\n    className={cn(\\n      \u0027text-lg font-semibold leading-none tracking-tight\u0027,\\n      className\\n    )}\\n    {...props}\\n  /\u003e\\n));\\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\\n\\nconst DialogDescription = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof DialogPrimitive.Description\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Description\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cDialogPrimitive.Description\\n    ref={ref}\\n    className={cn(\u0027text-sm text-muted-foreground\u0027, className)}\\n    {...props}\\n  /\u003e\\n));\\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\\n\\n// Extended Dialog component with default props for common use cases\\ninterface ExtendedDialogProps extends React.ComponentProps\u003ctypeof Dialog\u003e {\\n  /** Whether the dialog is open */\\n  open: boolean;\\n  /** Callback when the open state changes */\\n  onOpenChange: (open: boolean) =\u003e void;\\n  /** The dialog title */\\n  title?: React.ReactNode;\\n  /** The dialog description */\\n  description?: React.ReactNode;\\n  /** The dialog content */\\n  children?: React.ReactNode;\\n  /** Additional class name for the dialog content */\\n  contentClassName?: string;\\n  /** Whether to show the close button */\\n  showCloseButton?: boolean;\\n  /** Additional class name for the close button */\\n  closeButtonClassName?: string;\\n  /** Additional class name for the overlay */\\n  overlayClassName?: string;\\n  /** Additional class name for the header */\\n  headerClassName?: string;\\n  /** Additional class name for the footer */\\n  footerClassName?: string;\\n  /** Footer content */\\n  footer?: React.ReactNode;\\n  /** Whether to close the dialog when clicking outside */\\n  closeOnOutsideClick?: boolean;\\n  /** Whether to close the dialog when pressing the escape key */\\n  closeOnEscape?: boolean;\\n  /** Additional props for the dialog content */\\n  contentProps?: React.ComponentProps\u003ctypeof DialogContent\u003e;\\n  /** Additional props for the dialog overlay */\\n  overlayProps?: React.ComponentProps\u003ctypeof DialogOverlay\u003e;\\n}\\n\\n/**\\n * An enhanced Dialog component that combines Radix UI Dialog primitives with sensible defaults.\\n * Provides a simple API for common dialog use cases while maintaining full customization.\\n */\\nconst ExtendedDialog: React.FC\u003cExtendedDialogProps\u003e = ({\\n  open,\\n  onOpenChange,\\n  title,\\n  description,\\n  children,\\n  contentClassName,\\n  showCloseButton = true,\\n  closeButtonClassName,\\n  overlayClassName,\\n  headerClassName,\\n  footerClassName,\\n  footer,\\n  closeOnOutsideClick = true,\\n  closeOnEscape = true,\\n  contentProps,\\n  overlayProps,\\n  ...props\\n}) =\u003e {\\n  return (\\n    \u003cDialog\\n      open={open}\\n      onOpenChange={onOpenChange}\\n      {...props}\\n    \u003e\\n      \u003cDialogContent\\n        className={contentClassName}\\n        showCloseButton={showCloseButton}\\n        closeButtonClassName={closeButtonClassName}\\n        onPointerDownOutside={(e) =\u003e {\\n          if (!closeOnOutsideClick) {\\n            e.preventDefault();\\n          }\\n        }}\\n        onEscapeKeyDown={(e) =\u003e {\\n          if (!closeOnEscape) {\\n            e.preventDefault();\\n          }\\n        }}\\n        {...contentProps}\\n      \u003e\\n        {(title || description) \u0026\u0026 (\\n          \u003cDialogHeader className={headerClassName}\u003e\\n            {title \u0026\u0026 \u003cDialogTitle\u003e{title}\u003c/DialogTitle\u003e}\\n            {description \u0026\u0026 (\\n              \u003cDialogDescription\u003e{description}\u003c/DialogDescription\u003e\\n            )}\\n          \u003c/DialogHeader\u003e\\n        )}\\n        {children}\\n        {footer \u0026\u0026 (\\n          \u003cDialogFooter className={footerClassName}\u003e\\n            {footer}\\n          \u003c/DialogFooter\u003e\\n        )}\\n      \u003c/DialogContent\u003e\\n    \u003c/Dialog\u003e\\n  );\\n};\\n\\nexport {\\n  Dialog,\\n  DialogTrigger,\\n  DialogContent,\\n  DialogHeader,\\n  DialogFooter,\\n  DialogTitle,\\n  DialogDescription,\\n  ExtendedDialog,\\n};\\n\\n// Example usage:\\n/*\\n// Basic usage with state management\\nconst [isOpen, setIsOpen] = React.useState(false);\\n\\n\u003cDialog open={isOpen} onOpenChange={setIsOpen}\u003e\\n  \u003cDialogTrigger asChild\u003e\\n    \u003cButton\u003eOpen Dialog\u003c/Button\u003e\\n  \u003c/DialogTrigger\u003e\\n  \u003cDialogContent\u003e\\n    \u003cDialogHeader\u003e\\n      \u003cDialogTitle\u003eAre you sure?\u003c/DialogTitle\u003e\\n      \u003cDialogDescription\u003e\\n        This action cannot be undone. This will permanently delete your account\\n        and remove your data from our servers.\\n      \u003c/DialogDescription\u003e\\n    \u003c/DialogHeader\u003e\\n    \u003cdiv className=\\\"py-4\\\"\u003e\\n      \u003cp\u003eThis is the dialog content.\u003c/p\u003e\\n    \u003c/div\u003e\\n    \u003cDialogFooter\u003e\\n      \u003cButton variant=\\\"outline\\\" onClick={() =\u003e setIsOpen(false)}\u003e\\n        Cancel\\n      \u003c/Button\u003e\\n      \u003cButton variant=\\\"destructive\\\"\u003eDelete\u003c/Button\u003e\\n    \u003c/DialogFooter\u003e\\n  \u003c/DialogContent\u003e\\n\u003c/Dialog\u003e\\n\\n// Using the extended component\\nconst [isOpen, setIsOpen] = React.useState(false);\\n\\n\u003c\u003e\\n  \u003cButton onClick={() =\u003e setIsOpen(true)}\u003eOpen Extended Dialog\u003c/Button\u003e\\n  \u003cExtendedDialog\\n    open={isOpen}\\n    onOpenChange={setIsOpen}\\n    title=\\\"Extended Dialog\\\"\\n    description=\\\"This is an example of the extended dialog component.\\\"\\n    footer={\\n      \u003c\u003e\\n        \u003cButton variant=\\\"outline\\\" onClick={() =\u003e setIsOpen(false)}\u003e\\n          Cancel\\n        \u003c/Button\u003e\\n        \u003cButton\u003eContinue\u003c/Button\u003e\\n      \u003c/\u003e\\n    }\\n  \u003e\\n    \u003cdiv className=\\\"py-4\\\"\u003e\\n      \u003cp\u003eThis is the dialog content.\u003c/p\u003e\\n    \u003c/div\u003e\\n  \u003c/ExtendedDialog\u003e\\n\u003c/\u003e\\n*/\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\DropdownMenu.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Fragment.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Input.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Link.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\RadioGroup.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Select.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Switch.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Table.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-unused-vars\",\"severity\":1,\"message\":\"\u0027props\u0027 is defined but never used. Allowed unused args must match /^_/u.\",\"line\":241,\"column\":6,\"nodeType\":null,\"messageId\":\"unusedVar\",\"endLine\":241,\"endColumn\":11},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an error typed value.\",\"line\":259,\"column\":5,\"nodeType\":\"ReturnStatement\",\"messageId\":\"unsafeReturn\",\"endLine\":259,\"endColumn\":76},{\"ruleId\":\"@typescript-eslint/no-unsafe-assignment\",\"severity\":1,\"message\":\"Unsafe assignment of an error typed value.\",\"line\":263,\"column\":11,\"nodeType\":\"VariableDeclarator\",\"messageId\":\"anyAssignment\",\"endLine\":263,\"endColumn\":38},{\"ruleId\":\"@typescript-eslint/no-unsafe-argument\",\"severity\":1,\"message\":\"Unsafe argument of type `any` assigned to a parameter of type `string | number`.\",\"line\":264,\"column\":37,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeArgument\",\"endLine\":264,\"endColumn\":40},{\"ruleId\":\"@typescript-eslint/no-unsafe-assignment\",\"severity\":1,\"message\":\"Unsafe assignment of an error typed value.\",\"line\":317,\"column\":20,\"nodeType\":\"CallExpression\",\"messageId\":\"anyAssignment\",\"endLine\":317,\"endColumn\":44},{\"ruleId\":\"@typescript-eslint/no-unsafe-assignment\",\"severity\":1,\"message\":\"Unsafe assignment of an error typed value.\",\"line\":323,\"column\":23,\"nodeType\":\"VariableDeclarator\",\"messageId\":\"anyAssignment\",\"endLine\":325,\"endColumn\":36}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":6,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import * as React from \u0027react\u0027;\\nimport { cn } from \u0027../../lib/utils\u0027;\\n\\n// Table component with responsive design and styling\\nconst Table = React.forwardRef\u003c\\n  HTMLTableElement,\\n  React.HTMLAttributes\u003cHTMLTableElement\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cdiv className=\\\"w-full overflow-auto\\\"\u003e\\n    \u003ctable\\n      ref={ref}\\n      className={cn(\u0027w-full caption-bottom text-sm\u0027, className)}\\n      {...props}\\n    /\u003e\\n  \u003c/div\u003e\\n));\\nTable.displayName = \u0027Table\u0027;\\n\\nconst TableHeader = React.forwardRef\u003c\\n  HTMLTableSectionElement,\\n  React.HTMLAttributes\u003cHTMLTableSectionElement\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cthead ref={ref} className={cn(\u0027[\u0026_tr]:border-b\u0027, className)} {...props} /\u003e\\n));\\nTableHeader.displayName = \u0027TableHeader\u0027;\\n\\nconst TableBody = React.forwardRef\u003c\\n  HTMLTableSectionElement,\\n  React.HTMLAttributes\u003cHTMLTableSectionElement\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003ctbody\\n    ref={ref}\\n    className={cn(\u0027[\u0026_tr:last-child]:border-0\u0027, className)}\\n    {...props}\\n  /\u003e\\n));\\nTableBody.displayName = \u0027TableBody\u0027;\\n\\nconst TableFooter = React.forwardRef\u003c\\n  HTMLTableSectionElement,\\n  React.HTMLAttributes\u003cHTMLTableSectionElement\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003ctfoot\\n    ref={ref}\\n    className={cn(\u0027bg-primary font-medium text-primary-foreground\u0027, className)}\\n    {...props}\\n  /\u003e\\n));\\nTableFooter.displayName = \u0027TableFooter\u0027;\\n\\nconst TableRow = React.forwardRef\u003c\\n  HTMLTableRowElement,\\n  React.HTMLAttributes\u003cHTMLTableRowElement\u003e \u0026 {\\n    /** Whether the row is hoverable */\\n    hoverable?: boolean;\\n    /** Whether the row is selected */\\n    selected?: boolean;\\n    /** Whether the row is clickable */\\n    onClick?: () =\u003e void;\\n  }\\n\u003e(({ className, hoverable = true, selected = false, onClick, ...props }, ref) =\u003e (\\n  \u003ctr\\n    ref={ref}\\n    className={cn(\\n      \u0027border-b transition-colors\u0027,\\n      hoverable \u0026\u0026 \u0027hover:bg-muted/50\u0027,\\n      selected \u0026\u0026 \u0027bg-muted/50\u0027,\\n      onClick \u0026\u0026 \u0027cursor-pointer\u0027,\\n      className\\n    )}\\n    onClick={onClick}\\n    {...props}\\n  /\u003e\\n));\\nTableRow.displayName = \u0027TableRow\u0027;\\n\\nconst TableHead = React.forwardRef\u003c\\n  HTMLTableCellElement,\\n  React.ThHTMLAttributes\u003cHTMLTableCellElement\u003e \u0026 {\\n    /** Whether the column is sortable */\\n    sortable?: boolean;\\n    /** The sort direction */\\n    sortDirection?: \u0027asc\u0027 | \u0027desc\u0027 | false;\\n    /** Callback when the column is clicked for sorting */\\n    onSort?: () =\u003e void;\\n  }\\n\u003e(({ className, sortable, sortDirection, onSort, children, ...props }, ref) =\u003e {\\n  const handleClick = () =\u003e {\\n    if (sortable \u0026\u0026 onSort) {\\n      onSort();\\n    }\\n  };\\n\\n  return (\\n    \u003cth\\n      ref={ref}\\n      className={cn(\\n        \u0027h-12 px-4 text-left align-middle font-medium text-muted-foreground [\u0026:has([role=checkbox])]:pr-0\u0027,\\n        sortable \u0026\u0026 \u0027cursor-pointer select-none\u0027,\\n        className\\n      )}\\n      onClick={handleClick}\\n      {...props}\\n    \u003e\\n      \u003cdiv className=\\\"flex items-center\\\"\u003e\\n        {children}\\n        {sortable \u0026\u0026 (\\n          \u003cspan className=\\\"ml-2\\\"\u003e\\n            {sortDirection === \u0027asc\u0027 ? (\\n              \u003cspan className=\\\"inline-block\\\"\u003eΓåæ\u003c/span\u003e\\n            ) : sortDirection === \u0027desc\u0027 ? (\\n              \u003cspan className=\\\"inline-block\\\"\u003eΓåô\u003c/span\u003e\\n            ) : (\\n              \u003cspan className=\\\"inline-block opacity-30\\\"\u003eΓåò\u003c/span\u003e\\n            )}\\n          \u003c/span\u003e\\n        )}\\n      \u003c/div\u003e\\n    \u003c/th\u003e\\n  );\\n});\\nTableHead.displayName = \u0027TableHead\u0027;\\n\\nconst TableCell = React.forwardRef\u003c\\n  HTMLTableCellElement,\\n  React.TdHTMLAttributes\u003cHTMLTableCellElement\u003e \u0026 {\\n    /** Whether the cell is a data cell or a header cell */\\n    asHeader?: boolean;\\n    /** Whether the cell should have a fixed width */\\n    fixedWidth?: string | number;\\n  }\\n\u003e(({ className, asHeader = false, fixedWidth, style, ...props }, ref) =\u003e {\\n  const Component = asHeader ? \u0027th\u0027 : \u0027td\u0027;\\n  \\n  return (\\n    \u003cComponent\\n      ref={ref as unknown}\\n      className={cn(\\n        \u0027p-4 align-middle [\u0026:has([role=checkbox])]:pr-0\u0027,\\n        className\\n      )}\\n      style={fixedWidth ? { ...style, width: fixedWidth } : style}\\n      {...props}\\n    /\u003e\\n  );\\n});\\nTableCell.displayName = \u0027TableCell\u0027;\\n\\nconst TableCaption = React.forwardRef\u003c\\n  HTMLTableCaptionElement,\\n  React.HTMLAttributes\u003cHTMLTableCaptionElement\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003ccaption\\n    ref={ref}\\n    className={cn(\u0027mt-4 text-sm text-muted-foreground\u0027, className)}\\n    {...props}\\n  /\u003e\\n));\\nTableCaption.displayName = \u0027TableCaption\u0027;\\n\\n// Extended Table component with additional features\\ninterface TableEnhancedProps extends React.HTMLAttributes\u003cHTMLTableElement\u003e {\\n  /** The table columns configuration */\\n  columns: Array\u003c{\\n    /** The unique key for the column */\\n    key: string;\\n    /** The column header */\\n    header: React.ReactNode;\\n    /** The column width (e.g., \u0027100px\u0027, \u002720%\u0027) */\\n    width?: string | number;\\n    /** Whether the column is sortable */\\n    sortable?: boolean;\\n    /** Custom cell renderer */\\n    cell?: (row: unknown, rowIndex: number) =\u003e React.ReactNode;\\n    /** Additional class name for the column header */\\n    headerClassName?: string;\\n    /** Additional class name for the column cells */\\n    cellClassName?: string | ((row: unknown, rowIndex: number) =\u003e string);\\n  }\u003e;\\n  /** The table data */\\n  data: unknown[];\\n  /** The unique row key getter */\\n  rowKey: string | ((row: unknown, index: number) =\u003e string | number);\\n  /** The current sort configuration */\\n  sort?: {\\n    /** The column key being sorted */\\n    key: string;\\n    /** The sort direction */\\n    direction: \u0027asc\u0027 | \u0027desc\u0027;\\n  };\\n  /** Callback when sort changes */\\n  onSortChange?: (sort: { key: string; direction: \u0027asc\u0027 | \u0027desc\u0027 }) =\u003e void;\\n  /** Whether to show a loading state */\\n  loading?: boolean;\\n  /** The loading component to render */\\n  loadingComponent?: React.ReactNode;\\n  /** The empty state component to render when there\u0027s no data */\\n  emptyComponent?: React.ReactNode;\\n  /** Whether to show the table header */\\n  showHeader?: boolean;\\n  /** Additional class name for the table */\\n  className?: string;\\n  /** Additional class name for the table header */\\n  headerClassName?: string;\\n  /** Additional class name for the table body */\\n  bodyClassName?: string;\\n  /** Additional class name for the table rows */\\n  rowClassName?: string | ((row: unknown, index: number) =\u003e string);\\n  /** Whether rows are clickable */\\n  onRowClick?: (row: unknown, index: number) =\u003e void;\\n  /** The currently selected row key(s) */\\n  selectedRowKeys?: (string | number)[];\\n  /** Whether to highlight the selected row */\\n  highlightSelected?: boolean;\\n  /** The table layout */\\n  layout?: \u0027auto\u0027 | \u0027fixed\u0027;\\n}\\n\\n/**\\n * An enhanced Table component that provides a simple API for displaying tabular data.\\n * Supports sorting, selection, loading states, and more.\\n */\\nconst TableEnhanced: React.FC\u003cTableEnhancedProps\u003e = ({\\n  columns,\\n  data = [],\\n  rowKey,\\n  sort,\\n  onSortChange,\\n  loading = false,\\n  loadingComponent = \u003cTableLoading /\u003e,\\n  emptyComponent = \u003cTableEmpty /\u003e,\\n  showHeader = true,\\n  className,\\n  headerClassName,\\n  bodyClassName,\\n  rowClassName,\\n  onRowClick,\\n  selectedRowKeys = [],\\n  highlightSelected = true,\\n  layout = \u0027auto\u0027,\\n  ...props\\n}) =\u003e {\\n  const handleSort = (key: string) =\u003e {\\n    if (!onSortChange || !columns.find(col =\u003e col.key === key)?.sortable) return;\\n    \\n    if (sort?.key === key) {\\n      // Toggle direction if clicking the same column\\n      onSortChange({\\n        key,\\n        direction: sort.direction === \u0027asc\u0027 ? \u0027desc\u0027 : \u0027asc\u0027,\\n      });\\n    } else {\\n      // Default to ascending when clicking a new column\\n      onSortChange({ key, direction: \u0027asc\u0027 });\\n    }\\n  };\\n\\n  const getRowKey = (row: unknown, index: number) =\u003e {\\n    return typeof rowKey === \u0027function\u0027 ? rowKey(row, index) : row[rowKey];\\n  };\\n\\n  const isRowSelected = (row: unknown, index: number) =\u003e {\\n    const key = getRowKey(row, index);\\n    return selectedRowKeys.includes(key);\\n  };\\n\\n  const getRowClassName = (row: unknown, index: number) =\u003e {\\n    const baseClasses = [];\\n    \\n    if (typeof rowClassName === \u0027function\u0027) {\\n      baseClasses.push(rowClassName(row, index));\\n    } else if (rowClassName) {\\n      baseClasses.push(rowClassName);\\n    }\\n    \\n    if (highlightSelected \u0026\u0026 isRowSelected(row, index)) {\\n      baseClasses.push(\u0027bg-muted/50\u0027);\\n    }\\n    \\n    return baseClasses.join(\u0027 \u0027);\\n  };\\n\\n  // Render loading state\\n  if (loading) {\\n    return \u003cdiv className={cn(\u0027w-full\u0027, className)}\u003e{loadingComponent}\u003c/div\u003e;\\n  }\\n\\n  // Render empty state\\n  if (data.length === 0 \u0026\u0026 !loading) {\\n    return \u003cdiv className={cn(\u0027w-full\u0027, className)}\u003e{emptyComponent}\u003c/div\u003e;\\n  }\\n\\n  return (\\n    \u003cdiv className={cn(\u0027w-full overflow-hidden rounded-md border\u0027, className)}\u003e\\n      \u003cTable style={{ tableLayout: layout }}\u003e\\n        {showHeader \u0026\u0026 (\\n          \u003cTableHeader className={headerClassName}\u003e\\n            \u003cTableRow\u003e\\n              {columns.map((column) =\u003e (\\n                \u003cTableHead\\n                  key={column.key}\\n                  sortable={column.sortable}\\n                  sortDirection={sort?.key === column.key ? sort.direction : false}\\n                  onSort={() =\u003e handleSort(column.key)}\\n                  className={column.headerClassName}\\n                  style={column.width ? { width: column.width } : undefined}\\n                \u003e\\n                  {column.header}\\n                \u003c/TableHead\u003e\\n              ))}\\n            \u003c/TableRow\u003e\\n          \u003c/TableHeader\u003e\\n        )}\\n        \u003cTableBody className={bodyClassName}\u003e\\n          {data.map((row, rowIndex) =\u003e (\\n            \u003cTableRow\\n              key={getRowKey(row, rowIndex)}\\n              className={getRowClassName(row, rowIndex)}\\n              selected={highlightSelected \u0026\u0026 isRowSelected(row, rowIndex)}\\n              onClick={() =\u003e onRowClick?.(row, rowIndex)}\\n            \u003e\\n              {columns.map((column) =\u003e {\\n                const cellContent = column.cell\\n                  ? column.cell(row, rowIndex)\\n                  : row[column.key];\\n                \\n                const cellClassName = typeof column.cellClassName === \u0027function\u0027\\n                  ? column.cellClassName(row, rowIndex)\\n                  : column.cellClassName;\\n                \\n                return (\\n                  \u003cTableCell\\n                    key={`${getRowKey(row, rowIndex)}-${column.key}`}\\n                    className={cellClassName}\\n                    style={column.width ? { width: column.width } : undefined}\\n                  \u003e\\n                    {cellContent}\\n                  \u003c/TableCell\u003e\\n                );\\n              })}\\n            \u003c/TableRow\u003e\\n          ))}\\n        \u003c/TableBody\u003e\\n      \u003c/Table\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\n// Loading component for the table\\nconst TableLoading: React.FC = () =\u003e (\\n  \u003cdiv className=\\\"flex h-32 items-center justify-center\\\"\u003e\\n    \u003cdiv className=\\\"flex flex-col items-center space-y-2\\\"\u003e\\n      \u003cdiv className=\\\"h-8 w-8 animate-spin rounded-full border-4 border-primary border-t-transparent\\\" /\u003e\\n      \u003cp className=\\\"text-muted-foreground\\\"\u003eLoading data...\u003c/p\u003e\\n    \u003c/div\u003e\\n  \u003c/div\u003e\\n);\\n\\n// Empty state component for the table\\nconst TableEmpty: React.FC\u003c{ message?: string }\u003e = ({\\n  message = \u0027No data available\u0027,\\n}) =\u003e (\\n  \u003cdiv className=\\\"flex h-32 items-center justify-center\\\"\u003e\\n    \u003cp className=\\\"text-muted-foreground\\\"\u003e{message}\u003c/p\u003e\\n  \u003c/div\u003e\\n);\\n\\nexport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  TableFooter,\\n  TableHead,\\n  TableRow,\\n  TableCell,\\n  TableCaption,\\n  TableEnhanced,\\n  TableLoading,\\n  TableEmpty,\\n};\\n\\n// Example usage:\\n/*\\n// Basic usage\\nconst data = [\\n  { id: 1, name: \u0027John Doe\u0027, email: \u0027john@example.com\u0027, role: \u0027Admin\u0027 },\\n  { id: 2, name: \u0027Jane Smith\u0027, email: \u0027jane@example.com\u0027, role: \u0027User\u0027 },\\n  { id: 3, name: \u0027Bob Johnson\u0027, email: \u0027bob@example.com\u0027, role: \u0027User\u0027 },\\n];\\n\\nconst columns = [\\n  {\\n    key: \u0027name\u0027,\\n    header: \u0027Name\u0027,\\n    sortable: true,\\n  },\\n  {\\n    key: \u0027email\u0027,\\n    header: \u0027Email\u0027,\\n  },\\n  {\\n    key: \u0027role\u0027,\\n    header: \u0027Role\u0027,\\n    cell: (row) =\u003e (\\n      \u003cBadge variant={row.role === \u0027Admin\u0027 ? \u0027default\u0027 : \u0027outline\u0027}\u003e\\n        {row.role}\\n      \u003c/Badge\u003e\\n    ),\\n  },\\n  {\\n    key: \u0027actions\u0027,\\n    header: \u0027Actions\u0027,\\n    cell: (row) =\u003e (\\n      \u003cdiv className=\\\"flex space-x-2\\\"\u003e\\n        \u003cButton variant=\\\"ghost\\\" size=\\\"sm\\\"\u003e\\n          \u003cEdit className=\\\"h-4 w-4\\\" /\u003e\\n        \u003c/Button\u003e\\n        \u003cButton variant=\\\"ghost\\\" size=\\\"sm\\\"\u003e\\n          \u003cTrash2 className=\\\"h-4 w-4\\\" /\u003e\\n        \u003c/Button\u003e\\n      \u003c/div\u003e\\n    ),\\n  },\\n];\\n\\nfunction UsersTable() {\\n  const [sort, setSort] = React.useState({ key: \u0027name\u0027, direction: \u0027asc\u0027 });\\n  const [selectedRowKeys, setSelectedRowKeys] = React.useState\u003cnumber[]\u003e([]);\\n  \\n  const handleSort = (newSort: { key: string; direction: \u0027asc\u0027 | \u0027desc\u0027 }) =\u003e {\\n    setSort(newSort);\\n    // You would typically fetch sorted data here\\n  };\\n  \\n  const handleRowClick = (row: any) =\u003e {\\n    console.log(\u0027Row clicked:\u0027, row);\\n  };\\n  \\n  return (\\n    \u003cTableEnhanced\\n      columns={columns}\\n      data={data}\\n      rowKey=\\\"id\\\"\\n      sort={sort}\\n      onSortChange={handleSort}\\n      selectedRowKeys={selectedRowKeys}\\n      onRowClick={handleRowClick}\\n      className=\\\"mt-4\\\"\\n    /\u003e\\n  );\\n}\\n\\n// With loading state\\nfunction UsersTableWithLoading() {\\n  const [loading, setLoading] = React.useState(true);\\n  \\n  React.useEffect(() =\u003e {\\n    // Simulate loading data\\n    const timer = setTimeout(() =\u003e {\\n      setLoading(false);\\n    }, 2000);\\n    \\n    return () =\u003e clearTimeout(timer);\\n  }, []);\\n  \\n  return (\\n    \u003cTableEnhanced\\n      columns={columns}\\n      data={loading ? [] : data}\\n      rowKey=\\\"id\\\"\\n      loading={loading}\\n      loadingComponent={\\n        \u003cdiv className=\\\"flex h-64 items-center justify-center\\\"\u003e\\n          \u003cdiv className=\\\"flex flex-col items-center space-y-4\\\"\u003e\\n            \u003cdiv className=\\\"h-12 w-12 animate-spin rounded-full border-4 border-primary border-t-transparent\\\"\u003e\u003c/div\u003e\\n            \u003cp className=\\\"text-lg font-medium\\\"\u003eLoading users...\u003c/p\u003e\\n            \u003cp className=\\\"text-sm text-muted-foreground\\\"\u003ePlease wait while we load your data\u003c/p\u003e\\n          \u003c/div\u003e\\n        \u003c/div\u003e\\n      }\\n    /\u003e\\n  );\\n}\\n\\n// With empty state\\nfunction UsersTableEmpty() {\\n  return (\\n    \u003cTableEnhanced\\n      columns={columns}\\n      data={[]}\\n      rowKey=\\\"id\\\"\\n      emptyComponent={\\n        \u003cdiv className=\\\"flex h-64 flex-col items-center justify-center space-y-4\\\"\u003e\\n          \u003cUsers className=\\\"h-12 w-12 text-muted-foreground\\\" /\u003e\\n          \u003cp className=\\\"text-lg font-medium\\\"\u003eNo users found\u003c/p\u003e\\n          \u003cp className=\\\"text-muted-foreground\\\"\u003e\\n            Get started by creating a new user\\n          \u003c/p\u003e\\n          \u003cButton\u003e\\n            \u003cPlus className=\\\"mr-2 h-4 w-4\\\" /\u003e\\n            Add User\\n          \u003c/Button\u003e\\n        \u003c/div\u003e\\n      }\\n    /\u003e\\n  );\\n}\\n*/\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Tabs.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Textarea.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Toast.tsx\",\"messages\":[{\"ruleId\":null,\"fatal\":true,\"severity\":2,\"message\":\"Parsing error: \u0027,\u0027 expected.\",\"line\":180,\"column\":15,\"nodeType\":null}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":1,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import * as React from \u0027react\u0027;\\nimport * as ToastPrimitives from \u0027@radix-ui/react-toast\u0027;\\nimport { cva, type VariantProps } from \u0027class-variance-authority\u0027;\\nimport { X } from \u0027lucide-react\u0027;\\nimport { cn } from \u0027../../lib/utils\u0027;\\n\\nconst ToastProvider = ToastPrimitives.Provider;\\n\\nconst ToastViewport = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof ToastPrimitives.Viewport\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Viewport\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cToastPrimitives.Viewport\\n    ref={ref}\\n    className={cn(\\n      \u0027fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\u0027,\\n      className\\n    )}\\n    {...props}\\n  /\u003e\\n));\\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\\n\\nconst toastVariants = cva(\\n  \u0027group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\u0027,\\n  {\\n    variants: {\\n      variant: {\\n        default: \u0027border bg-background text-foreground\u0027,\\n        success: \u0027group border-success/50 bg-success/10 text-success-foreground\u0027,\\n        error: \u0027group border-destructive/50 bg-destructive/10 text-destructive-foreground\u0027,\\n        warning: \u0027group border-warning/50 bg-warning/10 text-warning-foreground\u0027,\\n        info: \u0027group border-info/50 bg-info/10 text-info-foreground\u0027,\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \u0027default\u0027,\\n    },\\n  }\\n);\\n\\nconst Toast = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof ToastPrimitives.Root\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Root\u003e \u0026\\n    VariantProps\u003ctypeof toastVariants\u003e\\n\u003e(({ className, variant, ...props }, ref) =\u003e {\\n  return (\\n    \u003cToastPrimitives.Root\\n      ref={ref}\\n      className={cn(toastVariants({ variant }), className)}\\n      {...props}\\n    /\u003e\\n  );\\n});\\nToast.displayName = ToastPrimitives.Root.displayName;\\n\\nconst ToastAction = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof ToastPrimitives.Action\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Action\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cToastPrimitives.Action\\n    ref={ref}\\n    className={cn(\\n      \u0027inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\u0027,\\n      className\\n    )}\\n    {...props}\\n  /\u003e\\n));\\nToastAction.displayName = ToastPrimitives.Action.displayName;\\n\\nconst ToastClose = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof ToastPrimitives.Close\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Close\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cToastPrimitives.Close\\n    ref={ref}\\n    className={cn(\\n      \u0027absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\u0027,\\n      className\\n    )}\\n    toast-close=\\\"\\\"\\n    {...props}\\n  \u003e\\n    \u003cX className=\\\"h-4 w-4\\\" /\u003e\\n  \u003c/ToastPrimitives.Close\u003e\\n));\\nToastClose.displayName = ToastPrimitives.Close.displayName;\\n\\nconst ToastTitle = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof ToastPrimitives.Title\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Title\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cToastPrimitives.Title\\n    ref={ref}\\n    className={cn(\u0027text-sm font-semibold\u0027, className)}\\n    {...props}\\n  /\u003e\\n));\\nToastTitle.displayName = ToastPrimitives.Title.displayName;\\n\\nconst ToastDescription = React.forwardRef\u003c\\n  React.ElementRef\u003ctypeof ToastPrimitives.Description\u003e,\\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Description\u003e\\n\u003e(({ className, ...props }, ref) =\u003e (\\n  \u003cToastPrimitives.Description\\n    ref={ref}\\n    className={cn(\u0027text-sm opacity-90\u0027, className)}\\n    {...props}\\n  /\u003e\\n));\\nToastDescription.displayName = ToastPrimitives.Description.displayName;\\n\\ntype ToastProps = React.ComponentPropsWithoutRef\u003ctypeof Toast\u003e;\\ntype ToastActionElement = React.ReactElement\u003ctypeof ToastAction\u003e;\\n\\n// Toast context for managing toasts\\ninterface ToastContextType {\\n  toast: (props: ToastProps) =\u003e void;\\n  dismiss: (id: string) =\u003e void;\\n  toasts: ToastProps[];\\n}\\n\\nconst ToastContext = React.createContext\u003cToastContextType | undefined\u003e(undefined);\\n\\n// Toast provider component\\nconst ToastProviderWithContext: React.FC\u003cReact.PropsWithChildren\u003e = ({ children }) =\u003e {\\n  const [toasts, setToasts] = React.useState\u003cToastProps[]\u003e([]);\\n\\n  const toast = React.useCallback((props: ToastProps) =\u003e {\\n    const id = Math.random().toString(36).substring(2, 11);\\n    \\n    setToasts((prevToasts) =\u003e [\\n      ...prevToasts,\\n      {\\n        ...props,\\n        id,\\n        open: true,\\n        onOpenChange: (open) =\u003e {\\n          if (!open) {\\n            setToasts((prev) =\u003e prev.filter((t) =\u003e t.id !== id));\\n          }\\n          props.onOpenChange?.(open);\\n        },\\n      },\\n    ]);\\n\\n    return id;\\n  }, []);\\n\\n  const dismiss = React.useCallback((id: string) =\u003e {\\n    setToasts((prevToasts) =\u003e prevToasts.filter((t) =\u003e t.id !== id));\\n  }, []);\\n\\n  return (\\n    \u003cToastContext.Provider value={{ toast, dismiss, toasts }}\u003e\\n      {children}\\n      \u003cToastProvider\u003e\\n        {toasts.map(({ id, ...props }) =\u003e (\\n          \u003cToast key={id} {...props}\u003e\\n            {props.children}\\n          \u003c/Toast\u003e\\n        ))}\\n        \u003cToastViewport /\u003e\\n      \u003c/ToastProvider\u003e\\n    \u003c/ToastContext.Provider\u003e\\n  );\\n};\\n\\n// Hook to use the toast context\\nconst useToast = () =\u003e {\\n  const context = React.useContext(ToastContext);\\n  if (context === undefined) {\\n    throw new Error(\u0027useToast must be used within a ToastProvider\u0027);\\n  }\\n  return context;\\n};\\n\\nexport {\\n  ToastProvider: ToastProviderWithContext,\\n  useToast,\\n  ToastViewport,\\n  Toast,\\n  ToastTitle,\\n  ToastDescription,\\n  ToastClose,\\n  ToastAction,\\n  type ToastProps,\\n  type ToastActionElement,\\n};\\n\\n// Example usage:\\n/*\\n// 1. Wrap your app with the ToastProvider\\nfunction App() {\\n  return (\\n    \u003cToastProvider\u003e\\n      \u003cYourApp /\u003e\\n    \u003c/ToastProvider\u003e\\n  );\\n}\\n\\n// 2. Use the useToast hook in your components\\nfunction YourComponent() {\\n  const { toast } = useToast();\\n\\n  return (\\n    \u003cdiv\u003e\\n      \u003cButton\\n        variant=\\\"outline\\\"\\n        onClick={() =\u003e {\\n          toast({\\n            title: \u0027Scheduled: Catch up\u0027,\\n            description: \u0027Friday, February 10, 2023 at 5:57 PM\u0027,\\n            variant: \u0027default\u0027,\\n            action: (\\n              \u003cToastAction altText=\\\"Goto schedule to undo\\\"\u003eUndo\u003c/ToastAction\u003e\\n            ),\\n          });\\n        }}\\n      \u003e\\n        Add to calendar\\n      \u003c/Button\u003e\\n\\n      \u003cButton\\n        variant=\\\"outline\\\"\\n        onClick={() =\u003e {\\n          toast({\\n            variant: \u0027success\u0027,\\n            title: \u0027Success!\u0027,\\n            description: \u0027Your changes have been saved.\u0027,\\n          });\\n        }}\\n      \u003e\\n        Show success\\n      \u003c/Button\u003e\\n\\n      \u003cButton\\n        variant=\\\"outline\\\"\\n        onClick={() =\u003e {\\n          toast({\\n            variant: \u0027error\u0027,\\n            title: \u0027Error\u0027,\\n            description: \u0027Something went wrong. Please try again.\u0027,\\n          });\\n        }}\\n      \u003e\\n        Show error\\n      \u003c/Button\u003e\\n    \u003c/div\u003e\\n  );\\n}\\n*/\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\Tooltip.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\DataTable.test.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an error typed value.\",\"line\":12,\"column\":31,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":12,\"endColumn\":37},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an error typed value.\",\"line\":18,\"column\":31,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":18,\"endColumn\":39},{\"ruleId\":\"@typescript-eslint/no-unsafe-return\",\"severity\":1,\"message\":\"Unsafe return of an error typed value.\",\"line\":24,\"column\":31,\"nodeType\":\"MemberExpression\",\"messageId\":\"unsafeReturn\",\"endLine\":24,\"endColumn\":40}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import { vi, describe, it, expect } from \u0027vitest\u0027;\\nimport { render, screen, fireEvent, waitFor } from \u0027@testing-library/react\u0027;\\nimport { DataTable } from \u0027../DataTable\u0027;\\nimport \u0027@testing-library/jest-dom\u0027;\\n\\ndescribe(\u0027DataTable\u0027, () =\u003e {\\n  // Sample data for testing\\n  const columns = [\\n    {\\n      key: \u0027id\u0027,\\n      header: \u0027ID\u0027,\\n      cell: (row: unknown) =\u003e row.id,\\n      sortable: true,\\n    },\\n    {\\n      key: \u0027name\u0027,\\n      header: \u0027Name\u0027,\\n      cell: (row: unknown) =\u003e row.name,\\n      sortable: true,\\n    },\\n    {\\n      key: \u0027email\u0027,\\n      header: \u0027Email\u0027,\\n      cell: (row: unknown) =\u003e row.email,\\n    },\\n  ];\\n\\n  const data = [\\n    { id: 1, name: \u0027John Doe\u0027, email: \u0027john@example.com\u0027 },\\n    { id: 2, name: \u0027Jane Smith\u0027, email: \u0027jane@example.com\u0027 },\\n    { id: 3, name: \u0027Bob Johnson\u0027, email: \u0027bob@example.com\u0027 },\\n  ];\\n\\n  it(\u0027renders the table with correct headers\u0027, () =\u003e {\\n    render(\u003cDataTable columns={columns} data={data} rowKey=\\\"id\\\" /\u003e);\\n    \\n    // Check if all headers are rendered\\n    expect(screen.getByText(\u0027ID\u0027)).toBeInTheDocument();\\n    expect(screen.getByText(\u0027Name\u0027)).toBeInTheDocument();\\n    expect(screen.getByText(\u0027Email\u0027)).toBeInTheDocument();\\n    \\n    // Check if all data rows are rendered\\n    expect(screen.getByText(\u0027John Doe\u0027)).toBeInTheDocument();\\n    expect(screen.getByText(\u0027Jane Smith\u0027)).toBeInTheDocument();\\n    expect(screen.getByText(\u0027Bob Johnson\u0027)).toBeInTheDocument();\\n  });\\n\\n  it(\u0027handles sorting when column header is clicked\u0027, () =\u003e {\\n    const { container } = render(\u003cDataTable columns={columns} data={data} rowKey=\\\"id\\\" /\u003e);\\n    \\n    // Click on the Name column header to sort\\n    const nameHeader = screen.getByText(\u0027Name\u0027);\\n    fireEvent.click(nameHeader);\\n    \\n    // Get all name cells after sorting\\n    const nameCells = container.querySelectorAll(\u0027tbody td:nth-child(2)\u0027);\\n    \\n    // Check if names are sorted in ascending order\\n    expect(nameCells[0].textContent).toBe(\u0027Bob Johnson\u0027);\\n    expect(nameCells[1].textContent).toBe(\u0027Jane Smith\u0027);\\n    expect(nameCells[2].textContent).toBe(\u0027John Doe\u0027);\\n    \\n    // Click again to sort in descending order\\n    fireEvent.click(nameHeader);\\n    \\n    const nameCellsDesc = container.querySelectorAll(\u0027tbody td:nth-child(2)\u0027);\\n    expect(nameCellsDesc[0].textContent).toBe(\u0027John Doe\u0027);\\n    expect(nameCellsDesc[1].textContent).toBe(\u0027Jane Smith\u0027);\\n    expect(nameCellsDesc[2].textContent).toBe(\u0027Bob Johnson\u0027);\\n  });\\n\\n  it(\u0027displays the loading state when loading prop is true\u0027, () =\u003e {\\n    render(\\n      \u003cDataTable \\n        columns={columns} \\n        data={[]} \\n        loading={true}\\n        loadingComponent={\u003cdiv\u003eLoading...\u003c/div\u003e}\\n        rowKey=\\\"id\\\"\\n      /\u003e\\n    );\\n    \\n    expect(screen.getByText(\u0027Loading...\u0027)).toBeInTheDocument();\\n  });\\n\\n  it(\u0027displays the empty state when no data is provided\u0027, () =\u003e {\\n    render(\\n      \u003cDataTable \\n        columns={columns} \\n        data={[]} \\n        emptyComponent={\u003cdiv\u003eNo data available\u003c/div\u003e}\\n        rowKey=\\\"id\\\"\\n      /\u003e\\n    );\\n    \\n    expect(screen.getByText(\u0027No data available\u0027)).toBeInTheDocument();\\n  });\\n\\n  it(\u0027handles row selection when selectable is true\u0027, async () =\u003e {\\n    const onSelectionChange = vi.fn();\\n    \\n    render(\\n      \u003cDataTable \\n        columns={columns} \\n        data={data} \\n        enableRowSelection={true}\\n        onRowSelectionChange={onSelectionChange}\\n        rowKey=\\\"id\\\"\\n      /\u003e\\n    );\\n    \\n    // Wait for the table to render\\n    await waitFor(() =\u003e {\\n      // Click on the first row\u0027s checkbox\\n      const checkboxes = screen.getAllByRole(\u0027checkbox\u0027);\\n      fireEvent.click(checkboxes[1]); // First checkbox is the header checkbox\\n      \\n      expect(onSelectionChange).toHaveBeenCalledWith([1]);\\n      \\n      // Click on the header checkbox to select all\\n      fireEvent.click(checkboxes[0]);\\n      expect(onSelectionChange).toHaveBeenCalledWith([1, 2, 3]);\\n    });\\n  });\\n\\n  it(\u0027applies custom class names\u0027, () =\u003e {\\n    const { container } = render(\\n      \u003cDataTable \\n        columns={columns} \\n        data={data} \\n        className=\\\"custom-table\\\"\\n        headerClassName=\\\"custom-header\\\"\\n        rowClassName=\\\"custom-row\\\"\\n        rowKey=\\\"id\\\"\\n      /\u003e\\n    );\\n    \\n    expect(container.querySelector(\u0027.custom-table\u0027)).toBeInTheDocument();\\n    expect(container.querySelector(\u0027.custom-header\u0027)).toBeInTheDocument();\\n    expect(container.querySelectorAll(\u0027.custom-row\u0027).length).toBe(data.length);\\n  });\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\MinimalTabs.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.binary1.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.binary2.simple.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.binary2.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.minimal.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.simple.test.tsx\",\"messages\":[{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":8,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":8,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[325,373],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":12,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":12,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[404,454],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":16,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":16,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[520,587],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]},{\"ruleId\":\"no-console\",\"severity\":1,\"message\":\"Unexpected console statement.\",\"line\":45,\"column\":5,\"nodeType\":\"MemberExpression\",\"messageId\":\"unexpected\",\"endLine\":45,\"endColumn\":16,\"suggestions\":[{\"messageId\":\"removeConsole\",\"data\":{\"propertyName\":\"log\"},\"fix\":{\"range\":[1577,1638],\"text\":\"\"},\"desc\":\"Remove the console.log().\"}]}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":4,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import { render, screen, waitFor, act } from \u0027@testing-library/react\u0027;\\nimport userEvent from \u0027@testing-library/user-event\u0027;\\nimport { describe, it, expect, beforeAll, afterAll } from \u0027vitest\u0027;\\nimport Tabs, { TabsList, TabsTrigger, TabsContent } from \u0027../Tabs\u0027;\\n\\ndescribe(\u0027Tabs - Minimal Test\u0027, () =\u003e {\\n  beforeAll(() =\u003e {\\n    console.log(\u0027Setting up Tabs test environment\u0027);\\n  });\\n\\n  afterAll(() =\u003e {\\n    console.log(\u0027Tearing down Tabs test environment\u0027);\\n  });\\n\\n  it(\u0027should render basic tabs with content\u0027, () =\u003e {\\n    console.log(\u0027Running test: should render basic tabs with content\u0027);\\n    render(\\n      \u003cTabs defaultValue=\\\"tab1\\\"\u003e\\n        \u003cTabsList\u003e\\n          \u003cTabsTrigger value=\\\"tab1\\\"\u003eTab 1\u003c/TabsTrigger\u003e\\n          \u003cTabsTrigger value=\\\"tab2\\\"\u003eTab 2\u003c/TabsTrigger\u003e\\n        \u003c/TabsList\u003e\\n        \u003cTabsContent value=\\\"tab1\\\"\u003e\\n          \u003cdiv data-testid=\\\"tab1-content\\\"\u003eTab 1 Content\u003c/div\u003e\\n        \u003c/TabsContent\u003e\\n        \u003cTabsContent value=\\\"tab2\\\"\u003e\\n          \u003cdiv data-testid=\\\"tab2-content\\\"\u003eTab 2 Content\u003c/div\u003e\\n        \u003c/TabsContent\u003e\\n      \u003c/Tabs\u003e\\n    );\\n    \\n    // Verify the active tab content is visible\\n    expect(screen.getByTestId(\u0027tab1-content\u0027)).toBeInTheDocument();\\n    expect(screen.queryByTestId(\u0027tab2-content\u0027)).not.toBeInTheDocument();\\n    \\n    // Verify the active tab has the correct attributes\\n    const tab1 = screen.getByText(\u0027Tab 1\u0027);\\n    const tab2 = screen.getByText(\u0027Tab 2\u0027);\\n    \\n    expect(tab1).toHaveAttribute(\u0027data-state\u0027, \u0027active\u0027);\\n    expect(tab2).toHaveAttribute(\u0027data-state\u0027, \u0027inactive\u0027);\\n  });\\n\\n  it(\u0027should switch tabs when clicked\u0027, async () =\u003e {\\n    console.log(\u0027Running test: should switch tabs when clicked\u0027);\\n    render(\\n      \u003cTabs defaultValue=\\\"tab1\\\"\u003e\\n        \u003cTabsList\u003e\\n          \u003cTabsTrigger value=\\\"tab1\\\"\u003eTab 1\u003c/TabsTrigger\u003e\\n          \u003cTabsTrigger value=\\\"tab2\\\"\u003eTab 2\u003c/TabsTrigger\u003e\\n        \u003c/TabsList\u003e\\n        \u003cTabsContent value=\\\"tab1\\\"\u003e\\n          \u003cdiv data-testid=\\\"tab1-content\\\"\u003eTab 1 Content\u003c/div\u003e\\n        \u003c/TabsContent\u003e\\n        \u003cTabsContent value=\\\"tab2\\\"\u003e\\n          \u003cdiv data-testid=\\\"tab2-content\\\"\u003eTab 2 Content\u003c/div\u003e\\n        \u003c/TabsContent\u003e\\n      \u003c/Tabs\u003e\\n    );\\n    \\n    // Get the tab elements\\n    const tab1 = screen.getByRole(\u0027tab\u0027, { name: \u0027Tab 1\u0027 });\\n    const tab2 = screen.getByRole(\u0027tab\u0027, { name: \u0027Tab 2\u0027 });\\n    \\n    // Verify initial state\\n    expect(tab1).toHaveAttribute(\u0027data-state\u0027, \u0027active\u0027);\\n    expect(tab2).toHaveAttribute(\u0027data-state\u0027, \u0027inactive\u0027);\\n    expect(screen.getByTestId(\u0027tab1-content\u0027)).toBeInTheDocument();\\n    \\n    // Use userEvent to click on Tab 2 within act()\\n    await act(async () =\u003e {\\n      await userEvent.click(tab2);\\n    });\\n    \\n    // Wait for the tab switch to complete\\n    await waitFor(() =\u003e {\\n      // Check if Tab 2 is now active\\n      expect(tab2).toHaveAttribute(\u0027data-state\u0027, \u0027active\u0027);\\n      expect(tab1).toHaveAttribute(\u0027data-state\u0027, \u0027inactive\u0027);\\n      \\n      // Check if Tab 2 content is visible\\n      expect(screen.getByTestId(\u0027tab2-content\u0027)).toBeInTheDocument();\\n    }, { timeout: 10000 });\\n  });\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.step1.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.step2.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.step3.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.step4.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\Tabs.wait.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\__tests__\\\\simple.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\button-variants.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\components\\\\ui\\\\jsx.d.ts\",\"messages\":[{\"ruleId\":\"no-undef\",\"severity\":2,\"message\":\"\u0027AriaAttributes\u0027 is not defined.\",\"line\":4,\"column\":39,\"nodeType\":\"Identifier\",\"messageId\":\"undef\",\"endLine\":4,\"endColumn\":53},{\"ruleId\":\"no-undef\",\"severity\":2,\"message\":\"\u0027DOMAttributes\u0027 is not defined.\",\"line\":4,\"column\":55,\"nodeType\":\"Identifier\",\"messageId\":\"undef\",\"endLine\":4,\"endColumn\":68}],\"suppressedMessages\":[],\"errorCount\":2,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import \u0027react\u0027;\\n\\ndeclare module \u0027react\u0027 {\\n  interface HTMLAttributes\u003cT\u003e extends AriaAttributes, DOMAttributes\u003cT\u003e {\\n    // Extend HTML attributes here\\n    className?: string;\\n  }\\n\\n  interface IntrinsicElements {\\n    // Add any custom elements here if needed\\n    [elemName: string]: unknown;\\n  }\\n}\\n\\n// Add global JSX namespace for custom elements\\ndeclare global {\\n  namespace JSX {\\n    interface IntrinsicElements {\\n      // Add any custom elements here if needed\\n      [elemName: string]: unknown;\\n    }\\n  }\\n}\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\categories-data.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\generated\\\\advanced-prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\generated\\\\beginner-prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\generated\\\\intermediate-prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\prompts-data.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\prompts\\\\advanced-prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\prompts\\\\all-prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\prompts\\\\beginner-prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\prompts\\\\intermediate-prompts.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\prompts\\\\types.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\data\\\\resources-data.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\env.d.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\hooks\\\\useSearchCategories.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\hooks\\\\useTheme.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\lib\\\\utils.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\main.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\minimal-jsx-only.test.jsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\minimal-jsx.test.jsx\",\"messages\":[{\"ruleId\":null,\"fatal\":true,\"severity\":2,\"message\":\"Parsing error: ESLint was configured to run on `\u003ctsconfigRootDir\u003e/src\\\\minimal-jsx.test.jsx` using `parserOptions.project`: \u003ctsconfigRootDir\u003e/tsconfig.app.json\\nHowever, that TSConfig does not include this file. Either:\\n- Change ESLint\u0027s list of included files to not include this file\\n- Change that TSConfig to include this file\\n- Create a new TSConfig that includes this file and include it in your parserOptions.project\\nSee the typescript-eslint docs for more info: https://typescript-eslint.io/troubleshooting/typed-linting#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file\",\"nodeType\":null}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":1,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// minimal-jsx.test.jsx\\nimport React from \u0027react\u0027;\\nimport { test, expect } from \u0027vitest\u0027;\\nimport { render } from \u0027@testing-library/react\u0027;\\n\\n// Simple test with JSX syntax\\ntest(\u0027Minimal JSX test - passes\u0027, () =\u003e {\\n  const { container } = render(\u003cdiv\u003eHello JSX\u003c/div\u003e);\\n  expect(container.firstChild).toMatchInlineSnapshot(`\\n    \u003cdiv\u003e\\n      Hello JSX\\n    \u003c/div\u003e\\n  `);\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\minimal-jsx.test.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-unsafe-member-access\",\"severity\":1,\"message\":\"Unsafe member access .children on an `any` value.\",\"line\":7,\"column\":24,\"nodeType\":\"Identifier\",\"messageId\":\"unsafeMemberExpression\",\"endLine\":7,\"endColumn\":32}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"// minimal-jsx.test.tsx\\nimport { test, expect } from \u0027vitest\u0027;\\n\\n// Test with JSX syntax\\ntest(\u0027Minimal JSX test - passes\u0027, () =\u003e {\\n  const element = \u003cdiv\u003eHello JSX\u003c/div\u003e;\\n  expect(element.props.children).toBe(\u0027Hello JSX\u0027);\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\minimal-react.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\minimal-tsx.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\CategoryPage.test.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/require-await\",\"severity\":1,\"message\":\"Async arrow function has no \u0027await\u0027 expression.\",\"line\":105,\"column\":24,\"nodeType\":\"ArrowFunctionExpression\",\"messageId\":\"missingAwait\",\"endLine\":105,\"endColumn\":26},{\"ruleId\":\"@typescript-eslint/require-await\",\"severity\":1,\"message\":\"Async arrow function has no \u0027await\u0027 expression.\",\"line\":128,\"column\":24,\"nodeType\":\"ArrowFunctionExpression\",\"messageId\":\"missingAwait\",\"endLine\":128,\"endColumn\":26}],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":2,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import { render, screen, fireEvent } from \u0027@testing-library/react\u0027;\\nimport { describe, expect, vi } from \u0027vitest\u0027;\\nimport { act } from \u0027react-dom/test-utils\u0027;\\nimport { MemoryRouter, Routes, Route } from \u0027react-router-dom\u0027;\\nimport CategoryPage from \u0027./CategoryPage\u0027;\\n\\n// Mock the useNavigate hook\\nconst mockNavigate = vi.fn();\\nvi.mock(\u0027react-router-dom\u0027, async () =\u003e ({\\n  ...(await vi.importActual(\u0027react-router-dom\u0027)),\\n  useNavigate: () =\u003e mockNavigate,\\n}));\\n\\n// Mock the difficultyUtils module\\nvi.mock(\u0027../../utils/difficultyUtils\u0027, () =\u003e ({\\n  getDifficultyLevel: (difficulty: string) =\u003e {\\n    if ([\u0027Very Easy\u0027, \u0027Easy\u0027, \u0027Moderate\u0027].includes(difficulty)) return \u0027Beginner\u0027;\\n    if ([\u0027Challenging\u0027, \u0027Advanced\u0027].includes(difficulty)) return \u0027Intermediate\u0027;\\n    return \u0027Advanced\u0027;\\n  }\\n}));\\n\\n// Mock the prompts data\\nvi.mock(\u0027../data/prompts-data\u0027, () =\u003e ({\\n  prompts: [\\n    {\\n      id: \u00271\u0027,\\n      title: \u0027Beginner Prompt\u0027,\\n      difficulty: \u0027Easy\u0027,\\n      categoryId: \u0027marketing\u0027,\\n      subcategoryId: \u0027social-media\u0027,\\n      promptGroupId: \u0027content\u0027,\\n      prompt: \u0027This is a beginner prompt\u0027,\\n      description: \u0027A beginner level prompt\u0027,\\n      tags: []\\n    },\\n    {\\n      id: \u00272\u0027,\\n      title: \u0027Advanced Prompt\u0027,\\n      difficulty: \u0027Expert\u0027,\\n      categoryId: \u0027marketing\u0027,\\n      subcategoryId: \u0027social-media\u0027,\\n      promptGroupId: \u0027strategy\u0027,\\n      prompt: \u0027This is an advanced prompt\u0027,\\n      description: \u0027An advanced level prompt\u0027,\\n      tags: []\\n    }\\n  ]\\n}));\\n\\n// Mock the categories data\\nvi.mock(\u0027../data/categories-data\u0027, () =\u003e ({\\n  categories: [\\n    {\\n      id: \u0027marketing\u0027,\\n      name: \u0027Marketing\u0027,\\n      description: \u0027Marketing related prompts\u0027,\\n      subcategories: [\\n        {\\n          id: \u0027social-media\u0027,\\n          name: \u0027Social Media\u0027,\\n          description: \u0027Social media marketing\u0027,\\n          promptGroups: []\\n        }\\n      ]\\n    }\\n  ]\\n}));\\n\\nconst renderComponent = (initialRoute = \u0027/categories/marketing\u0027) =\u003e {\\n  return render(\\n    \u003cMemoryRouter initialEntries={[initialRoute]}\u003e\\n      \u003cRoutes\u003e\\n        \u003cRoute path=\\\"/categories/:id\\\" element={\u003cCategoryPage /\u003e} /\u003e\\n      \u003c/Routes\u003e\\n    \u003c/MemoryRouter\u003e\\n  );\\n};\\n\\ndescribe(\u0027CategoryPage\u0027, () =\u003e {\\n  beforeAll(() =\u003e {\\n    vi.useFakeTimers();\\n  });\\n\\n  afterAll(() =\u003e {\\n    vi.useRealTimers();\\n  });\\n\\n  test(\u0027renders category name\u0027, async () =\u003e {\\n    renderComponent();\\n    await act(async () =\u003e {\\n      await vi.runAllTimersAsync();\\n    });\\n    expect(screen.getByText(\u0027Marketing\u0027)).toBeInTheDocument();\\n  });\\n\\n  test(\u0027filters prompts by difficulty\u0027, async () =\u003e {\\n    // Mock the loading delay to be immediate\\n    vi.useFakeTimers();\\n    \\n    // Render the component\\n    renderComponent();\\n    \\n    // Fast-forward through the loading state\\n    await act(async () =\u003e {\\n      vi.advanceTimersByTime(600); // 500ms loading + buffer\\n    });\\n    \\n    // Verify the difficulty filter section is rendered\\n    const difficultySection = screen.getByText(\u0027Filter by Difficulty\u0027);\\n    expect(difficultySection).toBeInTheDocument();\\n    \\n    // Verify all difficulty filter buttons are present\\n    const difficultyButtons = screen.getAllByRole(\u0027button\u0027, { \\n      name: /^(Beginner|Intermediate|Advanced)$/ \\n    });\\n    expect(difficultyButtons).toHaveLength(3);\\n    \\n    // Get the beginner button for testing\\n    const beginnerButton = screen.getByRole(\u0027button\u0027, { name: \u0027Beginner\u0027 });\\n    \\n    // Verify both prompts are visible initially\\n    expect(screen.getByText(\u0027Beginner Prompt\u0027)).toBeInTheDocument();\\n    expect(screen.getByText(\u0027Advanced Prompt\u0027)).toBeInTheDocument();\\n    \\n    // Test filtering to Beginner only\\n    fireEvent.click(beginnerButton);\\n    await act(async () =\u003e {\\n      vi.advanceTimersByTime(600);\\n    });\\n    \\n    // Check if only beginner prompt is visible\\n    expect(screen.getByText(\u0027Beginner Prompt\u0027)).toBeInTheDocument();\\n    expect(screen.queryByText(\u0027Advanced Prompt\u0027)).not.toBeInTheDocument();\\n    \\n    // Clean up fake timers\\n    vi.useRealTimers();\\n  });\\n});\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\CategoryPage.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":55,\"column\":5,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":55,\"endColumn\":47,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[2008,2008],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React, { useState, useEffect, useMemo } from \u0027react\u0027;\\nimport { useParams, useNavigate } from \u0027react-router-dom\u0027;\\nimport type { Category, Subcategory, PromptGroup } from \u0027../data/categories-data\u0027;\\nimport { categories } from \u0027../data/categories-data\u0027;\\nimport type { Prompt } from \u0027../data/prompts-data\u0027;\\nimport { prompts } from \u0027../data/prompts-data\u0027;\\nimport PromptCard from \u0027../components/PromptCard\u0027;\\nimport PromptCardSkeleton from \u0027../components/PromptCardSkeleton\u0027;\\nimport { SearchX, Frown, ArrowLeft } from \u0027lucide-react\u0027;\\nimport { getDifficultyLevel } from \u0027../utils/difficultyUtils\u0027;\\n\\nconst CategoryPage: React.FC = () =\u003e {\\n  const { id } = useParams\u003c{ id: string }\u003e();\\n  const navigate = useNavigate();\\n  \\n  // Memoize the category to prevent unnecessary re-renders\\n  const category = useMemo\u003cCategory | undefined\u003e(\\n    () =\u003e categories.find(c =\u003e c.id === id),\\n    [id]\\n  );\\n\\n  // State management\\n  const [selectedSubcategory, setSelectedSubcategory] = useState\u003cSubcategory | null\u003e(null);\\n  const [activePromptGroup, setActivePromptGroup] = useState\u003cstring | null\u003e(null);\\n  const [difficultyFilter, setDifficultyFilter] = useState\u003c\u0027Beginner\u0027 | \u0027Intermediate\u0027 | \u0027Advanced\u0027 | null\u003e(null);\\n  const [searchQuery, setSearchQuery] = useState(\u0027\u0027);\\n  const [loading, setLoading] = useState(true);\\n\\n  // Update selected subcategory when category changes\\n  useEffect(() =\u003e {\\n    if (category?.subcategories?.[0]) {\\n      setSelectedSubcategory(category.subcategories[0]);\\n    } else {\\n      setSelectedSubcategory(null);\\n    }\\n  }, [category]);\\n\\n  // Reset filters and handle loading state when subcategory changes\\n  useEffect(() =\u003e {\\n    setLoading(true);\\n    setActivePromptGroup(null);\\n    setDifficultyFilter(null);\\n    setSearchQuery(\u0027\u0027);\\n    \\n    // Simulate data fetching\\n    const timer = setTimeout(() =\u003e {\\n      setLoading(false);\\n    }, 500);\\n\\n    return () =\u003e clearTimeout(timer);\\n  }, [selectedSubcategory]);\\n\\n  // Handle prompt copy\\n  const handleCopyPrompt = (promptText: string) =\u003e {\\n    navigator.clipboard.writeText(promptText);\\n    // You can add a toast notification here if needed\\n  };\\n\\n  // Handle open in new tab\\n  const handleOpenInNewTab = (promptText: string) =\u003e {\\n    const newWindow = window.open(\u0027\u0027, \u0027_blank\u0027);\\n    if (newWindow) {\\n      newWindow.document.write(`\\n        \u003c!DOCTYPE html\u003e\\n        \u003chtml\u003e\\n          \u003chead\u003e\\n            \u003ctitle\u003ePrompt Details\u003c/title\u003e\\n            \u003cscript src=\\\"https://cdn.tailwindcss.com\\\"\u003e\u003c/script\u003e\\n          \u003c/head\u003e\\n          \u003cbody class=\\\"bg-gray-900 text-white p-6\\\"\u003e\\n            \u003cpre class=\\\"whitespace-pre-wrap font-mono text-sm\\\"\u003e${promptText}\u003c/pre\u003e\\n          \u003c/body\u003e\\n        \u003c/html\u003e\\n      `);\\n      newWindow.document.close();\\n    }\\n  };\\n\\n  // Filter prompts based on selected subcategory, group, search query, and difficulty\\n  const filteredPrompts = useMemo\u003cPrompt[]\u003e(() =\u003e {\\n    if (!selectedSubcategory) return [];\\n\\n    // Filter by subcategory\\n    let filtered = prompts.filter(p =\u003e p.subcategoryId === selectedSubcategory.id);\\n\\n    // Filter by active prompt group if set\\n    if (activePromptGroup) {\\n      filtered = filtered.filter(p =\u003e p.promptGroupId === activePromptGroup);\\n    }\\n\\n    // Filter by difficulty if set\\n    if (difficultyFilter) {\\n      filtered = filtered.filter(p =\u003e getDifficultyLevel(p.difficulty) === difficultyFilter);\\n    }\\n\\n    // Apply search query if provided\\n    if (searchQuery.trim() !== \u0027\u0027) {\\n      const lowercasedQuery = searchQuery.toLowerCase().trim();\\n      filtered = filtered.filter(p =\u003e\\n        p.title.toLowerCase().includes(lowercasedQuery) ||\\n        (p.description?.toLowerCase().includes(lowercasedQuery) ?? false) ||\\n        p.prompt.toLowerCase().includes(lowercasedQuery)\\n      );\\n    }\\n\\n    return filtered;\\n  }, [selectedSubcategory, activePromptGroup, difficultyFilter, searchQuery]);\\n\\n  // Get unique prompt groups for the selected subcategory\\n  const promptGroups = useMemo\u003cPromptGroup[]\u003e(() =\u003e {\\n    if (!selectedSubcategory?.promptGroups) return [];\\n    return selectedSubcategory.promptGroups;\\n  }, [selectedSubcategory]);\\n\\n  // Handle loading state\\n  if (loading) {\\n    return (\\n      \u003cdiv className=\\\"grid grid-cols-1 md:grid-cols-2 gap-5 p-6\\\"\u003e\\n        {Array.from({ length: 4 }).map((_, index) =\u003e (\\n          \u003cPromptCardSkeleton key={index} /\u003e\\n        ))}\\n      \u003c/div\u003e\\n    );\\n  }\\n\\n  // Handle 404 for non-existent category\\n  if (!category) {\\n    return (\\n      \u003cdiv className=\\\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-10\\\"\u003e\\n        \u003cdiv className=\\\"text-center\\\"\u003e\\n          \u003cFrown className=\\\"w-16 h-16 mx-auto mb-4 text-purple-400\\\" /\u003e\\n          \u003ch1 className=\\\"text-3xl font-bold mb-2\\\"\u003eCategory Not Found\u003c/h1\u003e\\n          \u003cp className=\\\"text-gray-300 mb-6\\\"\u003eThe category you\u0027re looking for doesn\u0027t exist or has been moved.\u003c/p\u003e\\n          \u003cbutton\\n            onClick={() =\u003e navigate(\u0027/\u0027)}\\n            className=\\\"px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-colors\\\"\\n          \u003e\\n            \u003cArrowLeft className=\\\"w-4 h-4 mr-2 inline\\\" /\u003e\\n            Back to Home\\n          \u003c/button\u003e\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n    );\\n  }\\n\\n  // Handle empty state when no subcategory is selected\\n  if (!selectedSubcategory || !category.subcategories?.length) {\\n    return (\\n      \u003cdiv className=\\\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-10\\\"\u003e\\n        \u003cdiv className=\\\"text-center\\\"\u003e\\n          \u003cFrown className=\\\"w-16 h-16 mx-auto mb-4 text-purple-400\\\" /\u003e\\n          \u003ch1 className=\\\"text-3xl font-bold mb-2\\\"\u003eNo Subcategories Found\u003c/h1\u003e\\n          \u003cp className=\\\"text-gray-300 mb-6\\\"\u003eThis category doesn\u0027t have any subcategories yet.\u003c/p\u003e\\n          \u003cbutton\\n            onClick={() =\u003e navigate(\u0027/\u0027)}\\n            className=\\\"px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-colors\\\"\\n          \u003e\\n            \u003cArrowLeft className=\\\"w-4 h-4 mr-2 inline\\\" /\u003e\\n            Back to Home\\n          \u003c/button\u003e\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n    );\\n  }\\n\\n  // Render the main content\\n  return (\\n    \u003cdiv className=\\\"bg-gradient-to-br from-gray-900 to-gray-800 min-h-screen text-white\\\"\u003e\\n      {/* Header */}\\n      \u003cheader className=\\\"bg-gray-800/50 backdrop-blur-sm border-b border-gray-700/50\\\"\u003e\\n        \u003cdiv className=\\\"container mx-auto px-4 py-6\\\"\u003e\\n          \u003ch1 className=\\\"text-3xl font-bold\\\"\u003e{category.name}\u003c/h1\u003e\\n          \u003cp className=\\\"text-gray-300 mt-2\\\"\u003e{category.description}\u003c/p\u003e\\n        \u003c/div\u003e\\n      \u003c/header\u003e\\n\\n      \u003cdiv className=\\\"container mx-auto px-4 py-8\\\"\u003e\\n        \u003cdiv className=\\\"grid grid-cols-1 lg:grid-cols-12 gap-8\\\"\u003e\\n          {/* Sidebar */}\\n          \u003cdiv className=\\\"lg:col-span-3 space-y-6\\\"\u003e\\n            \u003cdiv className=\\\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6\\\"\u003e\\n              \u003ch2 className=\\\"text-lg font-semibold mb-4\\\"\u003eSubcategories\u003c/h2\u003e\\n              \u003cdiv className=\\\"space-y-4 mb-6\\\"\u003e\\n                {/* Prompt Group Filter */}\\n                \u003cdiv\u003e\\n                  \u003ch3 className=\\\"text-sm font-medium text-gray-400 mb-2\\\"\u003eFilter by Group\u003c/h3\u003e\\n                  \u003cdiv className=\\\"flex flex-wrap gap-2\\\"\u003e\\n                    {promptGroups.map(group =\u003e (\\n                      \u003cbutton\\n                        key={group.id}\\n                        onClick={() =\u003e setActivePromptGroup(activePromptGroup === group.id ? null : group.id)}\\n                        className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\\n                          activePromptGroup === group.id\\n                            ? \u0027bg-blue-600 text-white\u0027\\n                            : \u0027bg-gray-800 text-gray-300 hover:bg-gray-700\u0027\\n                        }`}\\n                      \u003e\\n                        {group.name}\\n                      \u003c/button\u003e\\n                    ))}\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n\\n                {/* Difficulty Filter */}\\n                \u003cdiv\u003e\\n                  \u003ch3 className=\\\"text-sm font-medium text-gray-400 mb-2\\\"\u003eFilter by Difficulty\u003c/h3\u003e\\n                  \u003cdiv className=\\\"flex flex-wrap gap-2\\\"\u003e\\n                    {[\u0027Beginner\u0027, \u0027Intermediate\u0027, \u0027Advanced\u0027].map((level) =\u003e (\\n                      \u003cbutton\\n                        key={level}\\n                        onClick={() =\u003e setDifficultyFilter(difficultyFilter === level ? null : level as unknown)}\\n                        className={`px-4 py-2 rounded-full text-sm font-medium transition-colors flex items-center gap-1 ${\\n                          difficultyFilter === level\\n                            ? \u0027bg-blue-600 text-white\u0027\\n                            : \u0027bg-gray-800 text-gray-300 hover:bg-gray-700\u0027\\n                        }`}\\n                      \u003e\\n                        {level}\\n                        {difficultyFilter === level \u0026\u0026 \u003cspan className=\\\"ml-1\\\"\u003e├ù\u003c/span\u003e}\\n                      \u003c/button\u003e\\n                    ))}\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/div\u003e\\n              \u003cnav className=\\\"space-y-2\\\"\u003e\\n                {category.subcategories.map((sub) =\u003e (\\n                  \u003cbutton\\n                    key={sub.id}\\n                    onClick={() =\u003e setSelectedSubcategory(sub)}\\n                    className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\\n                      selectedSubcategory?.id === sub.id\\n                        ? \u0027bg-purple-600 text-white\u0027\\n                        : \u0027text-gray-300 hover:bg-gray-700/50\u0027\\n                    }`}\\n                  \u003e\\n                    {sub.name}\\n                  \u003c/button\u003e\\n                ))}\\n              \u003c/nav\u003e\\n            \u003c/div\u003e\\n          \u003c/div\u003e\\n          {/* Main Content */}\\n          \u003cdiv className=\\\"lg:col-span-9\\\"\u003e\\n              \u003cdiv className=\\\"space-y-6\\\"\u003e\\n                {/* Subcategory Header */}\\n                \u003cdiv className=\\\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 transition-all duration-300 hover:shadow-lg hover:shadow-purple-500/5\\\"\u003e\\n                  \u003ch2 className=\\\"text-2xl font-bold text-white mb-2\\\"\u003e{selectedSubcategory?.name || \u0027Loading...\u0027}\u003c/h2\u003e\\n                  \u003cp className=\\\"text-gray-300\\\"\u003e{selectedSubcategory?.description || \u0027\u0027}\u003c/p\u003e\\n                \u003c/div\u003e\\n\\n                {/* Search and Filters */}\\n                \u003cdiv className=\\\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 transition-all duration-300\\\"\u003e\\n                  \u003cdiv className=\\\"flex flex-col sm:flex-row gap-4\\\"\u003e\\n                    \u003cdiv className=\\\"flex-1\\\"\u003e\\n                      \u003cdiv className=\\\"relative\\\"\u003e\\n                        \u003cdiv className=\\\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\\\"\u003e\\n                          \u003csvg className=\\\"w-5 h-5 text-gray-400\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"\u003e\\n                            \u003cpath strokeLinecap=\\\"round\\\" strokeLinejoin=\\\"round\\\" strokeWidth={2} d=\\\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\\" /\u003e\\n                          \u003c/svg\u003e\\n                        \u003c/div\u003e\\n                        \u003cinput\\n                          type=\\\"text\\\"\\n                          placeholder=\\\"Search prompts...\\\"\\n                          value={searchQuery}\\n                          onChange={(e) =\u003e setSearchQuery(e.target.value)}\\n                          className=\\\"w-full pl-10 pr-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200 text-white placeholder-gray-400\\\"\\n                        /\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n\\n                {/* Enhanced Prompt Group Filters */}\\n                {promptGroups.length \u003e 0 \u0026\u0026 (\\n                  \u003cdiv className=\\\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 transition-all duration-300\\\"\u003e\\n                    \u003ch3 className=\\\"text-lg font-semibold text-white mb-4\\\"\u003eFilter by Prompt Group\u003c/h3\u003e\\n                    \u003cp className=\\\"text-sm text-gray-400 mb-4\\\"\u003e\\n                      {activePromptGroup \\n                        ? `Showing prompts from: ${promptGroups.find(g =\u003e g.id === activePromptGroup)?.name || \u0027selected group\u0027}` \\n                        : \u0027Showing all prompt groups\u0027}\\n                      {filteredPrompts.length \u003e 0 \u0026\u0026 (\\n                        \u003cspan className=\\\"ml-2 px-2 py-0.5 bg-gray-700/50 text-xs rounded-full\\\"\u003e\\n                          {filteredPrompts.length} {filteredPrompts.length === 1 ? \u0027prompt\u0027 : \u0027prompts\u0027}\\n                        \u003c/span\u003e\\n                      )}\\n                    \u003c/p\u003e\\n                    \\n                    \u003cdiv className=\\\"flex flex-wrap gap-2\\\"\u003e\\n                      \u003cbutton\\n                        key=\\\"all\\\"\\n                        onClick={() =\u003e setActivePromptGroup(null)}\\n                        className={`px-4 py-2 text-sm font-medium rounded-lg transition-all flex items-center gap-2 ${\\n                          !activePromptGroup\\n                            ? \u0027bg-gradient-to-r from-purple-600 to-pink-500 text-white shadow-md shadow-purple-500/20\u0027\\n                            : \u0027bg-gray-700/50 text-gray-300 hover:bg-gray-700/70\u0027\\n                        }`}\\n                      \u003e\\n                        \u003cspan\u003eAll Groups\u003c/span\u003e\\n                        \u003cspan className=\\\"text-xs opacity-80\\\"\u003e\\n                          ({prompts.filter(p =\u003e p.subcategoryId === selectedSubcategory?.id).length})\\n                        \u003c/span\u003e\\n                      \u003c/button\u003e\\n                      \\n                      {promptGroups.map((group) =\u003e {\\n                        const groupPromptCount = prompts.filter(p =\u003e \\n                          p.subcategoryId === selectedSubcategory?.id \u0026\u0026 \\n                          p.promptGroupId === group.id\\n                        ).length;\\n                        \\n                        if (groupPromptCount === 0) return null;\\n                        \\n                        return (\\n                          \u003cbutton\\n                            key={group.id}\\n                            onClick={() =\u003e setActivePromptGroup(group.id)}\\n                            className={`px-4 py-2 text-sm font-medium rounded-lg transition-all flex items-center gap-2 ${\\n                              activePromptGroup === group.id\\n                                ? \u0027bg-gradient-to-r from-purple-600 to-pink-500 text-white shadow-md shadow-purple-500/20\u0027\\n                                : \u0027bg-gray-700/50 text-gray-300 hover:bg-gray-700/70\u0027\\n                            }`}\\n                          \u003e\\n                            \u003cspan\u003e{group.name}\u003c/span\u003e\\n                            \u003cspan className=\\\"text-xs opacity-80\\\"\u003e\\n                              ({groupPromptCount})\\n                            \u003c/span\u003e\\n                          \u003c/button\u003e\\n                        );\\n                      })}\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                )}\\n\\n              {/* Prompts Grid */}\\n              \u003cdiv className=\\\"grid grid-cols-1 md:grid-cols-2 gap-5\\\"\u003e\\n                {filteredPrompts.length \u003e 0 ? (\\n                  filteredPrompts.map((prompt) =\u003e (\\n                    \u003cdiv key={prompt.id} className=\\\"transform transition-transform duration-300 hover:-translate-y-1\\\"\u003e\\n                      \u003cPromptCard\\n                        prompt={prompt}\\n                        onCopy={() =\u003e handleCopyPrompt(prompt.prompt)}\\n                        onOpenInNewTab={() =\u003e handleOpenInNewTab(prompt.prompt)}\\n                      /\u003e\\n                    \u003c/div\u003e\\n                  ))\\n                ) : (\\n                  \u003cdiv className=\\\"col-span-full text-center py-12\\\"\u003e\\n                    \u003cdiv className=\\\"inline-flex items-center justify-center w-20 h-20 rounded-full bg-purple-500/10 mb-4\\\"\u003e\\n                      \u003cSearchX className=\\\"w-10 h-10 text-purple-400\\\" /\u003e\\n                    \u003c/div\u003e\\n                    \u003ch3 className=\\\"text-xl font-semibold text-white mb-2\\\"\u003e\\n                      {searchQuery ? \u0027No matching prompts found\u0027 : \u0027No prompts available\u0027}\\n                    \u003c/h3\u003e\\n                    \u003cp className=\\\"text-gray-400 max-w-md mx-auto\\\"\u003e\\n                      {searchQuery\\n                        ? \u0027Try adjusting your search or filter criteria\u0027\\n                        : \u0027This subcategory does not have any prompts yet\u0027}\\n                    \u003c/p\u003e\\n                  \u003c/div\u003e\\n                )}\\n              \u003c/div\u003e\\n            \u003c/div\u003e\\n          \u003c/div\u003e\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\nexport default CategoryPage;\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\CookiePolicy.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\DataTableDemo.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\PrivacyPolicy.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\PromptDetailPage.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":13,\"column\":7,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":13,\"endColumn\":52,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[437,437],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React, { useState } from \u0027react\u0027;\\nimport { useParams } from \u0027react-router-dom\u0027;\\nimport { prompts } from \u0027../data/prompts-data\u0027;\\nimport { Copy, Check } from \u0027lucide-react\u0027;\\n\\nconst PromptDetailPage: React.FC = () =\u003e {\\n  const { promptId } = useParams\u003c{ promptId: string }\u003e();\\n  const prompt = prompts.find(p =\u003e p.id === promptId);\\n  const [copied, setCopied] = useState(false);\\n\\n  const handleCopy = () =\u003e {\\n    if (prompt) {\\n      navigator.clipboard.writeText(prompt.prompt);\\n      setCopied(true);\\n      setTimeout(() =\u003e setCopied(false), 2000); // Reset after 2 seconds\\n    }\\n  };\\n\\n  if (!prompt) {\\n    return \u003cdiv className=\\\"text-white text-center p-10\\\"\u003ePrompt not found\u003c/div\u003e;\\n  }\\n\\n  return (\\n    \u003cdiv className=\\\"bg-gray-900 min-h-screen text-white p-4 sm:p-6 md:p-8\\\"\u003e\\n      \u003cdiv className=\\\"max-w-4xl mx-auto\\\"\u003e\\n        \u003ch1 className=\\\"text-2xl sm:text-3xl font-bold text-white mb-4\\\"\u003e{prompt.title}\u003c/h1\u003e\\n        \u003cdiv className=\\\"flex flex-wrap gap-2 mb-6\\\"\u003e\\n          {prompt.tags?.map(tag =\u003e (\\n            \u003cspan key={tag} className=\\\"text-xs px-3 py-1 rounded-full bg-gray-700 text-gray-300\\\"\u003e\\n              #{tag}\\n            \u003c/span\u003e\\n          ))}\\n        \u003c/div\u003e\\n\\n        \u003cdiv className=\\\"bg-gray-800 rounded-lg p-4 sm:p-6 relative\\\"\u003e\\n          \u003cbutton\\n            onClick={handleCopy}\\n            className=\\\"absolute top-3 right-3 p-2 text-gray-400 hover:text-white transition-colors rounded-md hover:bg-gray-700\\\"\\n            title={copied ? \u0027Copied!\u0027 : \u0027Copy Prompt\u0027}\\n          \u003e\\n            {copied ? \u003cCheck size={18} className=\\\"text-green-400\\\" /\u003e : \u003cCopy size={18} /\u003e}\\n          \u003c/button\u003e\\n          \u003cpre className=\\\"text-gray-300 whitespace-pre-wrap font-sans text-base leading-relaxed\\\"\u003e\\n            {prompt.prompt}\\n          \u003c/pre\u003e\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\nexport default PromptDetailPage;\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\PromptEngineeringGuide.backup.tsx\",\"messages\":[{\"ruleId\":null,\"fatal\":true,\"severity\":2,\"message\":\"Parsing error: \u0027)\u0027 expected.\",\"line\":802,\"column\":6,\"nodeType\":null}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":1,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React, { useEffect, useState } from \u0027react\u0027;\\nimport { Card } from \u0027../components/ui/Card\u0027;\\nimport { Wrench, Settings, Rocket, Lightbulb, Target, Clock, GraduationCap, CheckCircle2, ArrowRight, Star, ChevronDown, ChevronUp, Copy } from \u0027lucide-react\u0027;\\nimport { Button } from \u0027../components/ui/Button\u0027;\\nimport { Link } from \u0027react-router-dom\u0027;\\nimport { motion, AnimatePresence } from \u0027framer-motion\u0027;\\n\\n// Ensure React is in scope for JSX\\ndeclare global {\\n  namespace JSX {\\n    interface IntrinsicElements {\\n      [elemName: string]: any;\\n    }\\n  }\\n}\\n\\ninterface PromptExampleProps {\\n  title: string;\\n  prompt: string;\\n}\\n\\nconst PromptExample: React.FC\u003cPromptExampleProps\u003e = ({ title, prompt }) =\u003e {\\n  const [isExpanded, setIsExpanded] = useState(false);\\n  const [copied, setCopied] = useState(false);\\n\\n  const copyToClipboard = (e: React.MouseEvent) =\u003e {\\n    e.stopPropagation();\\n    navigator.clipboard.writeText(prompt);\\n    setCopied(true);\\n    setTimeout(() =\u003e setCopied(false), 2000);\\n  };\\n\\n  return (\\n    \u003cmotion.div \\n      className=\\\"bg-gray-900/50 rounded-lg border border-gray-800/50 overflow-hidden mb-4\\\"\\n      initial={{ opacity: 0, y: 10 }}\\n      animate={{ opacity: 1, y: 0 }}\\n      transition={{ duration: 0.3 }}\\n    \u003e\\n      \u003cdiv \\n        className=\\\"p-4 cursor-pointer flex justify-between items-center hover:bg-gray-800/30 transition-colors\\\"\\n        onClick={() =\u003e setIsExpanded(!isExpanded)}\\n      \u003e\\n        \u003ch4 className=\\\"text-purple-400 text-sm font-medium\\\"\u003e{title}\u003c/h4\u003e\\n        \u003cbutton className=\\\"text-gray-400 hover:text-white\\\"\u003e\\n          {isExpanded ? \u003cChevronUp size={18} /\u003e : \u003cChevronDown size={18} /\u003e}\\n        \u003c/button\u003e\\n      \u003c/div\u003e\\n      \u003cAnimatePresence\u003e\\n        {isExpanded \u0026\u0026 (\\n          \u003cmotion.div\\n            initial={{ height: 0, opacity: 0 }}\\n            animate={{ height: \u0027auto\u0027, opacity: 1 }}\\n            exit={{ height: 0, opacity: 0 }}\\n            transition={{ duration: 0.2 }}\\n            className=\\\"overflow-hidden\\\"\\n          \u003e\\n            \u003cdiv className=\\\"p-4 pt-0 relative\\\"\u003e\\n              \u003cpre className=\\\"text-gray-300 text-sm whitespace-pre-wrap font-sans\\\"\u003e{prompt}\u003c/pre\u003e\\n              \u003cbutton\\n                onClick={copyToClipboard}\\n                className=\\\"absolute top-2 right-2 p-1.5 rounded-md bg-gray-800/50 hover:bg-gray-700/50 transition-colors\\\"\\n                title=\\\"Copy to clipboard\\\"\\n              \u003e\\n                \u003cCopy size={16} className=\\\"text-gray-400\\\" /\u003e\\n              \u003c/button\u003e\\n              {copied \u0026\u0026 (\\n                \u003cdiv className=\\\"absolute bottom-2 right-2 text-xs text-green-400\\\"\u003e\\n                  Copied!\\n                \u003c/div\u003e\\n              )}\\n            \u003c/div\u003e\\n          \u003c/motion.div\u003e\\n        )}\\n      \u003c/AnimatePresence\u003e\\n    \u003c/motion.div\u003e\\n  );\\n};\\n\\nconst PromptEngineeringGuide: React.FC = () =\u003e {\\n  const [activeTab, setActiveTab] = useState\u003c\u0027basics\u0027 | \u0027examples\u0027 | \u0027tips\u0027\u003e(\u0027basics\u0027);\\n  \\n  useEffect(() =\u003e {\\n    window.scrollTo({ top: 0, behavior: \u0027smooth\u0027 });\\n  }, []);\\n  \\n  const setTab = (tab: \u0027basics\u0027 | \u0027examples\u0027 | \u0027tips\u0027) =\u003e {\\n    setActiveTab(tab);\\n  };\\n\\n  return (\\n    \u003cdiv className=\\\"relative min-h-screen bg-gradient-to-b from-gray-900 to-gray-950 pt-24 pb-16\\\"\u003e\\n      \u003cdiv className=\\\"container mx-auto px-4\\\"\u003e\\n        {/* Header */}\\n        \u003cmotion.div \\n          className=\\\"max-w-4xl mx-auto mb-16 relative z-10 text-center\\\"\\n          initial={{ opacity: 0, y: 20 }}\\n          animate={{ opacity: 1, y: 0 }}\\n          transition={{ duration: 0.5 }}\\n        \u003e\\n          \u003cspan className=\\\"inline-block px-3 py-1 mb-4 text-sm font-medium text-purple-400 bg-purple-900/30 rounded-full border border-purple-800/50\\\"\u003e\\n            Master AI Communication\\n          \u003c/span\u003e\\n          \u003ch1 className=\\\"text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-gray-200 via-purple-200 to-indigo-300 bg-clip-text text-transparent\\\"\u003e\\n            The Art of{\u0027 \u0027}\\n            \u003cspan className=\\\"bg-clip-text text-transparent bg-gradient-to-r from-purple-400 via-indigo-400 to-pink-400\\\"\u003e\\n              Prompting\\n            \u003c/span\u003e\\n          \u003c/h1\u003e\\n          \u003cp className=\\\"text-xl text-gray-300 max-w-2xl mx-auto leading-relaxed\\\"\u003e\\n            Unlock the full potential of AI by learning how to craft effective prompts. Get better results with less effort and make AI work for you.\\n          \u003c/p\u003e\\n          \\n          \u003cdiv className=\\\"mt-8 flex flex-wrap justify-center gap-4\\\"\u003e\\n            \u003cButton \\n              variant={activeTab === \u0027basics\u0027 ? \u0027default\u0027 : \u0027outline\u0027}\\n              onClick={() =\u003e setTab(\u0027basics\u0027)}\\n              className=\\\"transition-all duration-300\\\"\\n            \u003e\\n              \u003cLightbulb size={18} className=\\\"mr-2\\\" /\u003e\\n              Basics\\n            \u003c/Button\u003e\\n            \u003cButton \\n              variant={activeTab === \u0027examples\u0027 ? \u0027default\u0027 : \u0027outline\u0027}\\n              onClick={() =\u003e setTab(\u0027examples\u0027)}\\n              className=\\\"transition-all duration-300\\\"\\n            \u003e\\n              \u003cRocket size={18} className=\\\"mr-2\\\" /\u003e\\n              Examples\\n            \u003c/Button\u003e\\n            \u003cButton \\n              variant={activeTab === \u0027tips\u0027 ? \u0027default\u0027 : \u0027outline\u0027}\\n              onClick={() =\u003e setTab(\u0027tips\u0027)}\\n              className=\\\"transition-all duration-300\\\"\\n            \u003e\\n              \u003cStar size={18} className=\\\"mr-2\\\" /\u003e\\n              Pro Tips\\n            \u003c/Button\u003e\\n          \u003c/div\u003e\\n        \u003c/motion.div\u003e\\n\\n        {/* Main Content */}\\n        \u003cAnimatePresence mode=\\\"wait\\\"\u003e\\n          {activeTab === \u0027basics\u0027 \u0026\u0026 (\\n            \u003cmotion.div\\n              key=\\\"basics\\\"\\n              initial={{ opacity: 0, x: -20 }}\\n              animate={{ opacity: 1, x: 0 }}\\n              exit={{ opacity: 0, x: 20 }}\\n              transition={{ duration: 0.3 }}\\n              className=\\\"max-w-4xl mx-auto relative z-10\\\"\\n            \u003e\\n              \u003cdiv className=\\\"prose prose-invert max-w-none mb-16\\\"\u003e\\n                \u003cmotion.div \\n                  className=\\\"bg-gradient-to-br from-gray-800/50 to-gray-900/50 p-8 rounded-2xl border border-gray-700/50 mb-12 backdrop-blur-sm\\\"\\n                  initial={{ opacity: 0, y: 20 }}\\n                  animate={{ opacity: 1, y: 0 }}\\n                  transition={{ delay: 0.1 }}\\n                \u003e\\n                  \u003cdiv className=\\\"flex items-start mb-6\\\"\u003e\\n                    \u003cdiv className=\\\"p-2 bg-purple-500/20 rounded-lg mr-4\\\"\u003e\\n                      \u003cSettings className=\\\"text-purple-400\\\" size={24} /\u003e\\n                    \u003c/div\u003e\\n                    \u003cdiv\u003e\\n                      \u003ch2 className=\\\"text-2xl font-bold text-white mb-2\\\"\u003eWhat is Prompting?\u003c/h2\u003e\\n                      \u003cp className=\\\"text-gray-300\\\"\u003e\\n                        Think of prompt engineering as having a conversation with your AI assistant. This assistant:\\n                      \u003c/p\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                  \\n                  \u003cdiv className=\\\"grid md:grid-cols-3 gap-6 mt-8\\\"\u003e\\n                    {[\\n                      {\\n                        icon: \u003cLightbulb size={20} className=\\\"text-purple-400\\\" /\u003e,\\n                        title: \\\"Clear Directions\\\",\\n                        description: \\\"Wants to help you, but needs clear instructions\\\"\\n                      },\\n                      {\\n                        icon: \u003cSettings size={20} className=\\\"text-purple-400\\\" /\u003e,\\n                        title: \\\"Literal Understanding\\\",\\n                        description: \\\"Takes your words exactly as you say them\\\"\\n                      },\\n                      {\\n                        icon: \u003cTarget size={20} className=\\\"text-purple-400\\\" /\u003e,\\n                        title: \\\"Specificity Matters\\\",\\n                        description: \\\"Gets better results when you\u0027re detailed\\\"\\n                      }\\n                    ].map((item, index) =\u003e (\\n                      \u003cmotion.div\\n                        key={index}\\n                        className=\\\"bg-gray-800/30 p-5 rounded-xl border border-gray-700/50 hover:border-purple-500/30 transition-all hover:-translate-y-1\\\"\\n                        whileHover={{ scale: 1.02 }}\\n                        transition={{ duration: 0.2 }}\\n                      \u003e\\n                        \u003cdiv className=\\\"w-10 h-10 rounded-lg bg-purple-500/10 flex items-center justify-center mb-3\\\"\u003e\\n                          {item.icon}\\n                        \u003c/div\u003e\\n                        \u003ch3 className=\\\"font-semibold text-white mb-1\\\"\u003e{item.title}\u003c/h3\u003e\\n                        \u003cp className=\\\"text-sm text-gray-400\\\"\u003e{item.description}\u003c/p\u003e\\n                      \u003c/motion.div\u003e\\n                    ))}\\n                  \u003c/div\u003e\\n                \u003c/motion.div\u003e\\n\\n                \u003cmotion.div \\n                  className=\\\"mb-16\\\"\\n                  initial={{ opacity: 0, y: 20 }}\\n                  animate={{ opacity: 1, y: 0 }}\\n                  transition={{ delay: 0.2 }}\\n                \u003e\\n                  \u003cdiv className=\\\"flex items-center mb-6\\\"\u003e\\n                    \u003cdiv className=\\\"p-2 bg-purple-500/20 rounded-lg mr-3\\\"\u003e\\n                      \u003cStar className=\\\"text-purple-400\\\" size={20} /\u003e\\n                    \u003c/div\u003e\\n                    \u003ch3 className=\\\"text-xl font-semibold text-white\\\"\u003eQuick Start Guide\u003c/h3\u003e\\n                  \u003c/div\u003e\\n                  \u003cdiv className=\\\"grid md:grid-cols-1 gap-6\\\"\u003e\\n                    {[\\n                      {\\n                        title: \\\"Be Specific\\\",\\n                        badExample: \\\"Write me an email\\\",\\n                        goodExample: \\\"Write a friendly email to schedule a team meeting for next Tuesday at 2 PM. Include an agenda about the Q2 project updates and budget review.\\\",\\n                        icon: \u003cTarget size={18} className=\\\"text-purple-400\\\" /\u003e\\n                      },\\n                      {\\n                        title: \\\"Provide Context\\\",\\n                        badExample: \\\"Help me fix this code\\\",\\n                        goodExample: \\\"I\u0027m building a React contact form and getting an error when submitting. The error says \u0027Cannot read property of undefined\u0027. Here\u0027s my component code...\\\",\\n                        icon: \u003cSettings size={18} className=\\\"text-purple-400\\\" /\u003e\\n                      },\\n                      {\\n                        title: \\\"Specify Requirements\\\",\\n                        badExample: \\\"Give me ideas for my presentation\\\",\\n                        goodExample: \\\"Generate 3 creative ideas for a 5-minute presentation about healthy eating for teenagers. Include one idea about meal prepping, one about quick breakfasts, and one about healthy snacks. For each, suggest 3 key points to cover.\\\",\\n                        icon: \u003cLightbulb size={18} className=\\\"text-purple-400\\\" /\u003e\\n                      }\\n                    ].map((item, index) =\u003e (\\n                      \u003cmotion.div \\n                        key={index}\\n                        className=\\\"bg-gray-800/30 rounded-xl border border-gray-700/50 overflow-hidden hover:border-purple-500/30 transition-all\\\"\\n                        whileHover={{ scale: 1.01 }}\\n                        transition={{ duration: 0.2 }}\\n                      \u003e\\n                        \u003cdiv className=\\\"p-5\\\"\u003e\\n                          \u003cdiv className=\\\"flex items-center mb-4\\\"\u003e\\n                            \u003cdiv className=\\\"w-8 h-8 rounded-lg bg-purple-500/10 flex items-center justify-center mr-3\\\"\u003e\\n                              {item.icon}\\n                            \u003c/div\u003e\\n                            \u003ch4 className=\\\"font-semibold text-white\\\"\u003e{item.title}\u003c/h4\u003e\\n                          \u003c/div\u003e\\n                          \\n                          \u003cdiv className=\\\"space-y-4\\\"\u003e\\n                            \u003cdiv\u003e\\n                              \u003cp className=\\\"text-sm text-gray-400 mb-1\\\"\u003eInstead of:\u003c/p\u003e\\n                              \u003cdiv className=\\\"bg-gray-900/50 p-3 rounded-lg border-l-2 border-red-500/50\\\"\u003e\\n                                \u003cp className=\\\"text-gray-300\\\"\u003e\\\"{item.badExample}\\\"\u003c/p\u003e\\n                              \u003c/div\u003e\\n                            \u003c/div\u003e\\n                            \\n                            \u003cdiv\u003e\\n                              \u003cp className=\\\"text-sm text-gray-400 mb-1\\\"\u003eTry this:\u003c/p\u003e\\n                              \u003cdiv className=\\\"bg-gray-900/50 p-3 rounded-lg border-l-2 border-green-500/50 relative\\\"\u003e\\n                                \u003cp className=\\\"text-gray-100\\\"\u003e\\\"{item.goodExample}\\\"\u003c/p\u003e\\n                                \u003cbutton \\n                                  onClick={() =\u003e {\\n                                    navigator.clipboard.writeText(item.goodExample);\\n                                    const button = document.getElementById(`copy-${index}`);\\n                                    if (button) {\\n                                      button.textContent = \u0027Copied!\u0027;\\n                                      setTimeout(() =\u003e {\\n                                        button.textContent = \u0027Copy\u0027;\\n                                      }, 2000);\\n                                    }\\n                                  }}\\n                                  id={`copy-${index}`}\\n                                  className=\\\"absolute top-2 right-2 text-xs bg-gray-800/70 hover:bg-gray-700/70 px-2 py-1 rounded text-gray-300 hover:text-white transition-colors\\\"\\n                                \u003e\\n                                  Copy\\n                                \u003c/button\u003e\\n                              \u003c/div\u003e\\n                            \u003c/div\u003e\\n                          \u003c/div\u003e\\n                        \u003c/div\u003e\\n                      \u003c/motion.div\u003e\\n                    ))}\\n                  \u003c/div\u003e\\n                  \\n                  \u003cdiv className=\\\"mt-6 p-4 bg-purple-500/10 rounded-lg border border-purple-500/20\\\"\u003e\\n                    \u003cp className=\\\"text-purple-200 flex items-start\\\"\u003e\\n                      \u003cLightbulb className=\\\"flex-shrink-0 mt-1 mr-2\\\" size={20} /\u003e\\n                      \u003cspan\u003e\u003cstrong\u003eRemember:\u003c/strong\u003e You don\u0027t need to be perfect! Start simple and get better as you go. The more you practice, the better results you\u0027ll get.\u003c/span\u003e\\n                    \u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/motion.div\u003e\\n              \u003c/div\u003e\\n            \u003c/motion.div\u003e\\n          )}\\n          \\n          {activeTab === \u0027examples\u0027 \u0026\u0026 (\\n            \u003cmotion.div\\n              key=\\\"examples\\\"\\n              initial={{ opacity: 0, x: -20 }}\\n              animate={{ opacity: 1, x: 0 }}\\n              exit={{ opacity: 0, x: 20 }}\\n              transition={{ duration: 0.3 }}\\n              className=\\\"max-w-4xl mx-auto relative z-10\\\"\\n            \u003e\\n              \u003cdiv className=\\\"prose prose-invert max-w-none mb-16\\\"\u003e\\n                \u003ch2 className=\\\"text-2xl font-bold text-white mb-8 flex items-center\\\"\u003e\\n                  \u003cRocket className=\\\"text-purple-400 mr-2\\\" size={24} /\u003e\\n                  Example Prompts\\n                \u003c/h2\u003e\\n                \\n                \u003cdiv className=\\\"grid md:grid-cols-2 gap-6\\\"\u003e\\n                  \u003cdiv\u003e\\n                    \u003ch3 className=\\\"text-xl font-semibold text-white mb-4\\\"\u003eFor Learning\u003c/h3\u003e\\n                    \u003cdiv className=\\\"space-y-4\\\"\u003e\\n                      \u003cPromptExample \\n                        title=\\\"Explain a complex topic simply\\\"\\n                        prompt=\\\"Explain how quantum computing works using a simple analogy that a high school student could understand. Focus on the key concepts like qubits and superposition.\\\"\\n                      /\u003e\\n                      \u003cPromptExample\\n                        title=\\\"Create a study guide\\\"\\n                        prompt=\\\"Create a study guide for learning Spanish verbs in the present tense. Include the 10 most common regular -ar, -er, and -ir verbs, with example sentences for each.\\\"\\n                      /\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                    \\n                    \u003cdiv\u003e\\n                      \u003ch3 className=\\\"text-xl font-semibold text-white mb-4\\\"\u003eFor Work\u003c/h3\u003e\\n                      \u003cdiv className=\\\"space-y-4\\\"\u003e\\n                        \u003cPromptExample\\n                          title=\\\"Draft a professional email\\\"\\n                          prompt=\\\"Write a professional follow-up email after a job interview. Express gratitude, reiterate interest in the position, and mention a specific topic discussed during the interview.\\\"\\n                        /\u003e\\n                        \u003cPromptExample\\n                          title=\\\"Create a project plan\\\"\\n                          prompt=\\\"Outline a 4-week project plan for launching a new company blog. Include key milestones, team roles, and deliverables for each week.\\\"\\n                        /\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/motion.div\u003e\\n            )}\\n            \\n            {activeTab === \u0027tips\u0027 \u0026\u0026 (\\n              \u003cmotion.div\\n                key=\\\"tips\\\"\\n                initial={{ opacity: 0, x: -20 }}\\n                animate={{ opacity: 1, x: 0 }}\\n                exit={{ opacity: 0, x: 20 }}\\n                transition={{ duration: 0.3 }}\\n                className=\\\"max-w-4xl mx-auto relative z-10\\\"\\n              \u003e\\n                \u003cdiv className=\\\"prose prose-invert max-w-none mb-16\\\"\u003e\\n                  \u003ch2 className=\\\"text-2xl font-bold text-white mb-8 flex items-center\\\"\u003e\\n                    \u003cStar className=\\\"text-yellow-400 mr-2\\\" size={24} /\u003e\\n                    Pro Tips for Better Prompts\\n                  \u003c/h2\u003e\\n                  \\n                  \u003cdiv className=\\\"grid md:grid-cols-2 gap-6\\\"\u003e\\n                    \u003cdiv className=\\\"bg-gray-800/30 p-6 rounded-xl border border-gray-700/50\\\"\u003e\\n                      \u003ch3 className=\\\"text-xl font-semibold text-white mb-4\\\"\u003eDo\u0027s\u003c/h3\u003e\\n                      \u003cul className=\\\"space-y-3\\\"\u003e\\n                        {[\\n                          \u0027Be specific about what you want\u0027,\\n                          \u0027Provide relevant context\u0027,\\n                          \u0027Specify the format you need\u0027,\\n                          \u0027Break complex tasks into steps\u0027,\\n                          \u0027Give examples when possible\u0027\\n                        ].map((tip, i) =\u003e (\\n                          \u003cli key={i} className=\\\"flex items-start\\\"\u003e\\n                            \u003cCheckCircle2 size={18} className=\\\"text-green-400 mt-0.5 mr-2 flex-shrink-0\\\" /\u003e\\n                            \u003cspan className=\\\"text-gray-300\\\"\u003e{tip}\u003c/span\u003e\\n                          \u003c/li\u003e\\n                        ))}\\n                      \u003c/ul\u003e\\n                    \u003c/div\u003e\\n                    \\n                    \u003cdiv className=\\\"bg-gray-800/30 p-6 rounded-xl border border-gray-700/50\\\"\u003e\\n                      \u003ch3 className=\\\"text-xl font-semibold text-white mb-4\\\"\u003eDon\u0027ts\u003c/h3\u003e\\n                      \u003cul className=\\\"space-y-3\\\"\u003e\\n                        {[\\n                          \u0027Don\\\\\u0027t be too vague or broad\u0027,\\n                          \u0027Avoid ambiguous language\u0027,\\n                          \u0027Don\\\\\u0027t assume AI knows everything\u0027,\\n                          \u0027Avoid multiple questions in one prompt\u0027,\\n                          \u0027Don\\\\\u0027t forget to proofread the output\u0027\\n                        ].map((tip, i) =\u003e (\\n                          \u003cli key={i} className=\\\"flex items-start\\\"\u003e\\n                            \u003csvg className=\\\"w-5 h-5 text-red-400 mt-0.5 mr-2 flex-shrink-0\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\"\u003e\\n                              \u003cpath strokeLinecap=\\\"round\\\" strokeLinejoin=\\\"round\\\" strokeWidth={2} d=\\\"M6 18L18 6M6 6l12 12\\\" /\u003e\\n                            \u003c/svg\u003e\\n                            \u003cspan className=\\\"text-gray-300\\\"\u003e{tip}\u003c/span\u003e\\n                          \u003c/li\u003e\\n                        ))}\\n                      \u003c/ul\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/motion.div\u003e\\n            )}\\n          \u003c/AnimatePresence\u003e\\n          \u003c/div\u003e\\n\\n          {/* Structure \u0026 Components Section */}\\n          \u003csection className=\\\"mb-16\\\"\u003e\\n            \u003ch2 className=\\\"text-2xl font-bold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-8 flex items-center\\\"\u003e\\n              \u003cSettings size={24} className=\\\"text-purple-400 mr-3\\\" /\u003e Recipe for Great Prompts\\n            \u003c/h2\u003e\\n            \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-colors\\\"\u003e\\n              \u003cdiv className=\\\"p-6\\\"\u003e\\n                \u003cdiv className=\\\"grid md:grid-cols-2 gap-6\\\"\u003e\\n                  \u003cdiv\u003e\\n                    \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-4\\\"\u003eThe Magic Formula Γ£¿\u003c/h3\u003e\\n                    \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\n                      \u003cli className=\\\"flex items-center\\\"\u003e\\n                        \u003cStar size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Tell AI its role (like \\\"teacher\\\" or \\\"writer\\\")\\n                      \u003c/li\u003e\\n                      \u003cli className=\\\"flex items-center\\\"\u003e\\n                        \u003cStar size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Explain what you want to achieve\\n                      \u003c/li\u003e\\n                      \u003cli className=\\\"flex items-center\\\"\u003e\\n                        \u003cStar size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Describe how you want the answer\\n                      \u003c/li\u003e\\n                      \u003cli className=\\\"flex items-center\\\"\u003e\\n                        \u003cStar size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Add any special requirements\\n                      \u003c/li\u003e\\n                    \u003c/ul\u003e\\n                  \u003c/div\u003e\\n                  \u003cdiv className=\\\"bg-gray-900/50 p-4 rounded-lg border border-gray-800/50\\\"\u003e                    \u003cdiv className=\\\"flex items-center mb-2\\\"\u003e\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2\\\" /\u003e\\n                      \u003cp className=\\\"text-sm text-purple-400\\\"\u003eTry This Example:\u003c/p\u003e\\n                    \u003c/div\u003e\\n                    \u003cpre className=\\\"text-gray-400 whitespace-pre-wrap text-sm\\\"\u003e\\n{`Hi AI! \\nYou\u0027re a friendly math teacher\\nCan you explain fractions to a 10-year old?\\nPlease use fun examples with pizza and cookies\\nKeep it short - just 3-4 sentences\\nMake it fun and encouraging!`}\\n                    \u003c/pre\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/div\u003e\\n            \u003c/Card\u003e\\n          \u003c/section\u003e\\n\\n          {/* Purpose \u0026 Audience Section */}\\n          \u003csection className=\\\"mb-16\\\"\u003e\\n            \u003ch2 className=\\\"text-2xl font-bold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-8 flex items-center\\\"\u003e\\n              \u003cWrench size={24} className=\\\"text-purple-400 mr-3\\\" /\u003e AI Chat vs. Human Chat\\n            \u003c/h2\u003e\\n            \u003cdiv className=\\\"grid md:grid-cols-2 gap-6\\\"\u003e\\n              \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-colors\\\"\u003e\\n                \u003cdiv className=\\\"p-6\\\"\u003e                  \u003cdiv className=\\\"flex items-center mb-4\\\"\u003e\\n                    \u003cSettings size={20} className=\\\"text-purple-400 mr-2\\\" /\u003e\\n                    \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent\\\"\u003eChatting with AI\u003c/h3\u003e\\n                  \u003c/div\u003e\\n                  \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\n                    \u003cli className=\\\"flex items-center\\\"\u003e\\n                      \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Be clear and specific\\n                    \u003c/li\u003e\\n                    \u003cli className=\\\"flex items-center\\\"\u003e\\n                      \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Give step-by-step instructions\\n                    \u003c/li\u003e\\n                  \u003c/ul\u003e\\n                  \u003cdiv className=\\\"mt-4 p-4 bg-gray-900/50 rounded-lg border border-gray-800/50\\\"\u003e\\n                    \u003cp className=\\\"text-sm text-purple-400 mb-2\\\"\u003eExample:\u003c/p\u003e\\n                    \u003cp className=\\\"text-gray-400\\\"\u003e\\n                      \\\"Write a recipe for chocolate chip cookies. List all ingredients first, then give step-by-step instructions. Make it easy for beginners.\\\"\\n                    \u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/Card\u003e\\n              \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-colors\\\"\u003e\\n                \u003cdiv className=\\\"p-6\\\"\u003e\\n                  \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-4\\\"\u003eChatting with People\u003c/h3\u003e\\n                  \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\n                    \u003cli className=\\\"flex items-center\\\"\u003e\\n                      \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Can be casual and brief\\n                    \u003c/li\u003e\\n                    \u003cli className=\\\"flex items-center\\\"\u003e\\n                      \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e They can ask questions back\\n                    \u003c/li\u003e\\n                  \u003c/ul\u003e\\n                  \u003cdiv className=\\\"mt-4 p-4 bg-gray-900/50 rounded-lg border border-gray-800/50\\\"\u003e\\n                    \u003cp className=\\\"text-sm text-purple-400 mb-2\\\"\u003eExample:\u003c/p\u003e\\n                    \u003cp className=\\\"text-gray-400\\\"\u003e\\n                      \\\"Hey, got a cookie recipe?\\\"\\n                    \u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/Card\u003e\\n            \u003c/div\u003e\\n          \u003c/section\u003e\\n\\n          {/* Use Cases Section */}\\n          \u003csection className=\\\"mb-16\\\"\u003e\\n            \u003ch2 className=\\\"text-2xl font-bold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-8 flex items-center\\\"\u003e\\n              \u003cRocket size={24} className=\\\"text-purple-400 mr-3\\\" /\u003e Amazing Things You Can Do\\n            \u003c/h2\u003e\\n            \\n            {/* Introduction text */}\\n            \u003cdiv className=\\\"mb-8 text-center\\\"\u003e\\n              \u003cp className=\\\"text-lg text-gray-300\\\"\u003e\\n                Discover how AI can help you with everyday tasks. Here are some popular ways to use it:\\n              \u003c/p\u003e\\n            \u003c/div\u003e\\n\\n            \u003cdiv className=\\\"grid md:grid-cols-3 gap-6\\\"\u003e\\n              \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-colors\\\"\u003e\\n                \u003cdiv className=\\\"p-6\\\"\u003e\\n                  \u003cdiv className=\\\"flex items-center mb-4\\\"\u003e\\n                    \u003cdiv className=\\\"p-2 bg-purple-500/10 rounded-lg\\\"\u003e\\n                      \u003cGraduationCap size={20} className=\\\"text-purple-400\\\" /\u003e\\n                    \u003c/div\u003e                    \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent\\\"\u003eLearning Made Easy\u003c/h3\u003e\\n                  \u003c/div\u003e\\n                  \u003cp className=\\\"text-gray-400 text-sm mb-4\\\"\u003eGet help understanding any topic, in ways that make sense to you.\u003c/p\u003e\\n                  \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eBreak down complex topics\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eGet personalized explanations\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003ePractice with examples\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eCreate study materials\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                  \u003c/ul\u003e\\r\\n\\r\\n                  \u003cdiv className=\\\"mt-4 p-3 bg-gray-900/50 rounded-lg border border-gray-700/50\\\"\u003e\\r\\n                    \u003cp className=\\\"text-sm text-purple-400 mb-2\\\"\u003eTry asking:\u003c/p\u003e\\r\\n                    \u003cp className=\\\"text-gray-400 text-sm\\\"\u003e\\\"Explain how photosynthesis works using a pizza-making analogy\\\"\u003c/p\u003e\\r\\n                  \u003c/div\u003e\\r\\n                \u003c/div\u003e\\r\\n              \u003c/Card\u003e              \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-colors\\\"\u003e\\r\\n                \u003cdiv className=\\\"p-6\\\"\u003e\\r\\n                  \u003cdiv className=\\\"flex items-center mb-4\\\"\u003e\\r\\n                    \u003cdiv className=\\\"p-2 bg-purple-500/10 rounded-lg\\\"\u003e\\r\\n                      \u003cSettings size={20} className=\\\"text-purple-400\\\" /\u003e\\r\\n                    \u003c/div\u003e\\r\\n                    \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent ml-2\\\"\u003eWork Smarter\u003c/h3\u003e\\r\\n                  \u003c/div\u003e\\r\\n                  \u003cp className=\\\"text-gray-400 text-sm mb-4\\\"\u003eSave time and effort on your daily tasks and projects.\u003c/p\u003e\\r\\n                  \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eWrite better emails quickly\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eGet project planning help\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eCreate clear presentations\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eOrganize your thoughts\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                  \u003c/ul\u003e\\r\\n                  \u003cdiv className=\\\"mt-4 p-3 bg-gray-900/50 rounded-lg border border-gray-700/50\\\"\u003e\\r\\n                    \u003cp className=\\\"text-sm text-purple-400 mb-2\\\"\u003eTry asking:\u003c/p\u003e\\r\\n                    \u003cp className=\\\"text-gray-400 text-sm\\\"\u003e\\\"Help me write a polite email to reschedule a meeting\\\"\u003c/p\u003e\\r\\n                  \u003c/div\u003e\\r\\n                \u003c/div\u003e\\r\\n              \u003c/Card\u003e\\r\\n\\r\\n              \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-colors\\\"\u003e\\r\\n                \u003cdiv className=\\\"p-6\\\"\u003e\\r\\n                  \u003cdiv className=\\\"flex items-center mb-4\\\"\u003e\\r\\n                    \u003cdiv className=\\\"p-2 bg-purple-500/10 rounded-lg\\\"\u003e\\r\\n                      \u003cLightbulb size={20} className=\\\"text-purple-400\\\" /\u003e\\r\\n                    \u003c/div\u003e\\r\\n                    \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent ml-2\\\"\u003eCreative Ideas\u003c/h3\u003e\\r\\n                  \u003c/div\u003e\\r\\n                  \u003cp className=\\\"text-gray-400 text-sm mb-4\\\"\u003eGet fresh ideas and creative solutions for any project.\u003c/p\u003e\\r\\n                  \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eBrainstorm new ideas\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eGet writing feedback\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eDesign project layouts\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                    \u003cli className=\\\"flex items-center group\\\"\u003e\\r\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 group-hover:text-purple-300 transition-colors\\\" /\u003e \\r\\n                      \u003cspan\u003eSolve problems creatively\u003c/span\u003e\\r\\n                    \u003c/li\u003e\\r\\n                  \u003c/ul\u003e\\r\\n                  \u003cdiv className=\\\"mt-4 p-3 bg-gray-900/50 rounded-lg border border-gray-700/50\\\"\u003e\\n                    \u003cp className=\\\"text-sm text-purple-400 mb-2\\\"\u003eTry asking:\u003c/p\u003e\\n                    \u003cp className=\\\"text-gray-400 text-sm\\\"\u003e\\\"Give me 5 creative ways to organize a small home office\\\"\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/Card\u003e\\n            \u003c/div\u003e\\n\\n            {/* Example Prompts Box */}\\n            \u003cdiv className=\\\"mt-8 p-6 bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 rounded-lg\\\"\u003e\\n              \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-4 flex items-center\\\"\u003e\\n                \u003cStar size={20} className=\\\"text-purple-400 mr-2\\\" /\u003e Try These Example Prompts\\n              \u003c/h3\u003e\\n              \u003cdiv className=\\\"grid md:grid-cols-2 gap-6\\\"\u003e\\n                \u003cdiv className=\\\"space-y-4\\\"\u003e\\n                  \u003cdiv className=\\\"p-4 bg-gray-900/50 rounded border border-gray-800/50\\\"\u003e\\n                    \u003cp className=\\\"text-purple-400 text-sm mb-2\\\"\u003eFor Learning:\u003c/p\u003e\\n                    \u003cp className=\\\"text-gray-300\\\"\u003e\\\"Explain how photosynthesis works using a pizza-making analogy that a 12-year-old would understand\\\"\u003c/p\u003e\\n                  \u003c/div\u003e\\n                  \u003cdiv className=\\\"p-4 bg-gray-900/50 rounded border border-gray-800/50\\\"\u003e\\n                    \u003cp className=\\\"text-purple-400 text-sm mb-2\\\"\u003eFor Work:\u003c/p\u003e\\n                    \u003cp className=\\\"text-gray-300\\\"\u003e\\\"Help me write a polite email to reschedule a meeting that was set for tomorrow at 2 PM to next week\\\"\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n                \u003cdiv className=\\\"space-y-4\\\"\u003e\\n                  \u003cdiv className=\\\"p-4 bg-gray-900/50 rounded border border-gray-800/50\\\"\u003e\\n                    \u003cp className=\\\"text-purple-400 text-sm mb-2\\\"\u003eFor Projects:\u003c/p\u003e\\n                    \u003cp className=\\\"text-gray-300\\\"\u003e\\\"Create a step-by-step checklist for organizing a small birthday party, including budget considerations\\\"\u003c/p\u003e\\n                  \u003c/div\u003e\\n                  \u003cdiv className=\\\"p-4 bg-gray-900/50 rounded border border-gray-800/50\\\"\u003e\\n                    \u003cp className=\\\"text-purple-400 text-sm mb-2\\\"\u003eFor Creativity:\u003c/p\u003e\\n                    \u003cp className=\\\"text-gray-300\\\"\u003e\\\"Give me 3 unique ideas for designing a bookmark that represents my favorite book genre\\\"\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/div\u003e\\n            \u003c/div\u003e\\n          \u003c/section\u003e\\n\\n          {/* Journey Section */}\\n          \u003csection className=\\\"mb-16\\\"\u003e\\n            \u003ch2 className=\\\"text-2xl font-bold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-8 flex items-center\\\"\u003e\\n              \u003cGraduationCap size={24} className=\\\"text-purple-400 mr-3\\\" /\u003e Your Learning Journey\\n            \u003c/h2\u003e\\n            \u003cdiv className=\\\"space-y-6\\\"\u003e\\n              \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-colors\\\"\u003e\\n                \u003cdiv className=\\\"p-6\\\"\u003e\\n                  \u003cdiv className=\\\"grid md:grid-cols-2 gap-6\\\"\u003e\\n                    \u003cdiv\u003e                      \u003cdiv className=\\\"flex items-center mb-4\\\"\u003e\\n                        \u003cdiv className=\\\"w-6 h-6 flex items-center justify-center mr-2\\\"\u003e\\n                          \u003cTarget size={20} className=\\\"text-purple-400\\\" /\u003e\\n                        \u003c/div\u003e\\n                        \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent\\\"\u003eBetter Results\u003c/h3\u003e\\n                      \u003c/div\u003e\\n                      \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Get great answers first time\\n                        \u003c/li\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Less back-and-forth\\n                        \u003c/li\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e More fun, less confusion\\n                        \u003c/li\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e AI becomes your helper\\n                        \u003c/li\u003e\\n                      \u003c/ul\u003e\\n                    \u003c/div\u003e\\n                    \u003cdiv\u003e                      \u003cdiv className=\\\"flex items-center mb-4\\\"\u003e\\n                        \u003cdiv className=\\\"w-6 h-6 flex items-center justify-center mr-2\\\"\u003e\\n                          \u003cClock size={20} className=\\\"text-purple-400\\\" /\u003e\\n                        \u003c/div\u003e\\n                        \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent\\\"\u003eSave Time\u003c/h3\u003e\\n                      \u003c/div\u003e\\n                      \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Work faster\\n                        \u003c/li\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Focus on what you love\\n                        \u003c/li\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e Let AI do the boring stuff\\n                        \u003c/li\u003e\\n                        \u003cli className=\\\"flex items-center\\\"\u003e\\n                          \u003cCheckCircle2 size={16} className=\\\"text-purple-400 mr-2 flex-shrink-0\\\" /\u003e More time for creativity\\n                        \u003c/li\u003e\\n                      \u003c/ul\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/Card\u003e\\n\\n              {/* Quick Tips Box with theme-consistent styling */}\\n              \u003cCard className=\\\"bg-purple-500/5 backdrop-blur-sm border border-purple-500/20\\\"\u003e\\n                \u003cdiv className=\\\"p-6\\\"\u003e\\n                  \u003ch3 className=\\\"text-xl font-semibold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-4 flex items-center\\\"\u003e\\n                    \u003cLightbulb size={20} className=\\\"text-purple-400 mr-2\\\" /\u003e Remember These Tips\\n                  \u003c/h3\u003e\\n                  \u003cul className=\\\"space-y-3\\\"\u003e\\n                    \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 mt-1\\\" /\u003e\\n                      \u003cspan\u003eStart simple - you\u0027ll get better with practice\u003c/span\u003e\\n                    \u003c/li\u003e\\n                    \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 mt-1\\\" /\u003e\\n                      \u003cspan\u003eBe clear about what you want\u003c/span\u003e\\n                    \u003c/li\u003e\\n                    \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 mt-1\\\" /\u003e\\n                      \u003cspan\u003eTry different ways if needed\u003c/span\u003e\\n                    \u003c/li\u003e\\n                    \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                      \u003cStar size={16} className=\\\"text-purple-400 mr-2 mt-1\\\" /\u003e\\n                      \u003cspan\u003eHave fun exploring!\u003c/span\u003e\\n                    \u003c/li\u003e\\n                  \u003c/ul\u003e\\n                \u003c/div\u003e\\n              \u003c/Card\u003e\\n            \u003c/div\u003e\\n          \u003c/section\u003e\\n\\n          {/* Deep Dive CTA */}\\n          \u003cdiv className=\\\"text-center mt-12\\\"\u003e\\n            \u003cdiv className=\\\"inline-block\\\"\u003e\\n              \u003cdiv className=\\\"relative\\\"\u003e\\n                \u003cdiv className=\\\"absolute -inset-1 bg-gradient-to-r from-purple-600 to-indigo-600 rounded-lg blur opacity-25 group-hover:opacity-40 transition duration-1000 group-hover:duration-200 animate-pulse\\\"\u003e\u003c/div\u003e\\n                \u003cLink to=\\\"/prompt-engineering-guide/examples\\\"\u003e\\n                  \u003cButton \\n                    size=\\\"lg\\\" \\n                    className=\\\"relative bg-gray-900 text-white border border-purple-500/20 hover:border-purple-500/40 shadow-lg shadow-purple-500/10 hover:shadow-purple-500/20 group\\\"\\n                  \u003e                    \u003cdiv className=\\\"flex items-center\\\"\u003e\\n                      \u003cStar size={18} className=\\\"text-purple-400 mr-2\\\" /\u003e\\n                      \u003cspan className=\\\"bg-clip-text text-transparent bg-gradient-to-r from-purple-200 to-indigo-200 group-hover:from-purple-100 group-hover:to-indigo-100 transition-all\\\"\u003e\\n                        Try Real Examples\\n                      \u003c/span\u003e\\n                      \u003cArrowRight className=\\\"ml-2 group-hover:translate-x-1 transition-transform\\\" size={20} /\u003e\\n                    \u003c/div\u003e\\n                  \u003c/Button\u003e\\n                \u003c/Link\u003e\\n              \u003c/div\u003e\\n              \u003cp className=\\\"mt-4 text-gray-400 text-sm\\\"\u003e\\n                Learn from simple examples you can try right now!\\n              \u003c/p\u003e\\n            \u003c/div\u003e\\n          \u003c/div\u003e\\n\\n          {/* Next Lesson Navigation */}\\n          \u003cdiv className=\\\"mt-16 border-t border-gray-800 pt-8\\\"\u003e\\n            \u003cLink to=\\\"/prompt-engineering-guide/basics\\\" \\n              className=\\\"flex items-center justify-between p-6 bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-all rounded-lg group\\\"\\n            \u003e              \u003cdiv className=\\\"flex items-center\\\"\u003e\\n                \u003cdiv className=\\\"h-8 w-8 flex items-center justify-center mr-4\\\"\u003e\\n                  \u003cGraduationCap size={24} className=\\\"text-purple-400\\\" /\u003e\\n                \u003c/div\u003e\\n                \u003cdiv\u003e\\n                  \u003cp className=\\\"text-sm text-purple-400\\\"\u003eNext Step\u003c/p\u003e\\n                  \u003ch3 className=\\\"text-xl font-semibold text-white mt-1 group-hover:text-purple-200 transition-colors\\\"\u003e\\n                    Start Your Journey\\n                  \u003c/h3\u003e\\n                  \u003cp className=\\\"text-gray-400 mt-1\\\"\u003e\\n                    Learn the basics with simple, practical examples\\n                  \u003c/p\u003e\\n                \u003c/div\u003e\\n              \u003c/div\u003e\\n              \u003cArrowRight size={24} className=\\\"text-purple-400 group-hover:translate-x-1 transition-transform\\\" /\u003e\\n            \u003c/Link\u003e\\n          \u003c/div\u003e\\n\\n          {/* Quick Tips Box */}\\n          \u003cdiv className=\\\"mt-8 p-6 bg-purple-500/5 rounded-lg border border-purple-500/20\\\"\u003e\\n            \u003ch3 className=\\\"text-lg font-semibold text-purple-200 mb-4 flex items-center\\\"\u003e\\n              \u003cLightbulb size={20} className=\\\"text-purple-400 mr-2\\\" /\u003e\\n              Quick Tips to Remember\\n            \u003c/h3\u003e\\n            \u003cul className=\\\"space-y-3\\\"\u003e\\n              \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                \u003cCheckCircle2 size={16} className=\\\"text-green-400 mr-2 mt-1\\\" /\u003e\\n                \u003cspan\u003eStart simple - you can always add more details later\u003c/span\u003e\\n              \u003c/li\u003e\\n              \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                \u003cCheckCircle2 size={16} className=\\\"text-green-400 mr-2 mt-1\\\" /\u003e\\n                \u003cspan\u003eBe specific about what you want - think who, what, why, how\u003c/span\u003e\\n              \u003c/li\u003e\\n              \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                \u003cCheckCircle2 size={16} className=\\\"text-green-400 mr-2 mt-1\\\" /\u003e\\n                \u003cspan\u003eIf you don\u0027t get what you want, try asking differently\u003c/span\u003e\\n              \u003c/li\u003e\\n              \u003cli className=\\\"flex items-start text-gray-300\\\"\u003e\\n                \u003cCheckCircle2 size={16} className=\\\"text-green-400 mr-2 mt-1\\\" /\u003e\\n                \u003cspan\u003eHave fun exploring - there\u0027s no \\\"wrong\\\" way to learn!\u003c/span\u003e\\n              \u003c/li\u003e\\n            \u003c/ul\u003e\\n          \u003c/div\u003e\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n      {/* Background gradient overlay */}\\n      \u003cdiv className=\\\"absolute inset-0 bg-gradient-to-b from-gray-900 via-gray-900/95 to-gray-900 pointer-events-none\\\" /\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\nexport default PromptEngineeringGuide;\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\PromptEngineeringGuide.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":26,\"column\":7,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":26,\"endColumn\":33,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[783,783],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import type { ReactNode } from \u0027react\u0027;\\nimport React, { useEffect } from \u0027react\u0027;\\nimport { motion, useAnimation } from \u0027framer-motion\u0027;\\nimport { useInView } from \u0027react-intersection-observer\u0027;\\nimport { Card } from \u0027../components/ui/Card\u0027;\\nimport { Button } from \u0027../components/ui/Button\u0027;\\nimport { Link } from \u0027react-router-dom\u0027;\\nimport { ArrowRight } from \u0027lucide-react\u0027;\\n\\n// AnimatedSection Component\\ninterface AnimatedSectionProps {\\n  children: ReactNode;\\n  className?: string;\\n  as?: \u0027div\u0027 | \u0027section\u0027;\\n}\\n\\nconst AnimatedSection: React.FC\u003cAnimatedSectionProps\u003e = ({ children, className = \u0027\u0027, as = \u0027section\u0027 }) =\u003e {\\n  const controls = useAnimation();\\n  const [ref, inView] = useInView({\\n    triggerOnce: true,\\n    threshold: 0.1,\\n  });\\n\\n  useEffect(() =\u003e {\\n    if (inView) {\\n      controls.start(\u0027visible\u0027);\\n    }\\n  }, [controls, inView]);\\n\\n  const variants = {\\n    hidden: { opacity: 0, y: 50 },\\n    visible: { opacity: 1, y: 0, transition: { duration: 0.6, ease: \u0027easeOut\u0027 } },\\n  };\\n\\n  const MotionComponent = motion[as];\\n\\n  return (\\n    \u003cMotionComponent\\n      ref={ref}\\n      initial=\\\"hidden\\\"\\n      animate={controls}\\n      variants={variants}\\n      className={`mb-24 ${className}`}\\n    \u003e\\n      {children}\\n    \u003c/MotionComponent\u003e\\n  );\\n};\\n\\n// Main Component\\nconst PromptingGuide: React.FC = () =\u003e {\\n  useEffect(() =\u003e {\\n    window.scrollTo({ top: 0, behavior: \u0027smooth\u0027 });\\n  }, []);\\n\\n  return (\\n    \u003cdiv className=\\\"relative min-h-screen bg-gradient-to-b from-gray-900 to-black text-white pt-24 pb-16\\\"\u003e\\n      \u003cdiv className=\\\"absolute top-0 left-0 w-full h-full bg-grid-pattern opacity-10\\\" /\u003e\\n      \u003cdiv className=\\\"container mx-auto px-4 relative z-10\\\"\u003e\\n        \\n        {/* Header */}\\n        \u003cAnimatedSection as=\\\"div\\\" className=\\\"text-center\\\"\u003e\\n          \u003cspan className=\\\"inline-block px-4 py-2 mb-4 text-sm font-semibold text-purple-300 bg-purple-500/10 rounded-full\\\"\u003e\\n            Master the Art of AI Communication\\n          \u003c/span\u003e\\n          \u003ch1 className=\\\"text-4xl sm:text-5xl font-extrabold tracking-tight mb-6 leading-[1.1] py-2 bg-gradient-to-r from-purple-400 to-pink-500 bg-clip-text text-transparent\\\"\u003e\\n            Prompting Guide\\n          \u003c/h1\u003e\\n          \u003cp className=\\\"max-w-3xl mx-auto text-base sm:text-lg text-gray-300/90 mt-8 backdrop-blur-sm px-4 py-4 rounded-lg\\\"\u003e\\n            Unlock the full potential of AI models by learning how to craft effective prompts. Turn your ideas into powerful results.\\n          \u003c/p\u003e\\n        \u003c/AnimatedSection\u003e\\n\\n        {/* Step-by-step Guide */}\\n        \u003cAnimatedSection\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl font-bold text-center mb-12\\\"\u003eYour Journey to Becoming a Prompt Expert\u003c/h2\u003e\\n          \u003cdiv className=\\\"grid grid-cols-1 md:grid-cols-3 gap-8 text-center\\\"\u003e\\n            \u003cdiv className=\\\"flex flex-col items-center\\\"\u003e\\n              \u003cdiv className=\\\"flex items-center justify-center w-16 h-16 mb-4 bg-purple-500/10 rounded-full border border-purple-500/30\\\"\u003e\\n                \u003cspan className=\\\"text-2xl font-bold text-purple-300\\\"\u003e1\u003c/span\u003e\\n              \u003c/div\u003e\\n              \u003ch3 className=\\\"text-base sm:text-lg font-semibold mb-2\\\"\u003eUnderstand the Basics\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-400\\\"\u003eLearn the core principles of how AI interprets your requests.\u003c/p\u003e\\n            \u003c/div\u003e\\n            \u003cdiv className=\\\"flex flex-col items-center\\\"\u003e\\n              \u003cdiv className=\\\"flex items-center justify-center w-16 h-16 mb-4 bg-purple-500/10 rounded-full border border-purple-500/30\\\"\u003e\\n                \u003cspan className=\\\"text-2xl font-bold text-purple-300\\\"\u003e2\u003c/span\u003e\\n              \u003c/div\u003e\\n              \u003ch3 className=\\\"text-base sm:text-lg font-semibold mb-2\\\"\u003eMaster Advanced Techniques\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-400\\\"\u003eExplore methods like zero-shot, few-shot, and chain-of-thought prompting.\u003c/p\u003e\\n            \u003c/div\u003e\\n            \u003cdiv className=\\\"flex flex-col items-center\\\"\u003e\\n              \u003cdiv className=\\\"flex items-center justify-center w-16 h-16 mb-4 bg-purple-500/10 rounded-full border border-purple-500/30\\\"\u003e\\n                \u003cspan className=\\\"text-2xl font-bold text-purple-300\\\"\u003e3\u003c/span\u003e\\n              \u003c/div\u003e\\n              \u003ch3 className=\\\"text-base sm:text-lg font-semibold mb-2\\\"\u003eApply and Innovate\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-400\\\"\u003eUse your skills to solve complex problems and create amazing things.\u003c/p\u003e\\n            \u003c/div\u003e\\n          \u003c/div\u003e\\n        \u003c/AnimatedSection\u003e\\n\\n        {/* What is Prompting? */}\\n        \u003cAnimatedSection\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl font-bold text-center mb-12\\\"\u003eWhat is Prompting?\u003c/h2\u003e\\n          \u003cdiv className=\\\"max-w-4xl mx-auto text-center\\\"\u003e\\n            \u003cp className=\\\"text-base sm:text-lg text-gray-400 mb-6\\\"\u003e\\n              Think of prompting as having a conversation with an AI. It\u0027s the art of giving clear, specific instructions to guide the AI towards the exact result you want. In essence, you\u0027re not just asking a question; you\u0027re \u003cspan className=\\\"text-purple-400 font-semibold\\\"\u003eprogramming the AI with words\u003c/span\u003e.\\n            \u003c/p\u003e\\n            \u003cp className=\\\"text-base sm:text-lg text-gray-400\\\"\u003e\\n              A great prompt is like a good recipeΓÇöit gives the AI all the right ingredients and steps to create something amazing for you.\\n            \u003c/p\u003e\\n          \u003c/div\u003e\\n        \u003c/AnimatedSection\u003e\\n\\n        {/* AI vs. Human Conversation */}\\n        \u003cAnimatedSection\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl font-bold text-center mb-12\\\"\u003eAI vs. Human Conversation\u003c/h2\u003e\\n          \u003cdiv className=\\\"grid grid-cols-1 md:grid-cols-2 gap-8 items-center max-w-5xl mx-auto\\\"\u003e\\n            \u003cdiv className=\\\"bg-gray-800/50 p-4 sm:p-6 rounded-lg border border-gray-700/50\\\"\u003e\\n              \u003ch3 className=\\\"text-lg sm:text-xl font-semibold text-pink-400 mb-4\\\"\u003eTalking to a Human\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-400\\\"\u003eHumans understand context, read between the lines, and use shared experiences to fill in the gaps. You can be vague, and they\u0027ll likely still get what you mean.\u003c/p\u003e\\n              \u003cp className=\\\"text-gray-300 font-mono text-xs sm:text-sm mt-4 p-4 bg-gray-900/50 rounded\\\"\u003e\\\"Hey, can you suggest a dinner spot? Something not too fancy.\\\"\u003c/p\u003e\\n            \u003c/div\u003e\\n            \u003cdiv className=\\\"bg-gray-800/50 p-4 sm:p-6 rounded-lg border border-gray-700/50\\\"\u003e\\n              \u003ch3 className=\\\"text-lg sm:text-xl font-semibold text-cyan-400 mb-4\\\"\u003eTalking to an AI\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-400\\\"\u003eAI needs clear, direct instructions. It doesn\u0027t have personal experiences or intuition, so you need to provide all the necessary details for it to give you the best response.\u003c/p\u003e\\n              \u003cp className=\\\"text-gray-300 font-mono text-xs sm:text-sm mt-4 p-4 bg-gray-900/50 rounded\\\"\u003e\\\"Suggest 3 casual Italian restaurants in San Francisco suitable for a date night, with an average price under $50 per person.\\\"\u003c/p\u003e\\n            \u003c/div\u003e\\n          \u003c/div\u003e\\n        \u003c/AnimatedSection\u003e\\n\\n        {/* Anatomy of a Prompt - Redesigned */}\\n        \u003cAnimatedSection\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl font-bold text-center mb-4\\\"\u003eLet\u0027s Break Down a Prompt\u003c/h2\u003e\\n          \u003cp className=\\\"text-center text-gray-400 max-w-3xl mx-auto mb-12\\\"\u003eA good prompt is made of several key parts. Let\u0027s look at an example and see how they work together.\u003c/p\u003e\\n          \\n          \u003cCard className=\\\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50\\\"\u003e\\n            \u003cdiv className=\\\"p-6 md:p-8\\\"\u003e\\n              {/* The Full Prompt Example */}\\n              \u003cdiv className=\\\"bg-gray-900/50 p-4 sm:p-6 rounded-lg border border-gray-700 mb-8\\\"\u003e\\n                \u003cp className=\\\"text-gray-300 font-mono text-sm sm:text-base leading-relaxed\\\"\u003e\\n                  \u003cspan className=\\\"text-pink-400\\\"\u003eAs an expert storyteller,\u003c/span\u003e \u003cspan className=\\\"text-cyan-400\\\"\u003ewrite a short, suspenseful story (around 200 words)\u003c/span\u003e \u003cspan className=\\\"text-green-400\\\"\u003eabout a mysterious key found in an old library.\u003c/span\u003e \u003cspan className=\\\"text-yellow-400\\\"\u003eEnd the story on a cliffhanger.\u003c/span\u003e\\n                \u003c/p\u003e\\n              \u003c/div\u003e\\n\\n              {/* The Breakdown */}\\n              \u003cdiv className=\\\"space-y-6\\\"\u003e\\n                \u003cdiv className=\\\"flex items-start\\\"\u003e\\n                  \u003cdiv className=\\\"w-8 h-8 rounded-full bg-pink-500/20 flex-shrink-0 mr-4\\\" /\u003e\\n                  \u003cdiv\u003e\\n                    \u003ch4 className=\\\"font-semibold text-base text-pink-400\\\"\u003eThe Role: Set the Persona\u003c/h4\u003e\\n                    \u003cp className=\\\"text-gray-400\\\"\u003eTells the AI \u003cspan className=\\\"font-bold\\\"\u003ewho to be\u003c/span\u003e. This sets the tone, style, and expertise. \u0027Expert storyteller\u0027 gets a very different result than \u0027news reporter\u0027.\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n                \u003cdiv className=\\\"flex items-start\\\"\u003e\\n                  \u003cdiv className=\\\"w-8 h-8 rounded-full bg-cyan-500/20 flex-shrink-0 mr-4\\\" /\u003e\\n                  \u003cdiv\u003e\\n                    \u003ch4 className=\\\"font-semibold text-base text-cyan-400\\\"\u003eThe Task: Define the Goal\u003c/h4\u003e\\n                    \u003cp className=\\\"text-gray-400\\\"\u003eThis is the core instructionΓÇö\u003cspan className=\\\"font-bold\\\"\u003ewhat you want the AI to do\u003c/span\u003e. Being clear and concise is key. Here, it\u0027s to \u0027write a short, suspenseful story\u0027.\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n                \u003cdiv className=\\\"flex items-start\\\"\u003e\\n                  \u003cdiv className=\\\"w-8 h-8 rounded-full bg-green-500/20 flex-shrink-0 mr-4\\\" /\u003e\\n                  \u003cdiv\u003e\\n                    \u003ch4 className=\\\"font-semibold text-base text-green-400\\\"\u003eThe Context: Provide the Details\u003c/h4\u003e\\n                    \u003cp className=\\\"text-gray-400\\\"\u003eThis gives the AI the \u003cspan className=\\\"font-bold\\\"\u003e\u0027who, what, where\u0027\u003c/span\u003e to work with. \u0027A mysterious key in an old library\u0027 provides the essential creative ingredients.\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n                \u003cdiv className=\\\"flex items-start\\\"\u003e\\n                  \u003cdiv className=\\\"w-8 h-8 rounded-full bg-yellow-500/20 flex-shrink-0 mr-4\\\" /\u003e\\n                  \u003cdiv\u003e\\n                    \u003ch4 className=\\\"font-semibold text-base text-yellow-400\\\"\u003eThe Constraint: Set the Rules\u003c/h4\u003e\\n                    \u003cp className=\\\"text-gray-400\\\"\u003eThese are boundaries or specific instructions that guide the output. \u0027End on a cliffhanger\u0027 is a direct rule that shapes the final result.\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/div\u003e\\n            \u003c/div\u003e\\n          \u003c/Card\u003e\\n        \u003c/AnimatedSection\u003e\\n\\n        {/* Call to Action */}\\n        \u003cAnimatedSection as=\\\"div\\\" className=\\\"text-center\\\"\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl font-bold mb-4\\\"\u003eReady to Practice?\u003c/h2\u003e\\n          \u003cp className=\\\"max-w-2xl mx-auto text-base text-gray-400 mb-8\\\"\u003e\\n            Put your new skills to the test in our interactive AI Playground. Experiment, iterate, and become a prompt engineering pro.\\n          \u003c/p\u003e\\n          \u003cLink to=\\\"/prompt-engineering-guide/examples\\\" className=\\\"inline-block\\\"\u003e\\n            \u003cButton size=\\\"lg\\\" className=\\\"group w-full sm:w-auto\\\"\u003e\\n              Go to Playground\\n              \u003cArrowRight className=\\\"w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform\\\" /\u003e\\n            \u003c/Button\u003e\\n          \u003c/Link\u003e\\n        \u003c/AnimatedSection\u003e\\n\\n        {/* Learning Resources Section */}\\n        \u003cAnimatedSection\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl font-bold text-center mb-12\\\"\u003eStart Your Journey\u003c/h2\u003e\\n          \u003cdiv className=\\\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\\\"\u003e\\n            \u003cCard className=\\\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 p-6 text-center flex flex-col\\\"\u003e\\n              \u003ch3 className=\\\"text-lg sm:text-xl font-semibold text-white mb-4\\\"\u003eLearn the Basics\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-400 mb-6 flex-grow\\\"\u003eGrasp the fundamental concepts and start writing effective prompts from day one.\u003c/p\u003e\\n              \u003cLink to=\\\"/prompt-engineering-guide/basics\\\" className=\\\"mt-auto\\\"\u003e\\n                \u003cButton variant=\\\"outline\\\" className=\\\"w-full group text-purple-300 border-purple-500/30 hover:bg-purple-500/10\\\"\u003e\\n                  Start Learning\\n                  \u003cArrowRight className=\\\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\\\" /\u003e\\n                \u003c/Button\u003e\\n              \u003c/Link\u003e\\n            \u003c/Card\u003e\\n            \u003cCard className=\\\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 p-6 text-center flex flex-col\\\"\u003e\\n              \u003ch3 className=\\\"text-lg sm:text-xl font-semibold text-white mb-4\\\"\u003eExplore Techniques\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-400 mb-6 flex-grow\\\"\u003eDive into advanced methods to tackle more complex tasks and refine your AI interactions.\u003c/p\u003e\\n              \u003cLink to=\\\"/prompt-engineering-guide/techniques\\\" className=\\\"mt-auto\\\"\u003e\\n                \u003cButton variant=\\\"outline\\\" className=\\\"w-full group text-purple-300 border-purple-500/30 hover:bg-purple-500/10\\\"\u003e\\n                  Explore Techniques\\n                  \u003cArrowRight className=\\\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\\\" /\u003e\\n                \u003c/Button\u003e\\n              \u003c/Link\u003e\\n            \u003c/Card\u003e\\n          \u003c/div\u003e\\n        \u003c/AnimatedSection\u003e\\n\\n      \u003c/div\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\nexport default PromptingGuide;\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\Resources.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\TermsOfService.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\CategoriesOverview.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":117,\"column\":23,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":117,\"endColumn\":62,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[4627,4627],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React, { useEffect } from \u0027react\u0027;\\r\\nimport { useNavigate } from \u0027react-router-dom\u0027;\\r\\nimport { Search } from \u0027lucide-react\u0027;\\r\\nimport { Button } from \u0027../../components/ui/Button\u0027;\\r\\nimport { Card } from \u0027../../components/ui/Card\u0027;\\r\\nimport { useSearchCategories } from \u0027../../hooks/useSearchCategories\u0027;\\r\\nimport type { LucideIcon } from \u0027lucide-react\u0027;\\r\\n\\r\\ninterface Subcategory {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  description: string;\\r\\n  examples: string[];\\r\\n  skillLevel: \u0027Beginner\u0027 | \u0027Intermediate\u0027 | \u0027Advanced\u0027;\\r\\n}\\r\\n\\r\\ninterface Category {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  icon: LucideIcon;\\r\\n  description: string;\\r\\n  promptCount: number;\\r\\n  subcategories: Subcategory[];\\r\\n  bgGradient: string;\\r\\n  trending?: boolean;\\r\\n  featured?: boolean;\\r\\n}\\r\\n\\r\\nconst CategoriesOverview: React.FC = () =\u003e {\\r\\n  const navigate = useNavigate();\\r\\n  const { searchQuery, handleSearch, filteredCategories, totalResults } = useSearchCategories();\\r\\n\\r\\n  useEffect(() =\u003e {\\r\\n    window.scrollTo(0, 0);\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    \u003cdiv className=\\\"pb-16\\\"\u003e\\r\\n      {/* Header */}\\r\\n      \u003cdiv className=\\\"mb-12\\\"\u003e\\r\\n        \u003ch1 className=\\\"text-3xl sm:text-4xl font-bold text-white mb-4\\\"\u003e\\r\\n          All Categories\\r\\n        \u003c/h1\u003e\\r\\n        \u003cp className=\\\"text-lg sm:text-xl text-gray-400\\\"\u003e\\r\\n          Browse our complete collection of AI prompt categories\\r\\n        \u003c/p\u003e\\r\\n      \u003c/div\u003e\\r\\n\\r\\n      {/* Search and Filter */}\\r\\n      \u003cdiv className=\\\"mb-10\\\"\u003e\\r\\n        \u003cdiv className=\\\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-4 border border-gray-700/50\\\"\u003e\\r\\n          \u003cdiv className=\\\"relative\\\"\u003e\\r\\n            \u003cinput\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"Search all categories...\\\"\\r\\n              value={searchQuery}\\r\\n              onChange={(e) =\u003e handleSearch(e.target.value)}\\r\\n              className=\\\"w-full pl-10 pr-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-transparent transition-all\\\"\\r\\n            /\u003e\\r\\n            \u003cSearch className=\\\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\\\" size={20} /\u003e\\r\\n          \u003c/div\u003e\\r\\n          {searchQuery \u0026\u0026 (\\r\\n            \u003cdiv className=\\\"mt-2 text-sm text-gray-400\\\"\u003e\\r\\n              Found {totalResults} {totalResults === 1 ? \u0027category\u0027 : \u0027categories\u0027}\\r\\n            \u003c/div\u003e\\r\\n          )}\\r\\n        \u003c/div\u003e\\r\\n      \u003c/div\u003e\\r\\n\\r\\n      {/* Categories Grid */}\\r\\n      \u003cdiv className=\\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\\\"\u003e\\r\\n        {filteredCategories.map((category: Category) =\u003e {\\r\\n          const Icon = category.icon;\\r\\n          return (\\r\\n            \u003cCard\\r\\n              key={category.id}\\r\\n              className=\\\"relative overflow-hidden hover:border-purple-500/50 transition-all duration-300 group\\\"\\r\\n            \u003e\\r\\n              \u003cdiv className={`absolute inset-0 bg-gradient-to-br ${category.bgGradient} opacity-20 group-hover:opacity-30 transition-opacity`} /\u003e\\r\\n              \\r\\n              \u003cdiv className=\\\"relative p-4 sm:p-4\\\"\u003e\\r\\n                \u003cdiv className=\\\"flex items-center gap-3 mb-4\\\"\u003e\\r\\n                  \u003cdiv className=\\\"p-2 rounded-lg bg-gray-800/50\\\"\u003e\\r\\n                    \u003cIcon className=\\\"w-6 h-6 text-white\\\" /\u003e\\r\\n                  \u003c/div\u003e\\r\\n                  \u003cdiv\u003e\\r\\n                    \u003ch2 className=\\\"text-lg sm:text-xl font-bold text-white group-hover:text-purple-300 transition-colors\\\"\u003e\\r\\n                      {category.name}\\r\\n                    \u003c/h2\u003e\\r\\n                    \u003cp className=\\\"text-gray-400\\\"\u003e\\r\\n                      {category.promptCount} prompts available\\r\\n                    \u003c/p\u003e\\r\\n                  \u003c/div\u003e\\r\\n                \u003c/div\u003e\\r\\n\\r\\n                \u003cp className=\\\"text-sm text-gray-300 mb-3\\\"\u003e\\r\\n                  {category.description}\\r\\n                \u003c/p\u003e\\r\\n\\r\\n                \u003cdiv className=\\\"mb-6\\\"\u003e\\r\\n                  \u003ch3 className=\\\"text-sm font-medium text-gray-400 mb-3\\\"\u003ePopular Categories:\u003c/h3\u003e\\r\\n                  \u003cdiv className=\\\"flex flex-wrap gap-2\\\"\u003e\\r\\n                    {category.subcategories.map((sub: Subcategory) =\u003e (\\r\\n                      \u003cspan\\r\\n                        key={sub.id}\\r\\n                        className=\\\"text-sm px-3 py-1 rounded-full bg-gray-700/50 text-gray-300 border border-gray-600/50 group-hover:border-purple-500/20 transition-colors\\\"\\r\\n                      \u003e\\r\\n                        {sub.name}\\r\\n                      \u003c/span\u003e\\r\\n                    ))}\\r\\n                  \u003c/div\u003e\\r\\n                \u003c/div\u003e\\r\\n\\r\\n                \u003cdiv className=\\\"flex justify-between items-center\\\"\u003e                  \u003cButton\\r\\n                    onClick={() =\u003e {\\r\\n                      window.scrollTo(0, 0);\\r\\n                      navigate(`/categories/${category.id}`);\\r\\n                    }}\\r\\n                    className=\\\"group hover:bg-purple-500\\\"\\r\\n                  \u003e\\r\\n                    Explore Prompts\\r\\n                  \u003c/Button\u003e\\r\\n                  \u003cdiv className=\\\"flex gap-2\\\"\u003e\\r\\n                    {category.trending \u0026\u0026 (\\r\\n                      \u003cspan className=\\\"text-xs px-2 py-1 rounded-full bg-orange-500/20 text-orange-300\\\"\u003e\\r\\n                        Trending\\r\\n                      \u003c/span\u003e\\r\\n                    )}\\r\\n                    {category.featured \u0026\u0026 (\\r\\n                      \u003cspan className=\\\"text-xs px-2 py-1 rounded-full bg-purple-500/20 text-purple-300\\\"\u003e\\r\\n                        Featured\\r\\n                      \u003c/span\u003e\\r\\n                    )}\\r\\n                  \u003c/div\u003e\\r\\n                \u003c/div\u003e\\r\\n              \u003c/div\u003e\\r\\n            \u003c/Card\u003e\\r\\n          );\\r\\n        })}\\r\\n      \u003c/div\u003e\\r\\n\\r\\n      {filteredCategories.length === 0 \u0026\u0026 (\\r\\n        \u003cdiv className=\\\"text-center py-16\\\"\u003e\\r\\n          \u003cSearch size={48} className=\\\"text-gray-500 mx-auto mb-4\\\" /\u003e\\r\\n          \u003ch3 className=\\\"text-xl sm:text-2xl font-semibold text-white mb-2\\\"\u003eNo matching categories found\u003c/h3\u003e\\r\\n          \u003cp className=\\\"text-gray-400\\\"\u003e\\r\\n            Try adjusting your search terms or browse all categories\\r\\n          \u003c/p\u003e\\r\\n        \u003c/div\u003e\\r\\n      )}\\r\\n    \u003c/div\u003e\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default CategoriesOverview;\\r\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\CustomerSupport.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\DataScience.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\EducationTeaching.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\HRRecruitment.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\Healthcare.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\LegalServices.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\MarketingContent.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\SoftwareDevelopment.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\SubcategoryDetail.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":107,\"column\":5,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":107,\"endColumn\":41,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[4681,4681],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React, { useState } from \u0027react\u0027;\\nimport { useParams, Link } from \u0027react-router-dom\u0027;\\nimport { ArrowLeft, ChevronRight, Copy, ThumbsUp, Zap, Lightbulb, Rocket } from \u0027lucide-react\u0027;\\nimport { categories } from \u0027../../data/categories-data\u0027;\\nimport { Button } from \u0027../../components/ui/Button\u0027;\\nimport { Card } from \u0027../../components/ui/Card\u0027;\\n\\ntype SkillLevel = \u0027Beginner\u0027 | \u0027Intermediate\u0027 | \u0027Advanced\u0027;\\n\\ninterface Prompt {\\n  id: string;\\n  title: string;\\n  content: string;\\n  likes: number;\\n  used: number;\\n  skillLevel: SkillLevel;\\n  useCase: string;\\n  promptGroupId?: string; // Link to the practical need group\\n  steps?: string[];\\n  tips?: string[];\\n}\\n\\nconst getSkillLevelIcon = (level: SkillLevel) =\u003e {\\n  switch (level) {\\n    case \u0027Beginner\u0027:\\n      return \u003cZap className=\\\"w-4 h-4 mr-1 text-green-400\\\" /\u003e;\\n    case \u0027Intermediate\u0027:\\n      return \u003cLightbulb className=\\\"w-4 h-4 mr-1 text-yellow-400\\\" /\u003e;\\n    case \u0027Advanced\u0027:\\n      return \u003cRocket className=\\\"w-4 h-4 mr-1 text-red-400\\\" /\u003e;\\n    default:\\n      return null;\\n  }\\n};\\n\\ninterface SubcategoryDetailProps {\\n  categoryId: string;\\n}\\n\\nconst SubcategoryDetail: React.FC\u003cSubcategoryDetailProps\u003e = ({ categoryId }) =\u003e {\\n  const { subcategoryId } = useParams\u003c{ subcategoryId: string }\u003e();\\n  const [activeTab, setActiveTab] = useState\u003cSkillLevel\u003e(\u0027Beginner\u0027);\\n  const [activeGroup, setActiveGroup] = useState\u003cstring | null\u003e(null);\\n\\n  const category = categories.find(cat =\u003e cat.id === categoryId);\\n  const subcategory = category?.subcategories.find(sub =\u003e sub.id === subcategoryId);\\n\\n  if (!category || !subcategory) {\\n    return (\\n      \u003cdiv className=\\\"min-h-screen flex items-center justify-center\\\"\u003e\\n        \u003cdiv className=\\\"text-center\\\"\u003e\\n          \u003ch2 className=\\\"text-2xl font-bold text-white mb-4\\\"\u003eSubcategory not found\u003c/h2\u003e\\n          \u003cLink to=\\\"/categories\\\" className=\\\"text-purple-400 hover:underline\\\"\u003e\\n            Back to Categories\\n          \u003c/Link\u003e\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n    );\\n  }\\n\\n  const getFilteredPrompts = (level: SkillLevel): Prompt[] =\u003e {\\n    // In a real app, these would come from an API or data source\\n    const promptsBySubcategory: Record\u003cstring, Record\u003cSkillLevel, Prompt[]\u003e\u003e = {\\n      \u0027content-creation\u0027: {\\n        \u0027Beginner\u0027: [\\n          { id: \u0027b1\u0027, title: \u0027Basic Blog Introduction\u0027, content: \u0027Write a simple introduction for a blog post about [topic].\u0027, likes: 42, used: 210, skillLevel: \u0027Beginner\u0027, useCase: \u0027Content Creation\u0027, promptGroupId: \u0027content-ideas\u0027 },\\n          { id: \u0027b2\u0027, title: \u0027Simple Script Hook\u0027, content: \u0027Write a 15-second video script hook for a video about [product/service].\u0027, likes: 35, used: 150, skillLevel: \u0027Beginner\u0027, useCase: \u0027Content Creation\u0027, promptGroupId: \u0027scripts-storytelling\u0027 }\\n        ],\\n        \u0027Intermediate\u0027: [\\n          { id: \u0027i1\u0027, title: \u0027Comprehensive Blog Post Outline\u0027, content: \u0027Create a detailed outline for a blog post about [topic].\u0027, likes: 56, used: 189, skillLevel: \u0027Intermediate\u0027, useCase: \u0027Content Creation\u0027, promptGroupId: \u0027content-ideas\u0027 },\\n          { id: \u0027i2\u0027, title: \u0027Repurpose Blog to Social Media\u0027, content: \u0027Take this blog post [paste content] and create 3 social media posts from it.\u0027, likes: 62, used: 200, skillLevel: \u0027Intermediate\u0027, useCase: \u0027Content Creation\u0027, promptGroupId: \u0027content-repurposing\u0027 }\\n        ],\\n        \u0027Advanced\u0027: [\\n          { id: \u0027a1\u0027, title: \u0027In-Depth Guide\u0027, content: \u0027Write a comprehensive guide about [topic].\u0027, likes: 78, used: 245, skillLevel: \u0027Advanced\u0027, useCase: \u0027Content Creation\u0027, promptGroupId: \u0027content-ideas\u0027 },\\n          { id: \u0027a2\u0027, title: \u0027Analyze Content Performance\u0027, content: \u0027Analyze the following metrics [paste metrics] and suggest 3 ways to improve content performance.\u0027, likes: 90, used: 300, skillLevel: \u0027Advanced\u0027, useCase: \u0027Content Creation\u0027, promptGroupId: \u0027performance\u0027 }\\n        ]\\n      },\\n      \u0027social-media\u0027: {\\n        \u0027Beginner\u0027: [\\n          { id: \u0027sm-b1\u0027, title: \u0027Social Media Post\u0027, content: \u0027Create a [platform] post about [topic] with a friendly tone.\u0027, likes: 35, used: 178, skillLevel: \u0027Beginner\u0027, useCase: \u0027Social Media\u0027 }\\n        ],\\n        \u0027Intermediate\u0027: [],\\n        \u0027Advanced\u0027: []\\n      },\\n    };\\n\\n    const prompts = subcategoryId ? (promptsBySubcategory[subcategoryId]?.[level] || []) : [];\\n    \\n    if (activeGroup) {\\n      return prompts.filter(prompt =\u003e prompt.promptGroupId === activeGroup);\\n    }\\n\\n    return prompts;\\n  };\\n\\n  const filteredPrompts = getFilteredPrompts(activeTab);\\n\\n  const promptsByUseCase = filteredPrompts.reduce((acc: Record\u003cstring, Prompt[]\u003e, prompt) =\u003e {\\n    if (!acc[prompt.useCase]) {\\n      acc[prompt.useCase] = [];\\n    }\\n    acc[prompt.useCase].push(prompt);\\n    return acc;\\n  }, {});\\n\\n  const handleCopyPrompt = (text: string) =\u003e {\\n    navigator.clipboard.writeText(text);\\n    // Add toast notification here if needed\\n  };\\n\\n  return (\\n    \u003cdiv className=\\\"pb-16\\\"\u003e\\n      \u003cLink to={`/categories/${categoryId}`} className=\\\"inline-flex items-center text-gray-400 hover:text-white mb-6 transition-colors\\\"\u003e\\n        \u003cArrowLeft className=\\\"w-4 h-4 mr-1\\\" /\u003e\\n        Back to {category.name}\\n      \u003c/Link\u003e\\n\\n      \u003cdiv className=\\\"mb-8\\\"\u003e\\n        \u003ch1 className=\\\"text-2xl sm:text-3xl font-bold text-white\\\"\u003e{subcategory.name}\u003c/h1\u003e\\n        \u003cp className=\\\"text-gray-400 mt-2\\\"\u003e{subcategory.description}\u003c/p\u003e\\n      \u003c/div\u003e\\n\\n      \u003cdiv className=\\\"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8\\\"\u003e\\n        \u003cdiv className=\\\"lg:col-span-2 space-y-6\\\"\u003e\\n\\n          {subcategory.promptGroups \u0026\u0026 subcategory.promptGroups.length \u003e 0 \u0026\u0026 (\\n            \u003cdiv\u003e\\n              \u003ch3 className=\\\"text-lg font-semibold text-white mb-3\\\"\u003ePractical Needs\u003c/h3\u003e\\n              \u003cdiv className=\\\"flex flex-wrap gap-2\\\"\u003e\\n                \u003cButton variant={activeGroup === null ? \u0027default\u0027 : \u0027outline\u0027} onClick={() =\u003e setActiveGroup(null)}\u003e\\n                  All\\n                \u003c/Button\u003e\\n                {subcategory.promptGroups.map(group =\u003e (\\n                  \u003cButton key={group.id} variant={activeGroup === group.id ? \u0027default\u0027 : \u0027outline\u0027} onClick={() =\u003e setActiveGroup(group.id)}\u003e\\n                    {group.name}\\n                  \u003c/Button\u003e\\n                ))}\\n              \u003c/div\u003e\\n            \u003c/div\u003e\\n          )}\\n\\n          \u003cdiv className=\\\"bg-gray-800/50 rounded-lg p-1 border border-gray-700\\\"\u003e\\n            \u003cdiv className=\\\"flex space-x-1\\\"\u003e\\n              {([\u0027Beginner\u0027, \u0027Intermediate\u0027, \u0027Advanced\u0027] as SkillLevel[]).map((level) =\u003e (\\n                \u003cbutton\\n                  key={level}\\n                  onClick={() =\u003e setActiveTab(level)}\\n                  className={`flex-1 py-2 px-2 sm:px-4 text-sm font-medium rounded-md transition-colors ${\\n                    activeTab === level\\n                      ? \u0027bg-gray-700 text-white shadow\u0027\\n                      : \u0027text-gray-300 hover:bg-gray-700/50 hover:text-white\u0027\\n                  }`}\\n                \u003e\\n                  \u003cdiv className=\\\"flex items-center justify-center\\\"\u003e\\n                    {getSkillLevelIcon(level)}\\n                    {level}\\n                  \u003c/div\u003e\\n                \u003c/button\u003e\\n              ))}\\n            \u003c/div\u003e\\n          \u003c/div\u003e\\n\\n          \u003cdiv className=\\\"space-y-8\\\"\u003e\\n            {Object.keys(promptsByUseCase).length \u003e 0 ? (\\n              Object.entries(promptsByUseCase).map(([useCase, prompts]) =\u003e (\\n                \u003cdiv key={useCase} className=\\\"space-y-4\\\"\u003e\\n                  \u003ch3 className=\\\"text-base sm:text-lg font-semibold text-white border-b border-gray-700 pb-2\\\"\u003e{useCase}\u003c/h3\u003e\\n                  \u003cdiv className=\\\"grid gap-4 md:grid-cols-2\\\"\u003e\\n                    {prompts.map((prompt) =\u003e (\\n                      \u003cCard key={prompt.id} className=\\\"bg-gray-800/50 border-gray-700 hover:border-purple-500/30 transition-colors\\\"\u003e\\n                        \u003cdiv className=\\\"p-4 sm:p-5\\\"\u003e\\n                          \u003cdiv className=\\\"flex justify-between items-start mb-3\\\"\u003e\\n                            \u003cdiv className=\\\"flex items-center\\\"\u003e\\n                              {getSkillLevelIcon(prompt.skillLevel)}\\n                              \u003ch3 className=\\\"font-medium text-white\\\"\u003e{prompt.title}\u003c/h3\u003e\\n                            \u003c/div\u003e\\n                            \u003cButton variant=\\\"outline\\\" size=\\\"sm\\\" className=\\\"text-xs text-gray-400 hover:text-white\\\" onClick={() =\u003e handleCopyPrompt(prompt.content)}\u003e\\n                              \u003cCopy className=\\\"w-4 h-4\\\" /\u003e\\n                            \u003c/Button\u003e\\n                          \u003c/div\u003e\\n                          \u003cdiv className=\\\"bg-gray-900/40 p-3 rounded-lg mb-4\\\"\u003e\\n                            \u003cp className=\\\"text-gray-300 text-sm font-mono\\\"\u003e{prompt.content}\u003c/p\u003e\\n                          \u003c/div\u003e\\n                          {prompt.steps \u0026\u0026 (\\n                            \u003cdiv className=\\\"mb-4\\\"\u003e\\n                              \u003ch4 className=\\\"text-xs font-medium text-gray-400 mb-2\\\"\u003eSTEPS:\u003c/h4\u003e\\n                              \u003col className=\\\"text-sm text-gray-300 space-y-1.5\\\"\u003e\\n                                {prompt.steps.map((step, i) =\u003e (\\n                                  \u003cli key={i} className=\\\"flex\\\"\u003e\\n                                    \u003cspan className=\\\"text-purple-400 mr-2\\\"\u003e{i + 1}.\u003c/span\u003e\\n                                    \u003cspan\u003e{step}\u003c/span\u003e\\n                                  \u003c/li\u003e\\n                                ))}\\n                              \u003c/ol\u003e\\n                            \u003c/div\u003e\\n                          )}\\n                          {prompt.tips \u0026\u0026 (\\n                            \u003cdiv className=\\\"mt-4 pt-3 border-t border-gray-700\\\"\u003e\\n                              \u003ch4 className=\\\"text-xs font-medium text-gray-400 mb-2\\\"\u003eTIPS:\u003c/h4\u003e\\n                              \u003cul className=\\\"text-xs text-gray-400 space-y-1\\\"\u003e\\n                                {prompt.tips.map((tip, i) =\u003e (\\n                                  \u003cli key={i} className=\\\"flex items-start\\\"\u003e\\n                                    \u003cspan className=\\\"text-purple-400 mr-1.5\\\"\u003eΓÇó\u003c/span\u003e\\n                                    \u003cspan\u003e{tip}\u003c/span\u003e\\n                                  \u003c/li\u003e\\n                                ))}\\n                              \u003c/ul\u003e\\n                            \u003c/div\u003e\\n                          )}\\n                          \u003cdiv className=\\\"flex items-center justify-between mt-4 pt-3 border-t border-gray-700 text-xs text-gray-500\\\"\u003e\\n                            \u003cdiv className=\\\"flex items-center\\\"\u003e\\n                              \u003cThumbsUp className=\\\"w-3.5 h-3.5 mr-1\\\" /\u003e\\n                              \u003cspan\u003e{prompt.likes}\u003c/span\u003e\\n                              \u003cspan className=\\\"mx-1.5\\\"\u003eΓÇó\u003c/span\u003e\\n                              \u003cspan\u003eUsed {prompt.used} times\u003c/span\u003e\\n                            \u003c/div\u003e\\n                          \u003c/div\u003e\\n                        \u003c/div\u003e\\n                      \u003c/Card\u003e\\n                    ))}\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              ))\\n            ) : (\\n              \u003cdiv className=\\\"text-center py-10\\\"\u003e\\n                \u003cp className=\\\"text-gray-400\\\"\u003eNo prompts found for this selection.\u003c/p\u003e\\n              \u003c/div\u003e\\n            )}\\n          \u003c/div\u003e\\n\\n          \u003cCard className=\\\"bg-gray-800/50 border-gray-700\\\"\u003e\\n            \u003cdiv className=\\\"p-4 sm:p-6\\\"\u003e\\n              \u003ch3 className=\\\"font-semibold text-white mb-3\\\"\u003eTips for {subcategory.name}\u003c/h3\u003e\\n              \u003cul className=\\\"space-y-3 text-gray-300\\\"\u003e\\n                \u003cli className=\\\"flex\\\"\u003e\\n                  \u003cChevronRight className=\\\"w-5 h-5 text-purple-400 mr-2 flex-shrink-0\\\" /\u003e\\n                  \u003cspan\u003eBe specific about your target audience and desired tone.\u003c/span\u003e\\n                \u003c/li\u003e\\n                \u003cli className=\\\"flex\\\"\u003e\\n                  \u003cChevronRight className=\\\"w-5 h-5 text-purple-400 mr-2 flex-shrink-0\\\" /\u003e\\n                  \u003cspan\u003eInclude relevant keywords for better SEO performance.\u003c/span\u003e\\n                \u003c/li\u003e\\n                \u003cli className=\\\"flex\\\"\u003e\\n                  \u003cChevronRight className=\\\"w-5 h-5 text-purple-400 mr-2 flex-shrink-0\\\" /\u003e\\n                  \u003cspan\u003eUse the prompt as a starting point and refine based on results.\u003c/span\u003e\\n                \u003c/li\u003e\\n              \u003c/ul\u003e\\n            \u003c/div\u003e\\n          \u003c/Card\u003e\\n        \u003c/div\u003e\\n\\n        \u003cdiv className=\\\"space-y-6\\\"\u003e\\n          \u003cCard className=\\\"bg-gray-800/50 border-gray-700\\\"\u003e\\n            \u003cdiv className=\\\"p-4 sm:p-6\\\"\u003e\\n              \u003ch3 className=\\\"font-semibold text-white mb-3\\\"\u003eAbout {subcategory.name}\u003c/h3\u003e\\n              \u003cp className=\\\"text-gray-300 text-sm mb-4\\\"\u003e{subcategory.description}\u003c/p\u003e\\n              \u003ch4 className=\\\"text-sm font-medium text-gray-400 mb-2\\\"\u003eCommon Use Cases:\u003c/h4\u003e\\n              \u003cdiv className=\\\"flex flex-wrap gap-2 mb-4\\\"\u003e\\n                {subcategory.examples.map((example, index) =\u003e (\\n                  \u003cspan key={index} className=\\\"text-xs px-2 py-1 rounded-full bg-gray-700/50 text-gray-300 border border-gray-600\\\"\u003e\\n                    {example}\\n                  \u003c/span\u003e\\n                ))}\\n              \u003c/div\u003e\\n              \u003cButton variant=\\\"outline\\\" className=\\\"w-full mt-2\\\"\u003eSuggest a Prompt\u003c/Button\u003e\\n            \u003c/div\u003e\\n          \u003c/Card\u003e\\n\\n          {category.subcategories.length \u003e 1 \u0026\u0026 (\\n            \u003cCard className=\\\"bg-gray-800/50 border-gray-700\\\"\u003e\\n              \u003cdiv className=\\\"p-4 sm:p-6\\\"\u003e\\n                \u003ch3 className=\\\"font-semibold text-white mb-3\\\"\u003eMore in {category.name}\u003c/h3\u003e\\n                \u003cul className=\\\"space-y-2\\\"\u003e\\n                  {category.subcategories\\n                    .filter(sub =\u003e sub.id !== subcategoryId)\\n                    .map((sub) =\u003e (\\n                      \u003cli key={sub.id}\u003e\\n                        \u003cLink to={`/categories/${categoryId}/${sub.id}`} className=\\\"flex items-center text-gray-300 hover:text-white transition-colors\\\"\u003e\\n                          \u003cChevronRight className=\\\"w-4 h-4 mr-1 text-purple-400\\\" /\u003e\\n                          {sub.name}\\n                        \u003c/Link\u003e\\n                      \u003c/li\u003e\\n                    ))}\\n                \u003c/ul\u003e\\n              \u003c/div\u003e\\n            \u003c/Card\u003e\\n          )}\\n        \u003c/div\u003e\\n      \u003c/div\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\nexport default SubcategoryDetail;\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\marketing\\\\AdCopy.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\marketing\\\\ContentCreation.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\marketing\\\\EmailMarketing.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\categories\\\\marketing\\\\SocialMedia.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\prompt-engineering\\\\Basics.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\prompt-engineering\\\\Techniques.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\prompt-engineering\\\\prompt-examples.tsx\",\"messages\":[{\"ruleId\":\"@typescript-eslint/no-floating-promises\",\"severity\":2,\"message\":\"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\",\"line\":16,\"column\":5,\"nodeType\":\"ExpressionStatement\",\"messageId\":\"floatingVoid\",\"endLine\":16,\"endColumn\":41,\"suggestions\":[{\"messageId\":\"floatingFixVoid\",\"fix\":{\"range\":[553,553],\"text\":\"void \"},\"desc\":\"Add void operator to ignore.\"}]}],\"suppressedMessages\":[],\"errorCount\":1,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"import React from \u0027react\u0027;\\nimport { Card } from \u0027../../components/ui/Card\u0027;\\nimport { Copy, CheckCircle2, Circle, Sparkles, BrainCircuit, Code, Lightbulb, ClipboardCopy, ChevronDown } from \u0027lucide-react\u0027;\\nimport { Button } from \u0027../../components/ui/Button\u0027;\\n\\n\\nconst PromptExamples: React.FC = () =\u003e {\\n  React.useEffect(() =\u003e {\\n    window.scrollTo(0, 0);\\n  }, []);\\n\\n    const [copied, setCopied] = React.useState\u003cstring | null\u003e(null);\\n  const [isHowToUseOpen, setIsHowToUseOpen] = React.useState(false);\\n\\n  const copyToClipboard = (text: string) =\u003e {\\n    navigator.clipboard.writeText(text);\\n    setCopied(text);\\n    setTimeout(() =\u003e setCopied(null), 2000); // Reset after 2 seconds\\n  };\\n\\n  const examples = [\\n    {\\n      title: \\\"1. Philosophical \u0026 Ethical Exploration\\\",\\n      icon: \u003cSparkles className=\\\"text-purple-400\\\" size={24} /\u003e,\\n      description: \\\"Explore complex ideas about the future of humanity and technology.\\\",\\n      template: `Act as a [ROLE] and explore [CONCEPT].\\\\nConsider: [ASPECTS_TO_CONSIDER].\\\\nPresent the output as [FORMAT].`,\\n      example: `Act as a futurist philosopher and brainstorm 5 key principles for a \u0027Human-AI Collaboration Bill of Rights\u0027.\\\\nConsider: Ethics, creativity, autonomy, and shared responsibility.\\\\nPresent the output as a numbered list with a brief explanation for each principle.`,\\n    },\\n    {\\n      title: \\\"2. Creative Writing \u0026 Narrative Craft\\\",\\n      icon: \u003cBrainCircuit className=\\\"text-purple-400\\\" size={24} /\u003e,\\n      description: \\\"Craft compelling stories and dialogues exploring complex themes.\\\",\\n      template: `Write a short story about [SCENARIO].\\\\nCharacters: [CHARACTERS].\\\\nSetting: [SETTING].\\\\nTheme: [THEME].`,\\n      example: `Write a short, emotional scene between an elderly artist who is losing their memory and their AI companion who helps them preserve their life\u0027s work.\\\\nCharacters: An 80-year-old painter named Elias and an AI named \u0027Kai\u0027.\\\\nSetting: A dusty, sunlit art studio.\\\\nTheme: Memory, legacy, and the nature of creativity.`,\\n    },\\n    {\\n      title: \\\"3. Themed Web \u0026 UI Design\\\",\\n      icon: \u003cCode className=\\\"text-purple-400\\\" size={24} /\u003e,\\n      description: \\\"Generate web elements that visually represent the core mission of EthosPrompt.\\\",\\n      template: `Generate HTML and CSS for a [ELEMENT] that represents [THEME].\\\\nStyle should be: [STYLE_DETAILS].`,\\n      example: `Generate HTML for a website page for EthosPrompt, a leader in AI-driven solutions. The theme is \u0027Pioneering AI-Human Synergy,\u0027 showcasing EthosPrompt\u0027s crucial role in this technological evolution.\\\\nStyle should be futuristic yet inviting, blending organic shapes with precise, clean lines. Include a compelling title, and an inspiring tagline about the company\u0027s transformative impact.`, \\n    }\\n  ];\\n\\n  return (\\n    \u003cdiv className=\\\"relative min-h-screen pt-24 pb-16\\\"\u003e\\n      \u003cdiv className=\\\"container mx-auto px-4\\\"\u003e\\n\\n        {/* Header */}\\n        \u003cdiv className=\\\"max-w-4xl mx-auto mb-12 text-center\\\"\u003e\\n          \u003ch1 className=\\\"text-3xl sm:text-4xl font-bold mb-6 bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent\\\"\u003e\\n            Welcome to the{\u0027 \u0027}\\n            \u003cspan className=\\\"bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-indigo-400\\\"\u003e\\n              Prompt Playground\\n            \u003c/span\u003e\\n          \u003c/h1\u003e\\n          \u003cp className=\\\"text-base sm:text-lg text-gray-300\\\"\u003e\\n            This is your space to experiment. Copy our example prompts, paste them into your favorite AI tool, and see the magic happen!\\n          \u003c/p\u003e\\n        \u003c/div\u003e\\n\\n        {/* How to Use Section (Collapsible) */}\\n        \u003csection className=\\\"max-w-4xl mx-auto mb-16\\\"\u003e\\n          \u003cdiv \\n            onClick={() =\u003e setIsHowToUseOpen(!isHowToUseOpen)}\\n            className=\\\"cursor-pointer text-xl md:text-2xl font-bold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-4 flex items-center justify-between w-full p-3 md:p-2 rounded-lg hover:bg-gray-800/50 active:bg-gray-800/70 transition-colors\\\"\\n            role=\\\"button\\\"\\n            tabIndex={0}\\n            onKeyDown={(e) =\u003e e.key === \u0027Enter\u0027 \u0026\u0026 setIsHowToUseOpen(!isHowToUseOpen)}\\n            aria-expanded={isHowToUseOpen}\\n            aria-controls=\\\"how-to-use-content\\\"\\n          \u003e\\n            \u003cdiv className=\\\"flex items-center\\\"\u003e\\n              \u003cLightbulb size={20} className=\\\"text-purple-400 mr-2 md:mr-3 flex-shrink-0\\\" /\u003e\\n              \u003cspan className=\\\"text-base sm:text-lg\\\"\u003eHow to Use These Examples\u003c/span\u003e\\n            \u003c/div\u003e\\n            \u003cChevronDown\\n              size={20}\\n              className={`text-purple-400 transition-transform duration-300 flex-shrink-0 ${isHowToUseOpen ? \u0027rotate-180\u0027 : \u0027\u0027}`}\\n              aria-hidden=\\\"true\\\"\\n            /\u003e\\n          \u003c/div\u003e\\n\\n          \u003cdiv \\n            id=\\\"how-to-use-content\\\"\\n            className={`transition-all duration-300 ease-in-out overflow-hidden ${isHowToUseOpen ? \u0027max-h-[2000px] opacity-100\u0027 : \u0027max-h-0 opacity-0\u0027}`}\\n            aria-hidden={!isHowToUseOpen}\\n          \u003e\\n            \u003cCard className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 mt-2 md:mt-4\\\"\u003e\\n              \u003cdiv className=\\\"p-4 sm:p-6\\\"\u003e\\n                \u003cp className=\\\"text-gray-300 text-sm sm:text-base text-center mb-6 md:mb-8\\\"\u003eThis playground is a collection of curated prompts. There\u0027s no AI hereΓÇöinstead, you can copy these examples and use them with your favorite large language model (LLM) to see how they work.\u003c/p\u003e\\n                {/* 3-Step Guide */}\\n                \u003cdiv className=\\\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 sm:gap-6 text-gray-300 mb-6 md:mb-8\\\"\u003e\\n                  \u003cdiv className=\\\"bg-gray-900/50 p-3 sm:p-4 rounded-lg border border-gray-700/50 text-center\\\"\u003e\\n                    \u003cdiv className=\\\"flex items-center justify-center gap-2 sm:gap-3 mb-2\\\"\u003e\\n                      \u003cClipboardCopy size={18} className=\\\"text-purple-300 flex-shrink-0\\\"/\u003e\\n                      \u003ch3 className=\\\"text-base sm:text-lg font-semibold text-white whitespace-nowrap\\\"\u003e1. Copy Example Prompt\u003c/h3\u003e\\n                    \u003c/div\u003e\\n                    \u003cp\u003eClick the copy icon on any template or example.\u003c/p\u003e\\n                  \u003c/div\u003e\\n                  \u003cdiv className=\\\"bg-gray-900/50 p-3 sm:p-4 rounded-lg border border-gray-700/50 text-center\\\"\u003e\\n                    \u003cdiv className=\\\"flex items-center justify-center gap-2 sm:gap-3 mb-2\\\"\u003e\\n                    \u003cBrainCircuit size={18} className=\\\"text-purple-300 flex-shrink-0\\\"/\u003e\\n                    \u003ch3 className=\\\"text-base sm:text-lg font-semibold text-white whitespace-nowrap\\\"\u003e2. Use in an AI Tool\u003c/h3\u003e\\n                  \u003c/div\u003e\\n                    \u003cp\u003ePaste the prompt into one of the AI platforms listed below.\u003c/p\u003e\\n                  \u003c/div\u003e\\n                  \u003cdiv className=\\\"bg-gray-900/50 p-3 sm:p-4 rounded-lg border border-gray-700/50 text-center\\\"\u003e\\n                    \u003cdiv className=\\\"flex items-center justify-center gap-2 sm:gap-3 mb-2\\\"\u003e\\n                    \u003cSparkles size={18} className=\\\"text-purple-300 flex-shrink-0\\\"/\u003e\\n                    \u003ch3 className=\\\"text-base sm:text-lg font-semibold text-white whitespace-nowrap\\\"\u003e3. Experiment\u003c/h3\u003e\\n                  \u003c/div\u003e\\n                    \u003cp\u003eModify the prompt to see how the AI\u0027s response changes.\u003c/p\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n\\n                {/* Recommended AI Platforms */}\\n                \u003cdiv className=\\\"mt-6\\\"\u003e\\n                  \u003ch3 className=\\\"text-base sm:text-lg font-semibold text-white mb-3 sm:mb-4 text-center\\\"\u003ePopular AI Chat Tools\u003c/h3\u003e\\n                  \u003cdiv className=\\\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4\\\"\u003e\\n                    {/* ChatGPT */}\\n                    \u003cdiv className=\\\"bg-gray-800/50 p-3 rounded-lg border-l-2 border-purple-500 hover:bg-gray-800/70 transition-colors\\\"\u003e\\n                      \u003cdiv className=\\\"flex items-center gap-2\\\"\u003e\\n                        \u003cimg src=\\\"/EthosPrompt/images/ai-logos/chatgpt-icon.png\\\" alt=\\\"ChatGPT logo\\\" className=\\\"w-5 h-5 flex-shrink-0\\\" /\u003e\\n                        \u003ca href=\\\"https://chat.openai.com\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" className=\\\"font-medium text-purple-300 hover:underline text-sm sm:text-base break-words\\\"\u003eChatGPT (OpenAI)\u003c/a\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                    {/* Claude */}\\n                    \u003cdiv className=\\\"bg-gray-800/50 p-3 rounded-lg border-l-2 border-blue-400 hover:bg-gray-800/70 transition-colors\\\"\u003e\\n                      \u003cdiv className=\\\"flex items-center gap-2\\\"\u003e\\n                        \u003cimg src=\\\"/EthosPrompt/images/ai-logos/claude-ai-icon.png\\\" alt=\\\"Claude AI logo\\\" className=\\\"w-5 h-5 flex-shrink-0\\\" /\u003e\\n                        \u003ca href=\\\"https://claude.ai\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" className=\\\"font-medium text-blue-300 hover:underline text-sm sm:text-base break-words\\\"\u003eClaude (Anthropic)\u003c/a\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                    {/* Gemini */}\\n                    \u003cdiv className=\\\"bg-gray-800/50 p-3 rounded-lg border-l-2 border-yellow-400 hover:bg-gray-800/70 transition-colors\\\"\u003e\\n                      \u003cdiv className=\\\"flex items-center gap-2\\\"\u003e\\n                        \u003cimg src=\\\"/EthosPrompt/images/ai-logos/google-gemini-icon.png\\\" alt=\\\"Google Gemini logo\\\" className=\\\"w-5 h-5 flex-shrink-0\\\" /\u003e\\n                        \u003ca href=\\\"https://gemini.google.com\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" className=\\\"font-medium text-yellow-300 hover:underline text-sm sm:text-base break-words\\\"\u003eGemini (Google)\u003c/a\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                    {/* Mistral */}\\n                    \u003cdiv className=\\\"bg-gray-800/50 p-3 rounded-lg border-l-2 border-orange-400 hover:bg-gray-800/70 transition-colors\\\"\u003e\\n                      \u003cdiv className=\\\"flex items-center gap-2\\\"\u003e\\n                        \u003cimg src=\\\"/EthosPrompt/images/ai-logos/mistral-ai-icon.png\\\" alt=\\\"Mistral AI logo\\\" className=\\\"w-5 h-5 flex-shrink-0\\\" /\u003e\\n                        \u003ca href=\\\"https://mistral.ai\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" className=\\\"font-medium text-orange-300 hover:underline text-sm sm:text-base break-words\\\"\u003eMistral AI\u003c/a\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                    {/* Ollama */}\\n                    \u003cdiv className=\\\"bg-gray-800/50 p-3 rounded-lg border-l-2 border-red-400 hover:bg-gray-800/70 transition-colors\\\"\u003e\\n                      \u003cdiv className=\\\"flex items-center gap-2\\\"\u003e\\n                        \u003cimg src=\\\"/EthosPrompt/images/ai-logos/Ollama icon.png\\\" alt=\\\"Ollama logo\\\" className=\\\"w-5 h-5 flex-shrink-0\\\" /\u003e\\n                        \u003ca href=\\\"https://ollama.com/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" className=\\\"font-medium text-red-300 hover:underline text-sm sm:text-base break-words\\\"\u003eOllama\u003c/a\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                    {/* Perplexity AI */}\\n                    \u003cdiv className=\\\"bg-gray-800/50 p-3 rounded-lg border-l-2 border-green-400 hover:bg-gray-800/70 transition-colors\\\"\u003e\\n                      \u003cdiv className=\\\"flex items-center gap-2\\\"\u003e\\n                        \u003cimg src=\\\"/EthosPrompt/images/ai-logos/perplexity-ai-icon.png\\\" alt=\\\"Perplexity AI logo\\\" className=\\\"w-5 h-5 flex-shrink-0\\\" /\u003e\\n                        \u003ca href=\\\"https://www.perplexity.ai/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" className=\\\"font-medium text-green-300 hover:underline text-sm sm:text-base break-words\\\"\u003ePerplexity AI\u003c/a\u003e\\n                      \u003c/div\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/div\u003e\\n            \u003c/Card\u003e\\n          \u003c/div\u003e\\n        \u003c/section\u003e\\n\\n        {/* Prompt Examples Section */}\\n        \u003csection className=\\\"max-w-4xl mx-auto\\\"\u003e\\n          \u003ch2 className=\\\"text-2xl sm:text-3xl font-bold bg-gradient-to-r from-gray-200 to-white bg-clip-text text-transparent mb-8 flex items-center\\\"\u003e\\n            \u003cSparkles size={24} className=\\\"text-purple-400 mr-3\\\" /\u003e\\n            Prompt Examples \u0026 Templates\\n          \u003c/h2\u003e\\n          \u003cdiv className=\\\"space-y-8\\\"\u003e\\n            {examples.map((example, index) =\u003e (\\n              \u003cCard key={index} className=\\\"bg-gray-800/30 backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-all\\\"\u003e\\n                \u003cdiv className=\\\"p-4 sm:p-6\\\"\u003e\\n                  \u003cdiv className=\\\"flex items-center gap-3 mb-4\\\"\u003e\\n                    {example.icon}\\n                    \u003ch2 className=\\\"text-lg sm:text-xl font-semibold text-white\\\"\u003e{example.title}\u003c/h2\u003e\\n                  \u003c/div\u003e\\n                  \u003cp className=\\\"text-gray-300 text-sm sm:text-base mb-6\\\"\u003e{example.description}\u003c/p\u003e\\n\\n                  {/* Template */}\\n                  \u003cdiv className=\\\"mb-6\\\"\u003e\\n                    \u003ch3 className=\\\"text-base sm:text-lg font-medium text-purple-400 mb-3\\\"\u003eTemplate\u003c/h3\u003e\\n                    \u003cdiv className=\\\"relative\\\"\u003e\\n                      \u003cpre className=\\\"bg-gray-900/50 border border-gray-700/50 rounded-lg p-3 sm:p-4 text-gray-300 font-mono text-sm whitespace-pre-wrap\\\"\u003e\\n                        {example.template}\\n                      \u003c/pre\u003e\\n                      \u003cButton \\n                        variant=\\\"ghost\\\" \\n                        size=\\\"sm\\\"\\n                        className=\\\"absolute top-2 right-2 text-gray-400 hover:text-purple-400\\\"\\n                        onClick={() =\u003e copyToClipboard(example.template)}\\n                      \u003e\\n                        {copied === example.template ? \u003cCheckCircle2 size={16} /\u003e : \u003cCopy size={16} /\u003e}\\n                      \u003c/Button\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n\\n                  {/* Example */}\\n                  \u003cdiv\u003e\\n                    \u003ch3 className=\\\"text-base sm:text-lg font-medium text-purple-400 mb-3\\\"\u003eExample Usage\u003c/h3\u003e\\n                    \u003cdiv className=\\\"relative\\\"\u003e\\n                      \u003cpre className=\\\"bg-gray-900/50 border border-gray-700/50 rounded-lg p-3 sm:p-4 text-gray-300 font-mono text-sm whitespace-pre-wrap\\\"\u003e\\n                        {example.example}\\n                      \u003c/pre\u003e\\n                      \u003cButton \\n                        variant=\\\"ghost\\\" \\n                        size=\\\"sm\\\"\\n                        className=\\\"absolute top-2 right-2 text-gray-400 hover:text-purple-400\\\"\\n                        onClick={() =\u003e copyToClipboard(example.example)}\\n                      \u003e\\n                        {copied === example.example ? \u003cCheckCircle2 size={16} /\u003e : \u003cCopy size={16} /\u003e}\\n                      \u003c/Button\u003e\\n                    \u003c/div\u003e\\n                  \u003c/div\u003e\\n                \u003c/div\u003e\\n              \u003c/Card\u003e\\n            ))}\\n\\n            {/* Tips Section */}\\n            \u003cCard className=\\\"bg-purple-900/20 border-purple-500/30 backdrop-blur-sm\\\"\u003e\\n              \u003cdiv className=\\\"p-4 sm:p-6\\\"\u003e\\n                \u003ch2 className=\\\"text-base sm:text-lg font-semibold text-white mb-4 flex items-center gap-2\\\"\u003e\\n                  \u003cLightbulb className=\\\"text-purple-400\\\" size={20} /\u003e\\n                  Expert-Level Hints\\n                \u003c/h2\u003e\\n                \u003cul className=\\\"space-y-3 text-gray-300 text-sm sm:text-base\\\"\u003e\\n                  \u003cli className=\\\"flex items-start gap-2\\\"\u003e\\n                    \u003cCircle size={6} className=\\\"text-purple-400 mt-2 flex-shrink-0\\\" /\u003e\\n                    Master \u0027chain-of-thought\u0027 prompting to guide the AI through complex reasoning steps.\\n                  \u003c/li\u003e\\n                  \u003cli className=\\\"flex items-start gap-2\\\"\u003e\\n                    \u003cCircle size={6} className=\\\"text-purple-400 mt-2 flex-shrink-0\\\" /\u003e\\n                    Use \u0027few-shot\u0027 prompting with concrete examples to teach the AI your desired output format.\\n                  \u003c/li\u003e\\n                  \u003cli className=\\\"flex items-start gap-2\\\"\u003e\\n                    \u003cCircle size={6} className=\\\"text-purple-400 mt-2 flex-shrink-0\\\" /\u003e\\n                    Define a clear \u0027persona\u0027 for the AI (e.g., \u0027expert copywriter\u0027) for consistent, context-aware responses.\\n                  \u003c/li\u003e\\n                  \u003cli className=\\\"flex items-start gap-2\\\"\u003e\\n                    \u003cCircle size={6} className=\\\"text-purple-400 mt-2 flex-shrink-0\\\" /\u003e\\n                    Iterate on your prompts as a collaborative process; analyze outputs and refine your instructions.\\n                  \u003c/li\u003e\\n                \u003c/ul\u003e\\n              \u003c/div\u003e\\n            \u003c/Card\u003e\\n          \u003c/div\u003e\\n        \u003c/section\u003e\\n      \u003c/div\u003e\\n    \u003c/div\u003e\\n  );\\n};\\n\\nexport default PromptExamples;\\n\",\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\resources\\\\Blog.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\resources\\\\Documentation.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\resources\\\\FAQ.new.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\resources\\\\FAQ.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\resources\\\\GettingStarted.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pages\\\\resources\\\\Tutorials.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\pure-js-test.js\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\simple-react.test.tsx\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\types\\\\badge.d.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\types\\\\datatable.d.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\types\\\\fragment.d.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\types\\\\global.d.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\types\\\\tabs.d.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\utils\\\\difficultyUtils.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\src\\\\vite-env.d.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\tailwind.config.js\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\test.spec.js\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vite.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.classic-jsx.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.esbuild.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.esm.config.mjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.final-fix.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.final.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.minimal-discovery.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.minimal-working.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.minimal.cjs\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.minimal.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.new.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.no-isolation.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.simple.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]},{\"filePath\":\"D:\\\\react\\\\React-App-000724\\\\project\\\\vitest.swc.config.ts\",\"messages\":[],\"suppressedMessages\":[],\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"usedDeprecatedRules\":[{\"ruleId\":\"no-extra-semi\",\"replacedBy\":[]},{\"ruleId\":\"no-mixed-spaces-and-tabs\",\"replacedBy\":[]}]}]"
