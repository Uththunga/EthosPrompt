// Simple migration script to process a small subset of prompts
const fs = require('fs');
const path = require('path');

// Helper to read file
function readFileSync(filePath) {
  try {
    return fs.readFileSync(filePath, 'utf-8');
  } catch (error) {
    console.error(`Error reading file ${filePath}:`, error);
    process.exit(1);
  }
}

// Helper to write file
function writeFileSync(filePath, content) {
  try {
    const dir = path.dirname(filePath);
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
    }
    fs.writeFileSync(filePath, content);
    console.log(`âœ… Wrote ${filePath}`);
  } catch (error) {
    console.error(`Error writing file ${filePath}:`, error);
    process.exit(1);
  }
}

// Extract prompts from source file
function extractPrompts(sourceContent) {
  try {
    // Simple regex to extract the array content
    const arrayMatch = sourceContent.match(/export const prompts: Prompt\[\] = \[([\s\S]*?)\];/);
    if (!arrayMatch) {
      throw new Error('Could not find prompts array in source file');
    }
    
    // Clean up the content to make it valid JSON
    let jsonContent = arrayMatch[1]
      .replace(/\/\*[\s\S]*?\*\//g, '') // Remove block comments
      .replace(/\/\/.*/g, '') // Remove line comments
      .replace(/,(\s*[}\]])/g, '$1') // Remove trailing commas
      .replace(/([\w\d_]+):/g, '"$1":') // Add quotes around keys
      .replace(/'/g, '"') // Replace single quotes with double quotes
      .replace(/\n/g, ' ') // Replace newlines with spaces
      .replace(/\s+/g, ' ') // Collapse multiple spaces
      .trim();

    // Wrap in array brackets and parse
    return JSON.parse(`[${jsonContent}]`);
  } catch (error) {
    console.error('Error extracting prompts:', error);
    process.exit(1);
  }
}

// Main function
function main() {
  console.log('Starting prompt migration...');
  
  // Paths
  const rootDir = path.join(__dirname, '..');
  const sourceFile = path.join(rootDir, 'src', 'data', 'prompts-data.ts');
  const outputDir = path.join(rootDir, 'src', 'data', 'prompts');
  
  // Read source file
  console.log(`Reading source file: ${sourceFile}`);
  const sourceContent = readFileSync(sourceFile);
  
  // Extract prompts
  console.log('Extracting prompts...');
  const allPrompts = extractPrompts(sourceContent);
  console.log(`Found ${allPrompts.length} prompts`);
  
  // Take a small subset for testing (first 3 prompts)
  const testPrompts = allPrompts.slice(0, 3);
  console.log(`Processing test set of ${testPrompts.length} prompts`);
  
  // Categorize prompts (simple categorization for testing)
  const beginnerPrompt = {
    ...testPrompts[0],
    difficulty: 'Easy',
    estimatedTime: '15 minutes',
    prerequisites: ['Basic understanding of the topic']
  };
  
  const intermediatePrompt = {
    ...testPrompts[1],
    difficulty: 'Challenging',
    estimatedTime: '30 minutes',
    prerequisites: ['Basic understanding of the topic'],
    expectedOutcome: 'Practical application of the concept',
    followUpActions: ['Review materials', 'Practice implementation']
  };
  
  const advancedPrompt = {
    ...testPrompts[2],
    difficulty: 'Advanced',
    estimatedTime: '45 minutes',
    prerequisites: ['Experience with the topic', 'Basic implementation skills'],
    expectedOutcome: 'Comprehensive solution ready for implementation',
    followUpActions: ['Review with team', 'Test in staging'],
    complexityFactors: ['Multiple components', 'Integration requirements'],
    industryContext: 'Cross-industry application'
  };
  
  // Create output files
  const beginnerFile = path.join(outputDir, 'beginner-prompts.ts');
  const intermediateFile = path.join(outputDir, 'intermediate-prompts.ts');
  const advancedFile = path.join(outputDir, 'advanced-prompts.ts');
  
  // Write output files
  writeFileSync(
    beginnerFile,
    `// Auto-generated by simple-migrate.js
import { BeginnerPrompt } from './types';

export const beginnerPrompts: BeginnerPrompt[] = ${JSON.stringify([beginnerPrompt], null, 2)};`
  );
  
  writeFileSync(
    intermediateFile,
    `// Auto-generated by simple-migrate.js
import { IntermediatePrompt } from './types';

export const intermediatePrompts: IntermediatePrompt[] = ${JSON.stringify([intermediatePrompt], null, 2)};`
  );
  
  writeFileSync(
    advancedFile,
    `// Auto-generated by simple-migrate.js
import { AdvancedPrompt } from './types';

export const advancedPrompts: AdvancedPrompt[] = ${JSON.stringify([advancedPrompt], null, 2)};`
  );
  
  console.log('\nMigration complete! Check the output files:');
  console.log(`- ${beginnerFile}`);
  console.log(`- ${intermediateFile}`);
  console.log(`- ${advancedFile}`);
}

// Run the script
main();
