import{r as n}from"./react-vendor-b871PbQG.js";const f="ethosprompt_prompt_bookmarks",O=5,x=()=>{const[o,l]=n.useState([]),[u,p]=n.useState(!0);n.useEffect(()=>{try{const t=localStorage.getItem(f);if(t){const r=JSON.parse(t).filter(s=>s.promptId&&s.title&&s.bookmarkedAt);l(r)}}catch(t){console.error("Error loading prompt bookmarks:",t)}finally{p(!1)}},[]),n.useEffect(()=>{if(!u)try{localStorage.setItem(f,JSON.stringify(o))}catch(t){console.error("Error saving prompt bookmarks:",t)}},[o,u]);const i=n.useCallback(t=>o.some(e=>e.promptId===t),[o]),k=n.useCallback((t,e)=>{if(i(t.id))return!1;const r={promptId:t.id,title:t.title,description:t.description||"",content:t.content,category:t.category||"General",subcategory:t.subcategory||"General",promptGroupId:t.prompt_group_id,difficulty:t.difficulty,tags:t.tags||[],bookmarkedAt:new Date().toISOString(),userNotes:e,originalPrompt:t};return l(s=>[r,...s]),!0},[i]),d=n.useCallback(t=>{const e=o.length;return l(r=>r.filter(s=>s.promptId!==t)),o.length!==e},[o.length]),y=n.useCallback((t,e)=>i(t.id)?d(t.id):k(t,e),[i,k,d]),C=n.useCallback((t,e)=>(l(r=>r.map(s=>s.promptId===t?{...s,userNotes:e}:s)),!0),[]),B=n.useCallback(t=>o.find(e=>e.promptId===t),[o]),b=n.useCallback(t=>{if(!t.trim())return o;const e=t.toLowerCase();return o.filter(r=>r.title.toLowerCase().includes(e)||r.description.toLowerCase().includes(e)||r.content.toLowerCase().includes(e)||r.category.toLowerCase().includes(e)||r.subcategory.toLowerCase().includes(e)||r.tags.some(s=>s.toLowerCase().includes(e))||r.userNotes&&r.userNotes.toLowerCase().includes(e))},[o]),g=n.useCallback(t=>t==="all"?o:o.filter(e=>e.category===t),[o]),I=n.useCallback(t=>o.filter(e=>e.subcategory===t),[o]),h=n.useCallback(()=>{const t={},e={};o.forEach(a=>{t[a.category]=(t[a.category]||0)+1,e[a.subcategory]=(e[a.subcategory]||0)+1});const r=Object.entries(t).map(([a,c])=>({category:a,count:c})).sort((a,c)=>c.count-a.count).slice(0,5),s=[...o].sort((a,c)=>new Date(c.bookmarkedAt).getTime()-new Date(a.bookmarkedAt).getTime()).slice(0,O);return{totalBookmarks:o.length,categoryCounts:t,subcategoryCounts:e,recentBookmarks:s,topCategories:r}},[o]),w=n.useCallback(()=>{l([])},[]),S=n.useCallback(()=>{const t={version:"1.0",exportedAt:new Date().toISOString(),bookmarks:o.map(e=>({...e,originalPrompt:void 0}))};return JSON.stringify(t,null,2)},[o]),A=n.useCallback((t,e="merge")=>{try{const r=JSON.parse(t);if(!r.bookmarks||!Array.isArray(r.bookmarks))throw new Error("Invalid bookmark data format");const s=r.bookmarks.filter(a=>a.promptId&&a.title&&a.bookmarkedAt);return l(e==="replace"?s:a=>{const c=new Set(a.map(m=>m.promptId)),L=s.filter(m=>!c.has(m.promptId));return[...a,...L]}),!0}catch(r){return console.error("Error importing bookmarks:",r),!1}},[]),E=n.useCallback((t,e=1,r=10)=>{const s=g(t),a=(e-1)*r,c=a+r;return{bookmarks:s.slice(a,c),total:s.length,hasMore:c<s.length}},[g]);return{bookmarks:o,isLoading:u,addBookmark:k,removeBookmark:d,toggleBookmark:y,updateBookmarkNotes:C,clearAllBookmarks:w,isBookmarked:i,getBookmark:B,searchBookmarks:b,filterByCategory:g,filterBySubcategory:I,getBookmarkStats:h,getBookmarksByCategory:E,exportBookmarks:S,importBookmarks:A}};export{x as u};
